{"version":3,"file":"veritas-ui-library.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://veritas-ui-library/lib/utils.ts","ng://veritas-ui-library/lib/components/initial-indicator/initial-indicator.component.ts","ng://veritas-ui-library/lib/components/initial-indicator/initial-indicator.module.ts","ng://veritas-ui-library/lib/constants/page.constant.ts","ng://veritas-ui-library/lib/constants/veritas-api.constant.ts","ng://veritas-ui-library/lib/custom-encoder.ts","ng://veritas-ui-library/lib/services/user-controller/user-controller.service.ts","ng://veritas-ui-library/lib/components/comments-popover/comment-form/comment-form.component.ts","ng://veritas-ui-library/lib/enums/comment-entity-type.enum.ts","ng://veritas-ui-library/lib/enums/task-status.enum.ts","ng://veritas-ui-library/lib/enums/respondent-type.enum.ts","ng://veritas-ui-library/lib/enums/question-type.enum.ts","ng://veritas-ui-library/lib/enums/question-single-select-ui-type.enum.ts","ng://veritas-ui-library/lib/enums/question-multi-select-ui-type.enum.ts","ng://veritas-ui-library/lib/enums/questionnaire-view-mode.enum.ts","ng://veritas-ui-library/lib/services/aaa-user/aaa-user.service.ts","ng://veritas-ui-library/lib/services/dash-board-comment-controller/dash-board-comment-controller.service.ts","ng://veritas-ui-library/lib/components/comments-popover/comments-popover.component.ts","ng://veritas-ui-library/lib/components/comments-popover/comments-popover.module.ts","ng://veritas-ui-library/lib/components/delete-modal/delete-modal.component.ts","ng://veritas-ui-library/lib/components/delete-modal/delete-modal.module.ts","ng://veritas-ui-library/lib/components/file-upload/file-download/file-download.component.ts","ng://veritas-ui-library/lib/components/file-upload/file-download/file-download.module.ts","ng://veritas-ui-library/lib/change-detectable-component-base.ts","ng://veritas-ui-library/lib/components/file-upload/file-upload/file-upload.model.ts","ng://veritas-ui-library/lib/components/file-upload/file-upload/file-upload.validation.service.ts","ng://veritas-ui-library/lib/components/file-upload/file-upload/file-upload.component.ts","ng://veritas-ui-library/lib/components/file-upload/file-upload/file-upload.module.ts","ng://veritas-ui-library/lib/components/file-upload/simple-file-upload/simple-file-upload.component.ts","ng://veritas-ui-library/lib/components/file-upload/simple-file-upload/simple-file-upload.module.ts","ng://veritas-ui-library/lib/components/file-upload/simple-file-upload/simple-file-upload-item.model.ts","ng://veritas-ui-library/lib/components/file-upload/simple-file-upload/simple-file-upload-config.model.ts","ng://veritas-ui-library/lib/components/file-upload/simple-file-upload/simple-file-upload-item-container.model.ts","ng://veritas-ui-library/lib/components/question/components/multi-select/multi-select.component.ts","ng://veritas-ui-library/lib/components/question/components/single-select/single-select.component.ts","ng://veritas-ui-library/lib/components/question/components/text/text.component.ts","ng://veritas-ui-library/lib/services/dash-board-survey-controller/dash-board-survey-controller.service.ts","ng://veritas-ui-library/lib/services/questionnaire-utils/questionnaire-utils.service.ts","ng://veritas-ui-library/lib/components/question/question.component.ts","ng://veritas-ui-library/lib/components/question/question.module.ts","ng://veritas-ui-library/lib/components/question-accordion/components/question-more-menu/question-more-menu.component.ts","ng://veritas-ui-library/lib/components/question-accordion/question-accordion.component.ts","ng://veritas-ui-library/lib/components/question-accordion/question-accordion.module.ts","ng://veritas-ui-library/lib/components/task-status-tag/task-status-tag.component.ts","ng://veritas-ui-library/lib/components/task-status-tag/task-status-tag.module.ts","ng://veritas-ui-library/lib/components/questionnaire-content/questionnaire-content.component.ts","ng://veritas-ui-library/lib/components/questionnaire-content/questionnaire-content.module.ts","ng://veritas-ui-library/lib/components/questionnaire-content-modal/questionnaire-content-modal.component.ts","ng://veritas-ui-library/lib/components/questionnaire-content-modal/questionnaire-content-modal.module.ts","ng://veritas-ui-library/lib/models/comment-base.model.ts","ng://veritas-ui-library/lib/models/comment.model.ts","ng://veritas-ui-library/lib/models/comment-reply.model.ts","ng://veritas-ui-library/lib/models/assignee.model.ts","ng://veritas-ui-library/lib/models/attachment.model.ts","ng://veritas-ui-library/veritas-ui-library.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { SimpleChange } from '@angular/core';\r\nimport * as _ from 'lodash';\r\n\r\nexport function stringContains(value: string, search: string): boolean {\r\n  return value.toLowerCase().indexOf(search.toLowerCase()) !== -1;\r\n}\r\n\r\nexport function generateErrorMessage(message: string, httpError: any): string {\r\n  return httpError && httpError.error && httpError.error.message\r\n    ? `${message} (${httpError.error.message})`\r\n    : message;\r\n}\r\n\r\nexport function onlyUnique(value: any, index: number, self: any[]): boolean {\r\n  return (\r\n    index ===\r\n    self.findIndex(\r\n      selfValue => JSON.stringify(selfValue) === JSON.stringify(value)\r\n    )\r\n  );\r\n}\r\n\r\nexport const nameOf = <T>(name: Extract<keyof T, string>): string => name;\r\n\r\nexport function flatMap<TDestination>(\r\n  items: any[],\r\n  key: string\r\n): TDestination[] {\r\n  return ([] as any[]).concat(...items.map(item => item[key]));\r\n}\r\n\r\nexport function getZoneOffset(): string {\r\n  const timezoneOffset = new Date().getTimezoneOffset();\r\n  const isNegative = timezoneOffset < 0;\r\n  let zoneOffset = (timezoneOffset * (isNegative ? -1 : 1)).toString();\r\n\r\n  for (let i = zoneOffset.toString().length; i < 4; i++) {\r\n    zoneOffset = '0' + zoneOffset;\r\n  }\r\n\r\n  return isNegative ? '-' : '+' + zoneOffset;\r\n}\r\n\r\nexport function getEnumKeys(enumType: any): string[] {\r\n  return Object.keys(enumType).filter(\r\n    type => isNaN(<any>type) && type !== 'values'\r\n  );\r\n}\r\n\r\nexport function isPropertyChanged(simpleChange: SimpleChange): boolean {\r\n  return (\r\n    simpleChange && simpleChange.previousValue !== simpleChange.currentValue\r\n  );\r\n}\r\n\r\nexport function omitDeep(collection: any, ...excludeKeys: string[]): any {\r\n  function omitFn(value: any): void {\r\n    if (value && typeof value === 'object') {\r\n      excludeKeys.forEach(key => {\r\n        delete value[key];\r\n      });\r\n    }\r\n  }\r\n\r\n  const clonedCollection = _.cloneDeep(collection);\r\n\r\n  return _.cloneDeepWith(clonedCollection, omitFn);\r\n}\r\n\r\nexport function getProgress(loaded: number, total: number): number {\r\n  return Math.round((loaded / total) * 100);\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  SimpleChanges\r\n} from '@angular/core';\r\n\r\nimport { isPropertyChanged } from '../../utils';\r\n\r\n@Component({\r\n  selector: 'ta-initial-indicator',\r\n  templateUrl: './initial-indicator.component.html',\r\n  styleUrls: ['./initial-indicator.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class InitialIndicatorComponent implements OnInit, OnChanges {\r\n  @Input() public name: string;\r\n\r\n  public initial: string;\r\n\r\n  private readonly splitKey = ' ';\r\n\r\n  constructor() {}\r\n\r\n  public ngOnInit(): void {}\r\n\r\n  public ngOnChanges(changes: SimpleChanges): void {\r\n    if (isPropertyChanged(changes.name)) {\r\n      this.setInitial();\r\n    }\r\n  }\r\n\r\n  private setInitial(): void {\r\n    const nameSplits = this.name.split(this.splitKey);\r\n    this.initial =\r\n      nameSplits.length > 1 ? this.getInitial(nameSplits) : this.name;\r\n  }\r\n\r\n  private getInitial(nameSplits: string[]): string {\r\n    return `${this.getWordByIndex(nameSplits, 0)}${this.getWordByIndex(\r\n      nameSplits,\r\n      1\r\n    )}`;\r\n  }\r\n\r\n  private getWordByIndex(nameSplits: string[], index: number) {\r\n    return nameSplits[index][0].toLocaleUpperCase();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { InitialIndicatorComponent } from './initial-indicator.component';\r\n\r\n@NgModule({\r\n  declarations: [InitialIndicatorComponent],\r\n  imports: [CommonModule],\r\n  exports: [InitialIndicatorComponent]\r\n})\r\nexport class InitialIndicatorModule {}\r\n","export const PAGE_OFFSET_FOR_SERVER = -1;\r\nexport const SEARCH_DEBOUNCE_TIME = 300;\r\n","export const VERITAS_API_PROXY_PREFIX_URL = 'VERITAS_API_PROXY_PREFIX_URL';\r\n","import { HttpParameterCodec } from '@angular/common/http';\r\n\r\nexport class CustomEncoder implements HttpParameterCodec {\r\n  public encodeKey(key: string): string {\r\n    return encodeURIComponent(key);\r\n  }\r\n\r\n  public encodeValue(value: string): string {\r\n    return encodeURIComponent(value);\r\n  }\r\n\r\n  public decodeKey(key: string): string {\r\n    return decodeURIComponent(key);\r\n  }\r\n\r\n  public decodeValue(value: string): string {\r\n    return decodeURIComponent(value);\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { VERITAS_API_PROXY_PREFIX_URL } from '../../constants';\r\nimport { CustomEncoder } from '../../custom-encoder';\r\nimport { PageInterface } from '../../interfaces/page.interface';\r\nimport { Assignee } from '../../models/assignee.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserControllerService {\r\n  private readonly url = `${this.veritasApiProxyPrefixUrl}/users`;\r\n  private readonly maxRows = 10;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    @Inject(VERITAS_API_PROXY_PREFIX_URL)\r\n    private veritasApiProxyPrefixUrl: string\r\n  ) {}\r\n\r\n  public getUsers$(\r\n    page: number,\r\n    search: string = null\r\n  ): Observable<PageInterface<Assignee>> {\r\n    let params = new HttpParams({ encoder: new CustomEncoder() })\r\n      .append('page', page.toString())\r\n      .append('size', this.maxRows.toString());\r\n\r\n    if (search) {\r\n      params = params.append('search', search);\r\n    }\r\n\r\n    return this.httpClient.get<PageInterface<Assignee>>(this.url, {\r\n      params\r\n    });\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { UserControllerService } from '../../../services/user-controller';\r\n\r\n@Component({\r\n  selector: 'ta-comment-form',\r\n  templateUrl: './comment-form.component.html',\r\n  styleUrls: ['./comment-form.component.scss']\r\n})\r\nexport class CommentFormComponent implements OnInit {\r\n  @Input() public commentPlaceholder = '';\r\n  @Input() public canHideActions = false;\r\n\r\n  @Output() public formSubmitted = new EventEmitter<any>();\r\n  @Output() public formCancelled = new EventEmitter<any>();\r\n\r\n  public commentForm = this.formBuilder.group({\r\n    comment: ['', Validators.required]\r\n  });\r\n  public MENTION_CONFIG = {\r\n    triggerChar: '@',\r\n    maxItems: 10,\r\n    labelKey: 'externalUserEmail',\r\n    mentionSelect: this.onMentionSelect.bind(this)\r\n  };\r\n  public mentionUsers: any[] = [];\r\n  public focused = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private userControllerService: UserControllerService\r\n  ) {}\r\n\r\n  public ngOnInit(): void {\r\n    if (this.commentPlaceholder) {\r\n      this.commentForm.patchValue({\r\n        comment: this.commentPlaceholder\r\n      });\r\n    }\r\n  }\r\n\r\n  public onSubmit(): void {\r\n    this.formSubmitted.emit(this.commentForm.value);\r\n  }\r\n\r\n  public onCancel(event: any): void {\r\n    this.formCancelled.emit();\r\n  }\r\n\r\n  public textFocus(): void {\r\n    this.focused = true;\r\n  }\r\n\r\n  public textFocusout(): void {}\r\n\r\n  public async searchTerm(searchTerm: string): Promise<void> {\r\n    const users = await this.userControllerService\r\n      .getUsers$(0, searchTerm)\r\n      .toPromise();\r\n    this.mentionUsers = users.content;\r\n  }\r\n\r\n  public resetForm(): void {\r\n    this.commentForm.reset();\r\n  }\r\n\r\n  private onMentionSelect(user: any): string {\r\n    return `[~${user.externalUserEmail}]`;\r\n  }\r\n}\r\n","export enum CommentEntityTypeEnum {\r\n  Question = 'QUESTION',\r\n  Task = 'TASK'\r\n}\r\n","export enum TaskStatusEnum {\r\n  Open = 'OPEN',\r\n  InProgress = 'IN_PROGRESS',\r\n  InReview = 'IN_REVIEW',\r\n  Closed = 'CLOSED',\r\n  ActionRequired = 'ACTION_REQUIRED'\r\n}\r\n\r\nexport namespace TaskStatusEnum {\r\n  export function getDisplayText(value: TaskStatusEnum): string {\r\n    let result = '';\r\n    switch (value) {\r\n      case TaskStatusEnum.Open:\r\n        result = 'Open';\r\n        break;\r\n\r\n      case TaskStatusEnum.InProgress:\r\n        result = 'In Progress';\r\n        break;\r\n\r\n      case TaskStatusEnum.InReview:\r\n        result = 'In Review';\r\n        break;\r\n\r\n      case TaskStatusEnum.Closed:\r\n        result = 'Closed';\r\n        break;\r\n\r\n      case TaskStatusEnum.ActionRequired:\r\n        result = 'Action Required';\r\n        break;\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n","export enum RespondentTypeEnum {\r\n  Reviewer = 'REVIEWER',\r\n  RemediationTaskReviewer = 'REMEDIATION_TASK_REVIEWER',\r\n  PrivacyTeam = 'PRIVACY_TEAM',\r\n  BusinessOwner = 'BUSINESS_OWNER',\r\n  VendorContact = 'VENDOR_CONTACT',\r\n  HumanResourcesTeam = 'HUMAN_RESOURCES_TEAM',\r\n  ItSecurityTeam = 'IT_SECURITY_TEAM',\r\n  Other = 'OTHER'\r\n}\r\n\r\nexport namespace RespondentTypeEnum {\r\n  export function getDisplayText(value: RespondentTypeEnum): string {\r\n    let result = '';\r\n    switch (value) {\r\n      case RespondentTypeEnum.Reviewer:\r\n        result = 'Reviewer';\r\n        break;\r\n\r\n      case RespondentTypeEnum.RemediationTaskReviewer:\r\n        result = 'Remediation Task Reviewer';\r\n        break;\r\n\r\n      case RespondentTypeEnum.PrivacyTeam:\r\n        result = 'Privacy Team';\r\n        break;\r\n\r\n      case RespondentTypeEnum.BusinessOwner:\r\n        result = 'Business Owner';\r\n        break;\r\n\r\n      case RespondentTypeEnum.VendorContact:\r\n        result = 'Vendor Contact';\r\n        break;\r\n\r\n      case RespondentTypeEnum.HumanResourcesTeam:\r\n        result = 'Human Resources Team';\r\n        break;\r\n\r\n      case RespondentTypeEnum.ItSecurityTeam:\r\n        result = 'IT/Security Team';\r\n        break;\r\n\r\n      case RespondentTypeEnum.Other:\r\n        result = 'Other';\r\n        break;\r\n\r\n      default:\r\n        result = value;\r\n        break;\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n","export enum QuestionTypeEnum {\r\n  SingleSelect = 'SINGLE_SELECT',\r\n  MultiSelect = 'MULTI_SELECT',\r\n  Text = 'TEXT'\r\n}\r\n","export enum QuestionSingleSelectUiTypeEnum {\r\n  Horizontal = 'HORIZONTAL',\r\n  Vertical = 'VERTICAL',\r\n  Slider = 'SLIDER'\r\n}\r\n","export enum QuestionMultiSelectUiTypeEnum {\r\n  Horizontal = 'HORIZONTAL',\r\n  Vertical = 'VERTICAL'\r\n}\r\n","export enum QuestionnaireViewModeEnum {\r\n  All = 'all',\r\n  Answered = 'answered',\r\n  Unanswered = 'unanswered'\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AaaUserService {\r\n  private fullName = '';\r\n\r\n  constructor() {}\r\n\r\n  public set setFullName(fullName: string) {\r\n    this.fullName = fullName;\r\n  }\r\n\r\n  public get getFullName() {\r\n    return this.fullName;\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { VERITAS_API_PROXY_PREFIX_URL } from '../../constants';\r\nimport { PAGE_OFFSET_FOR_SERVER } from '../../constants/page.constant';\r\nimport { CommentEntityTypeEnum } from '../../enums/comment-entity-type.enum';\r\nimport { PageInterface } from '../../interfaces/page.interface';\r\nimport { AnswerDetailResponseInterface } from '../../interfaces/questionnaire.interface';\r\nimport { Comment } from '../../models/comment.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashBoardCommentControllerService {\r\n  private readonly url = `${this.veritasApiProxyPrefixUrl}/comment`;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    @Inject(VERITAS_API_PROXY_PREFIX_URL)\r\n    private veritasApiProxyPrefixUrl: string\r\n  ) {}\r\n\r\n  public getComments$(\r\n    entityId: string,\r\n    page: number = 1,\r\n    maxRows: number = 20\r\n  ): Observable<PageInterface<Comment>> {\r\n    const params = new HttpParams()\r\n      .append('page', (page + PAGE_OFFSET_FOR_SERVER).toString())\r\n      .append('size', maxRows.toString());\r\n\r\n    return this.httpClient\r\n      .get<PageInterface<Comment>>(`${this.url}/${entityId}`, {\r\n        params\r\n      })\r\n      .pipe(\r\n        map(response => {\r\n          response.content.forEach((comment: Comment) => {\r\n            comment.isEditing = false;\r\n          });\r\n          return response;\r\n        })\r\n      );\r\n  }\r\n\r\n  public createComment$(\r\n    entityId: string,\r\n    entityType: CommentEntityTypeEnum,\r\n    message: string\r\n  ): Observable<Comment> {\r\n    const data = {\r\n      entityId,\r\n      entityType,\r\n      messageText: message\r\n    };\r\n\r\n    return this.httpClient.post<Comment>(`${this.url}/${entityId}`, data);\r\n  }\r\n\r\n  public updateComment$(\r\n    entityId: string,\r\n    entityType: CommentEntityTypeEnum,\r\n    commentId: string,\r\n    message: string\r\n  ): Observable<Comment> {\r\n    const data = {\r\n      entityId,\r\n      entityType,\r\n      messageText: message,\r\n      id: commentId\r\n    };\r\n\r\n    return this.httpClient.post<Comment>(\r\n      `${this.url}/${entityId}/${commentId}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  public deleteComment$(\r\n    entityId: string,\r\n    commentId: string\r\n  ): Observable<Comment> {\r\n    return this.httpClient.delete<Comment>(\r\n      `${this.url}/${entityId}/${commentId}`\r\n    );\r\n  }\r\n\r\n  public getQuestionContainerViewPages(taskId: string): Observable<any> {\r\n    return this.httpClient\r\n      .get(`/api/question-survey/${taskId}`)\r\n      .pipe(map(this.mapGetQuestionContainerViewPages));\r\n  }\r\n\r\n  public getAttachmentDownloadUrl$(attachmentId: string): Observable<any> {\r\n    return this.httpClient.get(`${this.url}/attachments/${attachmentId}/url`);\r\n  }\r\n\r\n  private mapGetQuestionContainerViewPages(questionnaire) {\r\n    return questionnaire;\r\n  }\r\n\r\n  public postQuestionDetailResponses(\r\n    answers: AnswerDetailResponseInterface[],\r\n    submitAction: boolean,\r\n    taskId: string\r\n  ): Observable<any> {\r\n    // Assemble post data\r\n    const answersData = {\r\n      answers: answers,\r\n      submitAction: submitAction\r\n    };\r\n    return this.httpClient.post(`/api/question-survey/${taskId}`, answersData);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\n\r\nimport { CommentEntityTypeEnum } from '../../enums';\r\nimport { PageInterface } from '../../interfaces';\r\nimport { Comment } from '../../models';\r\nimport { AaaUserService } from '../../services/aaa-user';\r\nimport { DashBoardCommentControllerService } from '../../services/dash-board-comment-controller';\r\nimport { CommentFormComponent } from './comment-form/comment-form.component';\r\n\r\n@Component({\r\n  selector: 'ta-comments-popover',\r\n  templateUrl: './comments-popover.component.html',\r\n  styleUrls: ['./comments-popover.component.scss']\r\n})\r\nexport class CommentsPopoverComponent implements OnInit, OnDestroy {\r\n  @Input() public entityId: string;\r\n\r\n  @ViewChild('newCommentForm') public newCommentForm: CommentFormComponent;\r\n\r\n  public apiComments: PageInterface<Comment> = null;\r\n  public isLoading = false;\r\n  public isRefreshing = false;\r\n\r\n  public searchUser$: BehaviorSubject<string> = new BehaviorSubject('');\r\n  private _searchUser$: Subscription;\r\n\r\n  constructor(\r\n    private dashBoardCommentControllerService: DashBoardCommentControllerService,\r\n    public aaaUserService: AaaUserService\r\n  ) {}\r\n\r\n  public ngOnInit(): void {}\r\n\r\n  public ngOnDestroy(): void {\r\n    if (this._searchUser$) {\r\n      this._searchUser$.unsubscribe();\r\n    }\r\n  }\r\n\r\n  public async popoverShown(): Promise<void> {\r\n    if (!this.apiComments) {\r\n      this.isLoading = true;\r\n    } else {\r\n      this.isRefreshing = true;\r\n    }\r\n    await this.loadComments();\r\n    this.isLoading = false;\r\n    this.isRefreshing = false;\r\n  }\r\n\r\n  public searchTerm(searchTerm: string): void {\r\n    this.searchUser$.next(searchTerm);\r\n  }\r\n\r\n  public toggleEdit(comment: Comment): void {\r\n    comment.isEditing = comment.isEditing ? false : true;\r\n  }\r\n\r\n  public onSubmit(formValue: any): void {\r\n    if (formValue) {\r\n      this.createComment(formValue.comment);\r\n    }\r\n  }\r\n\r\n  public async updateSubmit(formValue: any, comment: Comment): Promise<void> {\r\n    this.isRefreshing = true;\r\n    await this.updateComment(comment.id, formValue.comment);\r\n    await this.loadComments();\r\n    this.isRefreshing = false;\r\n  }\r\n\r\n  public async createComment(message: string): Promise<void> {\r\n    this.isRefreshing = true;\r\n    await this.dashBoardCommentControllerService\r\n      .createComment$(this.entityId, CommentEntityTypeEnum.Question, message)\r\n      .toPromise();\r\n    await this.loadComments();\r\n    this.newCommentForm.resetForm();\r\n    this.isRefreshing = false;\r\n  }\r\n\r\n  public async updateComment(\r\n    commentId: string,\r\n    message: string\r\n  ): Promise<void> {\r\n    await this.dashBoardCommentControllerService\r\n      .updateComment$(\r\n        this.entityId,\r\n        CommentEntityTypeEnum.Question,\r\n        commentId,\r\n        message\r\n      )\r\n      .toPromise();\r\n  }\r\n\r\n  public async deleteComment(commentId: string): Promise<void> {\r\n    this.isRefreshing = true;\r\n    await this.dashBoardCommentControllerService\r\n      .deleteComment$(this.entityId, commentId)\r\n      .toPromise();\r\n    await this.loadComments();\r\n    this.isRefreshing = false;\r\n  }\r\n\r\n  private async loadComments(): Promise<void> {\r\n    const apiComments: PageInterface<\r\n      any\r\n    > = await this.dashBoardCommentControllerService\r\n      .getComments$(this.entityId)\r\n      .toPromise();\r\n    this.apiComments = apiComments;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TaMentionModule } from '@trustarc/mention';\r\nimport {\r\n  TaButtonsModule,\r\n  TaCheckboxModule,\r\n  TaDropdownModule,\r\n  TaPopoverModule,\r\n  TaSvgIconModule\r\n} from '@trustarc/ui-toolkit';\r\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\r\n\r\nimport { InitialIndicatorModule } from '../initial-indicator';\r\nimport { CommentFormComponent } from './comment-form/comment-form.component';\r\nimport { CommentsPopoverComponent } from './comments-popover.component';\r\n\r\n@NgModule({\r\n  declarations: [CommentsPopoverComponent, CommentFormComponent],\r\n  imports: [\r\n    CommonModule,\r\n    TaSvgIconModule,\r\n    TaButtonsModule,\r\n    TaPopoverModule,\r\n    InitialIndicatorModule,\r\n    TaDropdownModule,\r\n    TaCheckboxModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TaMentionModule,\r\n    NgxSkeletonLoaderModule\r\n  ],\r\n  exports: [CommentsPopoverComponent]\r\n})\r\nexport class CommentsPopoverModule {}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { TaActiveModal } from '@trustarc/ui-toolkit';\r\n\r\n@Component({\r\n  selector: 'ta-delete-modal',\r\n  templateUrl: './delete-modal.component.html',\r\n  styleUrls: ['./delete-modal.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DeleteModalComponent implements OnInit, AfterViewInit {\r\n  @Input() public title: string;\r\n  @Input() public description =\r\n    'The item cannot be recovered once deleted. Are you sure you want to delete this?';\r\n  @Input() public primaryButtonText = 'Delete';\r\n  @Input() public secondaryButtonText = 'Secondary';\r\n  @Input() public cancelButtonText = 'Cancel';\r\n  @Input() public isSecondaryButtonEnabled: boolean;\r\n\r\n  @Output() public clickPrimary = new EventEmitter<any>();\r\n  @Output() public clickSecondary = new EventEmitter<any>();\r\n  @Output() public afterCancelled = new EventEmitter<any>();\r\n\r\n  @ViewChild('primaryButton') public primaryButton: ElementRef;\r\n\r\n  constructor(public modalService: TaActiveModal) {}\r\n\r\n  public ngOnInit(): void {}\r\n\r\n  public ngAfterViewInit(): void {\r\n    setTimeout(() => this.initDefaultFocus());\r\n  }\r\n\r\n  public onClickCancel(): void {\r\n    this.modalService.dismiss('Cancel click');\r\n    this.afterCancelled.emit();\r\n  }\r\n\r\n  private initDefaultFocus(): void {\r\n    (this.primaryButton as any).el.nativeElement.focus();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  TaButtonsModule,\r\n  TaModalModule,\r\n  TaSvgIconModule\r\n} from '@trustarc/ui-toolkit';\r\n\r\nimport { DeleteModalComponent } from './delete-modal.component';\r\n\r\n@NgModule({\r\n  declarations: [DeleteModalComponent],\r\n  imports: [CommonModule, TaButtonsModule, TaSvgIconModule, TaModalModule],\r\n  exports: [DeleteModalComponent],\r\n  entryComponents: [DeleteModalComponent]\r\n})\r\nexport class DeleteModalModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Input,\r\n  OnInit,\r\n  Output\r\n} from '@angular/core';\r\n\r\nimport { SimpleFileUploadConfig } from '../simple-file-upload/simple-file-upload-config.model';\r\nimport { SimpleFileUploadItem } from '../simple-file-upload/simple-file-upload-item.model';\r\n\r\n@Component({\r\n  selector: 'ta-file-download',\r\n  templateUrl: './file-download.component.html',\r\n  styleUrls: ['./file-download.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FileDownloadComponent implements OnInit {\r\n  @HostBinding('class.d-block') public dBlock = true;\r\n\r\n  @Input() public attachments: any[] = [];\r\n  @Input() public files: SimpleFileUploadItem[] = [];\r\n  @Input() public disabled: boolean;\r\n  @Input() public hasDescription: boolean;\r\n  @Input() public config: SimpleFileUploadConfig;\r\n\r\n  @Output() public deleteAttachment = new EventEmitter<any>();\r\n  @Output() public clickAttachment = new EventEmitter<any>();\r\n  @Output() public removeFile = new EventEmitter<number>();\r\n\r\n  constructor() {}\r\n\r\n  public ngOnInit(): void {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TaButtonsModule, TaSvgIconModule } from '@trustarc/ui-toolkit';\r\n\r\nimport { FileDownloadComponent } from './file-download.component';\r\n\r\n@NgModule({\r\n  declarations: [FileDownloadComponent],\r\n  imports: [CommonModule, FormsModule, TaButtonsModule, TaSvgIconModule],\r\n  exports: [FileDownloadComponent]\r\n})\r\nexport class FileDownloadModule {}\r\n","import { ChangeDetectorRef } from '@angular/core';\r\n\r\nexport abstract class ChangeDetectableComponentBase\r\n  implements ChangeDetectorRef {\r\n  private get isChangeDetectorDestroyed(): boolean {\r\n    return this.changeDetectorRef['destroyed'];\r\n  }\r\n\r\n  constructor(protected changeDetectorRef: ChangeDetectorRef) {}\r\n\r\n  markForCheck(): void {\r\n    if (this.isChangeDetectorDestroyed) {\r\n      return;\r\n    }\r\n\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  detach(): void {\r\n    if (this.isChangeDetectorDestroyed) {\r\n      return;\r\n    }\r\n\r\n    this.changeDetectorRef.detach();\r\n  }\r\n\r\n  detectChanges(): void {\r\n    if (this.isChangeDetectorDestroyed) {\r\n      return;\r\n    }\r\n\r\n    this.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  checkNoChanges(): void {\r\n    if (this.isChangeDetectorDestroyed) {\r\n      return;\r\n    }\r\n\r\n    this.changeDetectorRef.checkNoChanges();\r\n  }\r\n\r\n  reattach(): void {\r\n    if (this.isChangeDetectorDestroyed) {\r\n      return;\r\n    }\r\n\r\n    this.changeDetectorRef.reattach();\r\n  }\r\n}\r\n","export interface FileUploadFormatConfig {\r\n  jpg?: boolean;\r\n  png?: boolean;\r\n  gif?: boolean;\r\n  csv?: boolean;\r\n  tsv?: boolean;\r\n  zip?: boolean;\r\n  txt?: boolean;\r\n  doc?: boolean;\r\n  xsl?: boolean;\r\n  ppt?: boolean;\r\n  rtf?: boolean;\r\n  pdf?: boolean;\r\n  css?: boolean;\r\n  js?: boolean;\r\n  html?: boolean;\r\n  code?: boolean;\r\n}\r\n\r\nexport interface FormatInterface {\r\n  [x: string]: {\r\n    exts: string[];\r\n    mime: string[];\r\n  };\r\n}\r\n\r\nexport const FORMAT: FormatInterface = {\r\n  jpg: {\r\n    exts: ['jpg', 'jpeg'],\r\n    mime: [\r\n      'image/jpeg',\r\n      'image/jpg',\r\n      'image/jp_',\r\n      'application/jpg',\r\n      'application/x-jpg',\r\n      'image/pjpeg',\r\n      'image/pipeg',\r\n      'image/vnd.swiftview-jpeg',\r\n      'image/x-xbitmap'\r\n    ]\r\n  },\r\n  png: {\r\n    exts: ['png'],\r\n    mime: ['image/png', 'application/png', 'application/x-png']\r\n  },\r\n  gif: {\r\n    exts: ['gif'],\r\n    mime: ['image/gif', 'image/x-xbitmap', 'image/gi_']\r\n  },\r\n  csv: {\r\n    exts: ['csv'],\r\n    mime: [\r\n      'text/comma-separated-values',\r\n      'text/csv',\r\n      'application/csv',\r\n      'application/excel',\r\n      'application/vnd.ms-excel',\r\n      'application/vnd.msexcel',\r\n      'text/anytext'\r\n    ]\r\n  },\r\n  tsv: {\r\n    exts: ['tsv'],\r\n    mime: ['text/tab-separated-values']\r\n  },\r\n  zip: {\r\n    exts: ['zip'],\r\n    mime: [\r\n      'application/zip',\r\n      'application/x-zip',\r\n      'application/x-zip-compressed',\r\n      'application/octet-stream',\r\n      'application/x-compress',\r\n      'application/x-compressed',\r\n      'multipart/x-zip'\r\n    ]\r\n  },\r\n  txt: {\r\n    exts: ['txt'],\r\n    mime: [\r\n      'text/plain',\r\n      'application/txt',\r\n      'browser/internal',\r\n      'text/anytext',\r\n      'widetext/plain',\r\n      'widetext/paragraph'\r\n    ]\r\n  },\r\n  doc: {\r\n    exts: ['doc', 'docx'],\r\n    mime: [\r\n      'application/msword [official]',\r\n      'application/doc',\r\n      'application/vnd.msword',\r\n      'application/vnd.ms-word',\r\n      'application/winword',\r\n      'application/word',\r\n      'application/x-msw6',\r\n      'application/x-msword',\r\n      'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n    ]\r\n  },\r\n  xsl: {\r\n    exts: ['xsl', 'xlsx'],\r\n    mime: [\r\n      'application/vnd.ms-excel [official]',\r\n      'application/msexcel',\r\n      'application/x-msexcel',\r\n      'application/x-ms-excel',\r\n      'application/vnd.ms-excel',\r\n      'application/x-excel',\r\n      'application/x-dos_ms_excel',\r\n      'application/xls',\r\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n    ]\r\n  },\r\n  ppt: {\r\n    exts: ['ppt', 'pptx'],\r\n    mime: [\r\n      'application/vnd.ms-powerpoint [official]',\r\n      'application/mspowerpoint',\r\n      'application/ms-powerpoint',\r\n      'application/mspowerpnt',\r\n      'application/vnd-mspowerpoint',\r\n      'application/powerpoint',\r\n      'application/x-powerpoint',\r\n      'application/x-m'\r\n    ]\r\n  },\r\n  rtf: {\r\n    exts: ['rtf'],\r\n    mime: [\r\n      'application/rtf',\r\n      'application/x-rtf',\r\n      'text/rtf',\r\n      'text/richtext',\r\n      'application/msword',\r\n      'application/doc',\r\n      'application/x-soffice'\r\n    ]\r\n  },\r\n  pdf: {\r\n    exts: ['pdf'],\r\n    mime: [\r\n      'application/pdf',\r\n      'application/x-pdf',\r\n      'application/acrobat',\r\n      'applications/vnd.pdf',\r\n      'text/pdf',\r\n      'text/x-pdf'\r\n    ]\r\n  },\r\n  css: {\r\n    exts: ['css'],\r\n    mime: ['text/css', 'application/css-stylesheet']\r\n  },\r\n  js: {\r\n    exts: ['js'],\r\n    mime: ['application/x-javascript', 'text/javascript']\r\n  },\r\n  html: {\r\n    exts: ['html'],\r\n    mime: ['text/html', 'text/plain']\r\n  },\r\n  code: {\r\n    exts: ['php', 'ts'],\r\n    mime: []\r\n  }\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport * as _ from 'lodash';\r\n\r\nimport {\r\n  FileUploadFormatConfig,\r\n  FORMAT,\r\n  FormatInterface\r\n} from './file-upload.model';\r\n\r\n@Injectable()\r\nexport class FileUploadValidationService {\r\n  private format: FormatInterface;\r\n\r\n  constructor() {\r\n    this.format = FORMAT;\r\n  }\r\n\r\n  /**\r\n   * Check file size. Return true if valid\r\n   */\r\n  public isValidFileSize(fileSize: number, maxFileSize: number): boolean {\r\n    return fileSize <= maxFileSize;\r\n  }\r\n\r\n  /**\r\n   * Check file mime or extension. Return true if valid\r\n   */\r\n  public isValidExtension(\r\n    file: File,\r\n    formatConfig: FileUploadFormatConfig\r\n  ): boolean {\r\n    return (\r\n      (formatConfig.jpg && this.isJpgFile(file)) ||\r\n      (formatConfig.png && this.isPngFile(file)) ||\r\n      (formatConfig.gif && this.isGifFile(file)) ||\r\n      (formatConfig.csv && this.isCsvFile(file)) ||\r\n      (formatConfig.tsv && this.isTsvFile(file)) ||\r\n      (formatConfig.zip && this.isZipFile(file)) ||\r\n      (formatConfig.txt && this.isTxtFile(file)) ||\r\n      (formatConfig.doc && this.isDocFile(file)) ||\r\n      (formatConfig.xsl && this.isXslFile(file)) ||\r\n      (formatConfig.ppt && this.isPptFile(file)) ||\r\n      (formatConfig.rtf && this.isRtfFile(file)) ||\r\n      (formatConfig.pdf && this.isPdfFile(file)) ||\r\n      (formatConfig.css && this.isCssFile(file)) ||\r\n      (formatConfig.js && this.isJsFile(file)) ||\r\n      (formatConfig.html && this.isHtmlFile(file)) ||\r\n      (formatConfig.code && this.isCodeFile(file))\r\n    );\r\n  }\r\n\r\n  public getAllowedMime(formatConfig: FileUploadFormatConfig): string[] {\r\n    const mime = [];\r\n    for (const format in formatConfig) {\r\n      if (this.format[format]) {\r\n        mime.push(this.format[format].mime);\r\n      }\r\n    }\r\n    return _.union(mime);\r\n  }\r\n\r\n  private checkFileWith(\r\n    mimeTypes: string[],\r\n    validExts: string[],\r\n    file: File\r\n  ): boolean {\r\n    const fileExt = file.name\r\n      .split('.')\r\n      .pop()\r\n      .toLowerCase();\r\n\r\n    const isValidExt =\r\n      (file.type === '' || mimeTypes.length === 0) &&\r\n      validExts.includes(fileExt);\r\n\r\n    const isValidMime = file.type && mimeTypes.includes(file.type);\r\n\r\n    return isValidExt || isValidMime;\r\n  }\r\n\r\n  private isJpgFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.jpg.mime, this.format.jpg.exts, file);\r\n  }\r\n\r\n  private isPngFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.png.mime, this.format.png.exts, file);\r\n  }\r\n\r\n  private isGifFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.gif.mime, this.format.gif.exts, file);\r\n  }\r\n\r\n  private isCsvFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.csv.mime, this.format.csv.exts, file);\r\n  }\r\n\r\n  private isTsvFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.tsv.mime, this.format.tsv.exts, file);\r\n  }\r\n\r\n  private isZipFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.zip.mime, this.format.zip.exts, file);\r\n  }\r\n\r\n  private isTxtFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.txt.mime, this.format.txt.exts, file);\r\n  }\r\n\r\n  private isDocFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.doc.mime, this.format.doc.exts, file);\r\n  }\r\n\r\n  private isXslFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.xsl.mime, this.format.xsl.exts, file);\r\n  }\r\n\r\n  private isPptFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.ppt.mime, this.format.ppt.exts, file);\r\n  }\r\n\r\n  private isRtfFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.rtf.mime, this.format.rtf.exts, file);\r\n  }\r\n\r\n  public isPdfFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.pdf.mime, this.format.pdf.exts, file);\r\n  }\r\n\r\n  private isCssFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.css.mime, this.format.css.exts, file);\r\n  }\r\n\r\n  private isJsFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.js.mime, this.format.js.exts, file);\r\n  }\r\n\r\n  private isHtmlFile(file: File): boolean {\r\n    return this.checkFileWith(\r\n      this.format.html.mime,\r\n      this.format.html.exts,\r\n      file\r\n    );\r\n  }\r\n\r\n  private isCodeFile(file: File): boolean {\r\n    return this.checkFileWith(\r\n      this.format.code.mime,\r\n      this.format.code.exts,\r\n      file\r\n    );\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { ToastService } from '@trustarc/ui-toolkit';\r\n\r\nimport { ChangeDetectableComponentBase } from '../../../change-detectable-component-base';\r\nimport { FileUploadFormatConfig } from './file-upload.model';\r\nimport { FileUploadValidationService } from './file-upload.validation.service';\r\n\r\n@Component({\r\n  selector: 'ta-file-upload',\r\n  templateUrl: './file-upload.component.html',\r\n  styleUrls: ['./file-upload.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => FileUploadComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class FileUploadComponent extends ChangeDetectableComponentBase\r\n  implements OnInit, ControlValueAccessor {\r\n  @Input() public id: string;\r\n  @Input() public prefixText: string;\r\n  @Input() public linkText: string;\r\n  @Input() public suffixText: string;\r\n  @Input() public isMultiple: boolean;\r\n  @Input() public formatConfig: FileUploadFormatConfig = {\r\n    jpg: false,\r\n    png: false,\r\n    gif: false,\r\n    csv: false,\r\n    tsv: false,\r\n    zip: false,\r\n    txt: false,\r\n    doc: false,\r\n    xsl: false,\r\n    ppt: false,\r\n    rtf: false,\r\n    pdf: false,\r\n    css: false,\r\n    js: false,\r\n    html: false,\r\n    code: false\r\n  };\r\n  @Input() public maxFileSize: number;\r\n\r\n  @Output() public afterFilesSelected = new EventEmitter<File[]>();\r\n\r\n  @ViewChild('fileInput') public fileInput: ElementRef;\r\n\r\n  public draggingOver = false;\r\n  public allowedMime: string[] = [];\r\n  public files: File[] = [];\r\n\r\n  private propagateChange: Function = (files: any) => {};\r\n\r\n  constructor(\r\n    protected changeDetectorRef: ChangeDetectorRef,\r\n    private fileUploadValidationService: FileUploadValidationService,\r\n    private toastService: ToastService\r\n  ) {\r\n    super(changeDetectorRef);\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.allowedMime = this.fileUploadValidationService.getAllowedMime(\r\n      this.formatConfig\r\n    );\r\n  }\r\n\r\n  public onDragOver(e: any): void {\r\n    e.preventDefault();\r\n    this.draggingOver = true;\r\n    this.markForCheck();\r\n  }\r\n\r\n  public onDragLeave(e: any): void {\r\n    e.preventDefault();\r\n    this.draggingOver = false;\r\n    this.markForCheck();\r\n  }\r\n\r\n  public selectFiles(files: File[]): void {\r\n    const filesToAdd = Object.assign([], files);\r\n    let isValid = true;\r\n\r\n    if (!this.isValidFilesSize(filesToAdd)) {\r\n      isValid = false;\r\n      this.toastService.error(\r\n        `Attachments size exceeds the allowable limit (maximum: ${this.formatBytes(\r\n          this.maxFileSize\r\n        )})`\r\n      );\r\n    }\r\n\r\n    filesToAdd.forEach((file: File, index) => {\r\n      if (\r\n        !this.fileUploadValidationService.isValidExtension(\r\n          file,\r\n          this.formatConfig\r\n        )\r\n      ) {\r\n        isValid = false;\r\n        this.toastService.error(`${file.name} is invalid file type`);\r\n      }\r\n    });\r\n\r\n    if (!isValid) {\r\n      return;\r\n    }\r\n\r\n    this.propagateChange(filesToAdd);\r\n    this.markForCheck();\r\n    this.afterFilesSelected.emit(filesToAdd);\r\n  }\r\n\r\n  public onDrop(event: any): void {\r\n    event.preventDefault();\r\n    this.onDragLeave(event);\r\n    this.selectFiles(event.dataTransfer.files);\r\n  }\r\n\r\n  public onFilesSelected(event: any): void {\r\n    this.selectFiles(event.target.files);\r\n    event.target.value = null;\r\n  }\r\n\r\n  public openUploadBrowser(): void {\r\n    this.fileInput.nativeElement.click();\r\n  }\r\n\r\n  public registerOnChange(fn): void {\r\n    this.propagateChange = fn;\r\n  }\r\n\r\n  public registerOnTouched(): void {}\r\n\r\n  public writeValue(value: any): void {\r\n    if (value) {\r\n      this.files = value;\r\n    }\r\n  }\r\n\r\n  private formatBytes(bytes: number, decimals = 2): string {\r\n    if (bytes === 0) {\r\n      return '0 Bytes';\r\n    }\r\n\r\n    const k = 1024;\r\n    const dm = decimals < 0 ? 0 : decimals;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n  }\r\n\r\n  private isValidFilesSize(files: File[]): boolean {\r\n    const size = this.getFilesSize(files);\r\n\r\n    return this.maxFileSize\r\n      ? this.fileUploadValidationService.isValidFileSize(size, this.maxFileSize)\r\n      : true;\r\n  }\r\n\r\n  private getFilesSize(files: File[]): number {\r\n    return files\r\n      .map(f => f.size)\r\n      .reduce((totalSize, fileSize) => totalSize + fileSize);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  TaButtonsModule,\r\n  TaSvgIconModule,\r\n  TaTooltipModule\r\n} from '@trustarc/ui-toolkit';\r\n\r\nimport { FileUploadComponent } from './file-upload.component';\r\nimport { FileUploadValidationService } from './file-upload.validation.service';\r\n\r\n@NgModule({\r\n  declarations: [FileUploadComponent],\r\n  imports: [CommonModule, TaButtonsModule, TaSvgIconModule, TaTooltipModule],\r\n  exports: [FileUploadComponent],\r\n  providers: [FileUploadValidationService]\r\n})\r\nexport class FileUploadModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { ChangeDetectableComponentBase } from '../../../change-detectable-component-base';\r\nimport { FileUploadComponent } from '../file-upload/file-upload.component';\r\nimport { SimpleFileUploadConfig } from './simple-file-upload-config.model';\r\nimport { SimpleFileUploadItem } from './simple-file-upload-item.model';\r\n\r\n@Component({\r\n  selector: 'ta-simple-file-upload',\r\n  templateUrl: './simple-file-upload.component.html',\r\n  styleUrls: ['./simple-file-upload.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: SimpleFileUploadComponent,\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class SimpleFileUploadComponent extends ChangeDetectableComponentBase\r\n  implements ControlValueAccessor {\r\n  @Input() public id: string;\r\n  @Input() public prefixText = 'Drag & drop your files to attach or';\r\n  @Input() public linkText = 'browse';\r\n  @Input() public suffixText = 'to choose a file';\r\n  @Input() public attachments: any[] = [];\r\n  @Input() public files: SimpleFileUploadItem[] = [];\r\n  @Input() public config: SimpleFileUploadConfig = {\r\n    attachmentNameKey: 'originalFileName',\r\n    format: { pdf: true, doc: true }\r\n  };\r\n  @Input() public isMultiple = true;\r\n  @Input() public disabled: boolean;\r\n  @Input() public hasDescription: boolean;\r\n  @Input() public maxFileSize = 1048576 - 255; // 1MB - (255 request length)\r\n  @Input() public uploadHidden: boolean;\r\n\r\n  @Output() public afterFilesSelected = new EventEmitter<\r\n    SimpleFileUploadItem[]\r\n  >();\r\n  @Output() public deleteAttachment = new EventEmitter<any>();\r\n  @Output() public clickAttachment = new EventEmitter<any>();\r\n\r\n  @ViewChild(FileUploadComponent)\r\n  public fileUploadComponent: FileUploadComponent;\r\n\r\n  constructor(protected changeDetectorRef: ChangeDetectorRef) {\r\n    super(changeDetectorRef);\r\n  }\r\n\r\n  public onAfterFilesSelected(files: File[], text?: string): void {\r\n    const filesToAdd = files.map(\r\n      file => ({ file, text } as SimpleFileUploadItem)\r\n    );\r\n    this.files = [...this.files, ...filesToAdd];\r\n    this.afterFilesSelected.emit(this.files);\r\n    this.detectChanges();\r\n  }\r\n\r\n  public onRemoveFile(index: number): void {\r\n    this.files.splice(index, 1);\r\n    this.afterFilesSelected.emit(this.files);\r\n    this.detectChanges();\r\n  }\r\n\r\n  public onClickAttachment(attachment: any): void {\r\n    this.clickAttachment.emit(attachment);\r\n  }\r\n\r\n  public onDeleteAttachment(attachment: any): void {\r\n    this.deleteAttachment.emit(attachment);\r\n  }\r\n\r\n  public writeValue(value: any): void {\r\n    if (value) {\r\n      this.files = value;\r\n    }\r\n  }\r\n\r\n  public registerOnChange(): void {}\r\n\r\n  public registerOnTouched(): void {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  TaButtonsModule,\r\n  TaSvgIconModule,\r\n  TaTooltipModule\r\n} from '@trustarc/ui-toolkit';\r\n\r\nimport { FileDownloadModule } from '../file-download/file-download.module';\r\nimport { FileUploadModule } from '../file-upload/file-upload.module';\r\nimport { SimpleFileUploadComponent } from './simple-file-upload.component';\r\n\r\n@NgModule({\r\n  declarations: [SimpleFileUploadComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FileUploadModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TaButtonsModule,\r\n    TaSvgIconModule,\r\n    TaTooltipModule,\r\n    FileDownloadModule\r\n  ],\r\n  exports: [SimpleFileUploadComponent]\r\n})\r\nexport class SimpleFileUploadModule {}\r\n","export class SimpleFileUploadItem {\r\n  file: File;\r\n  text: string;\r\n}\r\n","import { FileUploadFormatConfig } from '../file-upload';\r\n\r\nexport class SimpleFileUploadConfig {\r\n  attachmentNameKey?: string;\r\n  format?: FileUploadFormatConfig;\r\n}\r\n","import { SimpleFileUploadItem } from './simple-file-upload-item.model';\r\n\r\nexport class SimpleFileUploadItemContainer {\r\n  files: SimpleFileUploadItem[];\r\n  progress: number;\r\n  isLoading: boolean;\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  forwardRef,\r\n  Input,\r\n  OnInit\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { QuestionMultiSelectUiTypeEnum } from '../../../../enums';\r\nimport {\r\n  QuestionDetailResponseInterface,\r\n  QuestionTreeInterface\r\n} from '../../../../interfaces';\r\n\r\n@Component({\r\n  selector: 'ta-multi-select',\r\n  templateUrl: './multi-select.component.html',\r\n  styleUrls: ['./multi-select.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => MultiSelectComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class MultiSelectComponent implements OnInit, ControlValueAccessor {\r\n  @Input() public question: QuestionTreeInterface;\r\n\r\n  public readonly questionMultiSelectUiTypeEnum = QuestionMultiSelectUiTypeEnum;\r\n\r\n  constructor() {}\r\n\r\n  public ngOnInit(): void {}\r\n\r\n  public onSelectResponse(response: QuestionDetailResponseInterface): void {\r\n    this.onChange(response);\r\n  }\r\n\r\n  public registerOnChange(fn): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  public registerOnTouched(): void {}\r\n\r\n  public writeValue(value: any): void {}\r\n\r\n  private onChange = (_: any) => {};\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  forwardRef,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { QuestionSingleSelectUiTypeEnum } from '../../../../enums';\r\nimport {\r\n  QuestionDetailResponseInterface,\r\n  QuestionTreeInterface\r\n} from '../../../../interfaces';\r\nimport { isPropertyChanged } from '../../../../utils';\r\n\r\n@Component({\r\n  selector: 'ta-single-select',\r\n  templateUrl: './single-select.component.html',\r\n  styleUrls: ['./single-select.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => SingleSelectComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class SingleSelectComponent\r\n  implements OnInit, OnChanges, ControlValueAccessor {\r\n  @Input() public question: QuestionTreeInterface;\r\n\r\n  public step: number;\r\n  public readonly questionSingleSelectUiTypeEnum = QuestionSingleSelectUiTypeEnum;\r\n\r\n  constructor() {}\r\n\r\n  public ngOnInit(): void {}\r\n\r\n  public ngOnChanges(changes: SimpleChanges): void {\r\n    if (isPropertyChanged(changes.question)) {\r\n      this.updateStep();\r\n    }\r\n  }\r\n\r\n  public onSelectResponse(response: QuestionDetailResponseInterface): void {\r\n    this.onChange(response);\r\n  }\r\n\r\n  public registerOnChange(fn): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  public registerOnTouched(): void {}\r\n\r\n  public writeValue(value: any): void {}\r\n\r\n  private onChange = (_: any) => {};\r\n\r\n  private updateStep(): void {\r\n    const step =\r\n      100 / (this.question.questionDetails.questionDetailResponses.length + 1);\r\n    this.step = +step.toFixed(2);\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  forwardRef,\r\n  Input,\r\n  OnInit\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { QuestionTreeInterface } from '../../../../interfaces';\r\n\r\n@Component({\r\n  selector: 'ta-text',\r\n  templateUrl: './text.component.html',\r\n  styleUrls: ['./text.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => TextComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class TextComponent implements OnInit, ControlValueAccessor {\r\n  @Input() public question: QuestionTreeInterface;\r\n\r\n  public value: string;\r\n\r\n  constructor() {}\r\n\r\n  public ngOnInit(): void {}\r\n\r\n  public onModelChange(value: string): void {\r\n    this.onChange(value);\r\n  }\r\n\r\n  public registerOnChange(fn): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  public registerOnTouched(): void {}\r\n\r\n  public writeValue(value: string): void {\r\n    if (value) {\r\n      this.value = value;\r\n    }\r\n  }\r\n\r\n  private onChange = (_: any) => {};\r\n}\r\n","import { HttpClient, HttpEvent } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { VERITAS_API_PROXY_PREFIX_URL } from '../../constants';\r\nimport {\r\n  AnswerDetailResponseInterface,\r\n  QuestionnaireInterface\r\n} from '../../interfaces/questionnaire.interface';\r\nimport { Attachment } from '../../models/attachment.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashBoardSurveyControllerService {\r\n  private readonly url = `${this.veritasApiProxyPrefixUrl}/question-survey`;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    @Inject(VERITAS_API_PROXY_PREFIX_URL)\r\n    private veritasApiProxyPrefixUrl: string\r\n  ) {}\r\n\r\n  /**\r\n   * GET List Tasks Data\r\n   */\r\n  public getQuestionContainerViewPages(\r\n    recordId: string\r\n  ): Observable<QuestionnaireInterface> {\r\n    return this.httpClient\r\n      .get(`${this.url}/${recordId}`)\r\n      .pipe(map(this.mapGetQuestionContainerViewPages));\r\n  }\r\n\r\n  public postAttachments$(\r\n    recordId: string,\r\n    questionNodeId: string,\r\n    files: File[]\r\n  ): Observable<HttpEvent<Attachment[]>> {\r\n    const formData = new FormData();\r\n    files.forEach(file => formData.append('attachmentFiles', file));\r\n\r\n    return this.httpClient.post<any>(\r\n      `${this.url}/${recordId}/question/${questionNodeId}/attachments`,\r\n      formData,\r\n      {\r\n        reportProgress: true,\r\n        observe: 'events'\r\n      }\r\n    );\r\n  }\r\n\r\n  public deleteAttachment$(\r\n    recordId: string,\r\n    questionNodeId: string,\r\n    attachmentId: string\r\n  ): Observable<Attachment[]> {\r\n    return this.httpClient.delete<Attachment[]>(\r\n      `${\r\n        this.url\r\n      }/${recordId}/question/${questionNodeId}/attachments/${attachmentId}`\r\n    );\r\n  }\r\n\r\n  private mapGetQuestionContainerViewPages(questionnaire) {\r\n    return questionnaire;\r\n  }\r\n\r\n  public postQuestionDetailResponses(\r\n    answers: AnswerDetailResponseInterface[],\r\n    submitAction: boolean,\r\n    recordId: string\r\n  ): Observable<any> {\r\n    // Assemble post data\r\n    const answersData = {\r\n      answers: answers,\r\n      submitAction: submitAction\r\n    };\r\n    return this.httpClient.post(\r\n      `/api/question-survey/${recordId}`,\r\n      answersData\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { QuestionTypeEnum } from '../../enums/question-type.enum';\r\nimport { QuestionnaireViewModeEnum } from '../../enums/questionnaire-view-mode.enum';\r\nimport {\r\n  ConditionDetailConditionInterface,\r\n  ConditionTreeInterface,\r\n  QuestionDetailResponseInterface,\r\n  QuestionDetailsInterface\r\n} from '../../interfaces/questionnaire.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QuestionnaireUtilsService {\r\n  private reviewMode = false;\r\n  private viewMode = QuestionnaireViewModeEnum.All;\r\n  private _viewModeSubject$ = new Subject<any>();\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * Toggles whether to display the questionnaire in review mode.\r\n   */\r\n  public getReviewMode() {\r\n    return this.reviewMode;\r\n  }\r\n\r\n  public setReviewMode(reviewMode: boolean) {\r\n    this.reviewMode = reviewMode;\r\n  }\r\n\r\n  /**\r\n   * Communicate whether to show all, unanswered, or answered questions\r\n   */\r\n  public getViewMode() {\r\n    return this.viewMode;\r\n  }\r\n\r\n  public changeViewMode(viewMode: QuestionnaireViewModeEnum) {\r\n    this.viewMode = viewMode;\r\n    this._viewModeSubject$.next(this.viewMode);\r\n  }\r\n\r\n  public getViewModeObservable(): Observable<string> {\r\n    return this._viewModeSubject$.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Return the question's current anwer. Can be a response object or a string.\r\n   * @param question to check\r\n   */\r\n  public getQuestionAnswer(questionDetails: QuestionDetailsInterface): any {\r\n    switch (questionDetails.questionDetailType) {\r\n      case QuestionTypeEnum.SingleSelect:\r\n        // Loop through responses and if previously selected option was found, patch value\r\n        const questionDetailResponses = questionDetails.questionDetailResponses;\r\n        if (questionDetailResponses) {\r\n          const selectedResponse = questionDetailResponses.find(response => {\r\n            return response.questionDetailResponsesSelected;\r\n          });\r\n\r\n          if (selectedResponse) {\r\n            return selectedResponse;\r\n          }\r\n        }\r\n        break;\r\n      case QuestionTypeEnum.Text:\r\n        const textResponse = questionDetails.questionDetailAnswerText;\r\n        if (textResponse) {\r\n          return textResponse;\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Used by parent question with a conditionTree to see if it should display it\r\n   * @param conditionTree conditionTree\r\n   */\r\n  public getConditionFulfilled(\r\n    conditionTree: ConditionTreeInterface,\r\n    questionDetails: QuestionDetailsInterface\r\n  ): boolean {\r\n    // Depending on question type, get the appropriate answer object/string\r\n    // Currently only supports single select\r\n    const selectedResponse: QuestionDetailResponseInterface = questionDetails.questionDetailResponses.find(\r\n      response => {\r\n        return response.questionDetailResponsesSelected;\r\n      }\r\n    );\r\n\r\n    if (\r\n      conditionTree.conditionDetails &&\r\n      conditionTree.conditionDetails.conditionDetailConditions\r\n    ) {\r\n      const conditionDetailConditions: ConditionDetailConditionInterface[] =\r\n        conditionTree.conditionDetails.conditionDetailConditions;\r\n\r\n      // Loop through all conditions and make sure they are all fulfilled\r\n      for (let i = 0; i < conditionDetailConditions.length; i++) {\r\n        const conditionDetailCondition = conditionDetailConditions[i];\r\n        if (!this.checkCondition(conditionDetailCondition, selectedResponse)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check that given condition is fulfilled by parent question\r\n   * @param conditionDetailCondition conditionDetailCondition\r\n   */\r\n  private checkCondition(\r\n    conditionDetailCondition: ConditionDetailConditionInterface,\r\n    currentResponse: any\r\n  ): boolean {\r\n    // Currently only supports single select\r\n    if (currentResponse && conditionDetailCondition.expressionViewValueId) {\r\n      const answer: QuestionDetailResponseInterface = currentResponse;\r\n      const questionResponseId = answer.questionDetailResponsesId;\r\n      const conditionValueId = conditionDetailCondition.expressionViewValueId;\r\n\r\n      if (questionResponseId === conditionValueId) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\nimport { QuestionnaireViewModeEnum, QuestionTypeEnum } from '../../enums';\r\nimport {\r\n  QuestionDetailsInterface,\r\n  QuestionTreeInterface\r\n} from '../../interfaces';\r\nimport { QuestionnaireUtilsService } from '../../services';\r\n\r\n@Component({\r\n  selector: 'ta-question',\r\n  templateUrl: './question.component.html',\r\n  styleUrls: ['./question.component.scss']\r\n})\r\nexport class QuestionComponent implements OnInit {\r\n  @Input() public question: QuestionTreeInterface = {\r\n    nodeId: null,\r\n    nodeType: null,\r\n    questionDetails: {\r\n      questionDetailText: null,\r\n      questionDetailType: null,\r\n      commentMessageCount: null,\r\n      questionDetailResponses: [],\r\n      questionDetailAnswer: null,\r\n      recordQuestionEntityId: null\r\n    } as QuestionDetailsInterface,\r\n    children: []\r\n  };\r\n\r\n  @Output() public formReady = new EventEmitter<FormGroup>();\r\n\r\n  public readonly questionTypeEnum = QuestionTypeEnum;\r\n  public answerText = '';\r\n  public questionForm: FormGroup;\r\n  public viewMode: QuestionnaireViewModeEnum;\r\n  public questionAnswer: any;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private questionnaireUtilsService: QuestionnaireUtilsService\r\n  ) {\r\n    this.questionForm = this.formBuilder.group({\r\n      answer: null,\r\n      questionId: null\r\n    });\r\n    this.viewMode = this.questionnaireUtilsService.getViewMode();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.processSelectedOption();\r\n    this.formReady.emit(this.questionForm);\r\n\r\n    Object.keys(this.questionForm.controls).forEach(key =>\r\n      this.questionForm.controls[key].valueChanges.subscribe(value =>\r\n        this.formValueOfAnswerChanged(value)\r\n      )\r\n    );\r\n\r\n    this.questionnaireUtilsService\r\n      .getViewModeObservable()\r\n      .subscribe((viewMode: QuestionnaireViewModeEnum) => {\r\n        this.viewMode = viewMode;\r\n      });\r\n  }\r\n\r\n  public isQuestionVisible(): boolean {\r\n    switch (this.viewMode) {\r\n      case QuestionnaireViewModeEnum.All:\r\n        return true;\r\n      case QuestionnaireViewModeEnum.Answered:\r\n        return this.question.isAnswered;\r\n      case QuestionnaireViewModeEnum.Unanswered:\r\n        return !this.question.isAnswered;\r\n      default:\r\n        return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if question was previously answered, and sync it to the form object.\r\n   */\r\n  private processSelectedOption(): void {\r\n    this.questionForm.patchValue(\r\n      {\r\n        questionId: this.question.nodeId,\r\n        answerDescription: this.question.questionDetails.answerDescription\r\n      },\r\n      { emitEvent: false }\r\n    );\r\n    const questionAnswer = this.questionnaireUtilsService.getQuestionAnswer(\r\n      this.question.questionDetails\r\n    );\r\n    if (questionAnswer) {\r\n      this.questionForm.patchValue(\r\n        {\r\n          answer: questionAnswer\r\n        },\r\n        { emitEvent: false }\r\n      );\r\n      this.question.isAnswered = true;\r\n      this.questionAnswer = questionAnswer;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Depending on question type, update the question object\r\n   * @param value form value\r\n   */\r\n  private formValueOfAnswerChanged(value: any): void {\r\n    switch (this.question.questionDetails.questionDetailType) {\r\n      case QuestionTypeEnum.SingleSelect:\r\n        // Loop through responses and if previously selected option was found, patch value\r\n        const questionDetailResponses = this.question.questionDetails\r\n          .questionDetailResponses;\r\n        if (questionDetailResponses) {\r\n          // Mark the current choice false\r\n          const prevResponse = questionDetailResponses.find(response => {\r\n            return response.questionDetailResponsesSelected;\r\n          });\r\n          if (prevResponse) {\r\n            prevResponse.questionDetailResponsesSelected = false;\r\n          }\r\n\r\n          // Mark the new choice true\r\n          const newResponse = questionDetailResponses.find(response => {\r\n            return (\r\n              response.questionDetailResponsesId ===\r\n              value.questionDetailResponsesId\r\n            );\r\n          });\r\n          newResponse.questionDetailResponsesSelected = true;\r\n        }\r\n        break;\r\n\r\n      case QuestionTypeEnum.MultiSelect:\r\n        if (this.question.questionDetails.questionDetailResponses) {\r\n          const questionDetailResponse = this.question.questionDetails.questionDetailResponses.find(\r\n            response =>\r\n              response.questionDetailResponsesId ===\r\n              value.questionDetailResponsesId\r\n          );\r\n          questionDetailResponse.questionDetailResponsesSelected = !questionDetailResponse.questionDetailResponsesSelected;\r\n        }\r\n        break;\r\n\r\n      case QuestionTypeEnum.Text:\r\n        // Update value of questionDetailAnswerText on data object\r\n        this.question.questionDetails.questionDetailAnswerText = value;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // Set answered flag\r\n    if (value && value.answer) {\r\n      this.question.isAnswered = true;\r\n    } else {\r\n      this.question.isAnswered = false;\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  TaButtonsModule,\r\n  TaDropdownModule,\r\n  TaProgressbarModule,\r\n  TaRadioModule,\r\n  TaSvgIconModule,\r\n  TaTooltipModule\r\n} from '@trustarc/ui-toolkit';\r\n\r\nimport { SimpleFileUploadModule } from '../file-upload';\r\nimport { MultiSelectComponent } from './components/multi-select/multi-select.component';\r\nimport { SingleSelectComponent } from './components/single-select/single-select.component';\r\nimport { TextComponent } from './components/text/text.component';\r\nimport { QuestionComponent } from './question.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    QuestionComponent,\r\n    MultiSelectComponent,\r\n    SingleSelectComponent,\r\n    TextComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    TaRadioModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    TaButtonsModule,\r\n    TaSvgIconModule,\r\n    TaDropdownModule,\r\n    TaTooltipModule,\r\n    SimpleFileUploadModule,\r\n    TaProgressbarModule\r\n  ],\r\n  exports: [QuestionComponent]\r\n})\r\nexport class QuestionModule {}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ta-question-more-menu',\r\n  templateUrl: './question-more-menu.component.html',\r\n  styleUrls: ['./question-more-menu.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class QuestionMoreMenuComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  public ngOnInit(): void {}\r\n}\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\n\r\nimport {\r\n  ConditionTreeInterface,\r\n  QuestionDetailsInterface,\r\n  QuestionTreeInterface\r\n} from '../../interfaces';\r\nimport { Attachment } from '../../models';\r\nimport { QuestionnaireUtilsService } from '../../services';\r\nimport {\r\n  SimpleFileUploadComponent,\r\n  SimpleFileUploadItem\r\n} from '../file-upload';\r\n\r\n@Component({\r\n  selector: 'ta-question-accordion',\r\n  templateUrl: './question-accordion.component.html',\r\n  styleUrls: ['./question-accordion.component.scss']\r\n})\r\nexport class QuestionAccordionComponent implements OnInit {\r\n  @Input() public question: QuestionTreeInterface = {\r\n    nodeId: null,\r\n    nodeType: null,\r\n    questionDetails: {\r\n      questionDetailText: null,\r\n      questionDetailType: null,\r\n      commentMessageCount: null,\r\n      questionDetailResponses: [],\r\n      questionDetailAnswer: null,\r\n      recordQuestionEntityId: null\r\n    } as QuestionDetailsInterface,\r\n    children: []\r\n  };\r\n\r\n  @Output() public formReady = new EventEmitter<FormGroup>();\r\n  @Output() public afterFilesSelected = new EventEmitter<\r\n    [QuestionTreeInterface, SimpleFileUploadItem[]]\r\n  >();\r\n  @Output() public deleteAttachment = new EventEmitter<\r\n    [QuestionTreeInterface, Attachment]\r\n  >();\r\n  @Output() public clickAttachment = new EventEmitter<Attachment>();\r\n\r\n  @ViewChild(SimpleFileUploadComponent)\r\n  public simpleFileUploadComponent: SimpleFileUploadComponent;\r\n\r\n  public questionAccordionForm: FormGroup;\r\n  public reviewMode: boolean;\r\n\r\n  private get children(): FormArray {\r\n    return this.questionAccordionForm.get('children') as FormArray;\r\n  }\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private questionnaireUtilsService: QuestionnaireUtilsService\r\n  ) {\r\n    this.questionAccordionForm = this.formBuilder.group({\r\n      question: null,\r\n      children: this.formBuilder.array([]),\r\n      conditionFulfilled: false\r\n    });\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.formReady.emit(this.questionAccordionForm);\r\n    this.questionAccordionForm.valueChanges.subscribe(value => {\r\n      this.formValueChanged(value);\r\n    });\r\n    this.reviewMode = this.questionnaireUtilsService.getReviewMode();\r\n  }\r\n\r\n  /**\r\n   * Propagate main questionForm to questionAccordionForm\r\n   * @param questionForm questionForm\r\n   */\r\n  public questionFormReady(questionForm: FormGroup): void {\r\n    this.questionAccordionForm.setControl('question', questionForm);\r\n  }\r\n\r\n  /**\r\n   * Propagate child questionForm to questionAccordionForm\r\n   * @param questionForm questionForm\r\n   */\r\n  public childFormReady(questionForm: FormGroup): void {\r\n    this.children.push(questionForm);\r\n  }\r\n\r\n  public onAddAttachments(): void {\r\n    this.simpleFileUploadComponent.fileUploadComponent.openUploadBrowser();\r\n  }\r\n\r\n  private formValueChanged(value: any): void {\r\n    // Check if new answer fulfills the condition of this question\r\n    for (let i = 0; i < this.question.children.length; i++) {\r\n      const conditionChild: ConditionTreeInterface = this.question.children[i];\r\n      // set this so that UI can store whether to show follow up questions\r\n      conditionChild.conditionFulfilled = this.questionnaireUtilsService.getConditionFulfilled(\r\n        conditionChild,\r\n        this.question.questionDetails\r\n      );\r\n      this.questionAccordionForm.patchValue(\r\n        { conditionFulfilled: conditionChild.conditionFulfilled },\r\n        { emitEvent: false }\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  TaButtonsModule,\r\n  TaDropdownModule,\r\n  TaProgressbarModule,\r\n  TaRadioModule,\r\n  TaSvgIconModule,\r\n  TaToggleSwitchModule\r\n} from '@trustarc/ui-toolkit';\r\n\r\nimport { CommentsPopoverModule } from '../comments-popover';\r\nimport { SimpleFileUploadModule } from '../file-upload';\r\nimport { QuestionModule } from '../question';\r\nimport { QuestionMoreMenuComponent } from './components/question-more-menu/question-more-menu.component';\r\nimport { QuestionAccordionComponent } from './question-accordion.component';\r\n\r\nconst uiToolkitModules = [\r\n  TaRadioModule,\r\n  TaProgressbarModule,\r\n  TaSvgIconModule,\r\n  TaButtonsModule,\r\n  TaDropdownModule\r\n];\r\n\r\n@NgModule({\r\n  declarations: [QuestionAccordionComponent, QuestionMoreMenuComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    QuestionModule,\r\n    CommentsPopoverModule,\r\n    SimpleFileUploadModule,\r\n    TaToggleSwitchModule,\r\n    ...uiToolkitModules\r\n  ],\r\n  exports: [QuestionAccordionComponent, QuestionMoreMenuComponent]\r\n})\r\nexport class QuestionAccordionModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  OnInit\r\n} from '@angular/core';\r\n\r\nimport { TaskStatusEnum } from '../../enums';\r\n\r\n@Component({\r\n  selector: 'ta-task-status-tag',\r\n  templateUrl: './task-status-tag.component.html',\r\n  styleUrls: ['./task-status-tag.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TaskStatusTagComponent implements OnInit {\r\n  @Input() public taskStatus: TaskStatusEnum;\r\n\r\n  public taskStatusEnum = TaskStatusEnum;\r\n\r\n  constructor() {}\r\n\r\n  public ngOnInit(): void {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { TaskStatusTagComponent } from './task-status-tag.component';\r\n\r\n@NgModule({\r\n  declarations: [TaskStatusTagComponent],\r\n  imports: [CommonModule],\r\n  exports: [TaskStatusTagComponent]\r\n})\r\nexport class TaskStatusTagModule {}\r\n","import { HttpEventType } from '@angular/common/http';\r\nimport {\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { TaModal, ToastService } from '@trustarc/ui-toolkit';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, finalize } from 'rxjs/operators';\r\n\r\nimport { QuestionnaireViewModeEnum, TaskStatusEnum } from '../../enums';\r\nimport {\r\n  AnswerDetailResponseInterface,\r\n  AnswersFormInterface,\r\n  ConditionTreeInterface,\r\n  QuestionContainerViewPageInterface,\r\n  QuestionDetailResponseInterface,\r\n  QuestionFormInterface,\r\n  QuestionnaireInterface,\r\n  QuestionnaireSectionCounts,\r\n  QuestionTreeInterface\r\n} from '../../interfaces';\r\nimport { Attachment } from '../../models';\r\nimport {\r\n  DashBoardCommentControllerService,\r\n  DashBoardSurveyControllerService,\r\n  QuestionnaireUtilsService\r\n} from '../../services';\r\nimport {\r\n  generateErrorMessage,\r\n  getProgress,\r\n  isPropertyChanged\r\n} from '../../utils';\r\nimport { DeleteModalComponent } from '../delete-modal';\r\nimport {\r\n  SimpleFileUploadItem,\r\n  SimpleFileUploadItemContainer\r\n} from '../file-upload/simple-file-upload';\r\n\r\n@Component({\r\n  selector: 'ta-questionnaire-content',\r\n  templateUrl: './questionnaire-content.component.html',\r\n  styleUrls: ['./questionnaire-content.component.scss']\r\n})\r\nexport class QuestionnaireContentComponent\r\n  implements OnInit, OnDestroy, OnChanges {\r\n  @Input() public recordId: string;\r\n  @Input() public reviewMode: boolean;\r\n\r\n  public questionnaireViewModesEnum = QuestionnaireViewModeEnum;\r\n  public taskStatusEnum = TaskStatusEnum;\r\n\r\n  public questionnaire: QuestionnaireInterface;\r\n  public sections: QuestionContainerViewPageInterface[];\r\n\r\n  public selectedSection: QuestionContainerViewPageInterface;\r\n  public selectedSectionIndex = 0;\r\n  public totalQuestionsCount: number;\r\n  public totalAnswersCount: number;\r\n  public showActionStatus = false;\r\n  public selectedViewMode = QuestionnaireViewModeEnum.All;\r\n\r\n  private sectionForm: FormGroup;\r\n\r\n  private _sectionFormSubscription$: Subscription;\r\n  private _updateQuestionnaireCountsSubscription$: Subscription;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private dashBoardSurveyControllerService: DashBoardSurveyControllerService,\r\n    private dashBoardCommentControllerService: DashBoardCommentControllerService,\r\n    private questionnaireUtilsService: QuestionnaireUtilsService,\r\n    private router: Router,\r\n    private toastService: ToastService,\r\n    private modal: TaModal\r\n  ) {}\r\n\r\n  public ngOnInit() {}\r\n\r\n  public ngOnDestroy() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  public async ngOnChanges(changes: SimpleChanges) {\r\n    if (isPropertyChanged(changes.recordId)) {\r\n      if (this.recordId) {\r\n        try {\r\n          this.questionnaire = await this.dashBoardSurveyControllerService\r\n            .getQuestionContainerViewPages(this.recordId)\r\n            .toPromise();\r\n\r\n          this.questionnaire.questionContainerViewPages.forEach(item =>\r\n            this.initDefaultFileContainerInQuestions(item.questionTree)\r\n          );\r\n          this.sections = this.questionnaire.questionContainerViewPages;\r\n          this.selectSection(\r\n            this.sections[this.selectedSectionIndex],\r\n            this.selectedSectionIndex\r\n          );\r\n          this.updateQuestionnaireCounts();\r\n        } catch (error) {\r\n          this.toastService.error(\r\n            generateErrorMessage('Questionnaire load failed', error)\r\n          );\r\n        }\r\n\r\n        this.resetForm();\r\n      }\r\n    }\r\n\r\n    if (isPropertyChanged(changes.reviewMode)) {\r\n      this.questionnaireUtilsService.setReviewMode(this.reviewMode);\r\n    }\r\n  }\r\n\r\n  public get isSectionComplete(): boolean {\r\n    return this.selectedSection\r\n      ? this.selectedSection.totalActiveAnswerCount ===\r\n          this.selectedSection.totalActiveQuestionCount\r\n      : false;\r\n  }\r\n\r\n  public get isFirstSection(): boolean {\r\n    return this.selectedSectionIndex === 0;\r\n  }\r\n\r\n  public get isLastSection(): boolean {\r\n    return this.selectedSectionIndex === this.sections.length - 1;\r\n  }\r\n\r\n  private get sectionQuestions() {\r\n    return this.sectionForm.get('questions') as FormArray;\r\n  }\r\n\r\n  /**\r\n   * Adds question's individual form into questionnaireForm\r\n   * @param index question index\r\n   * @param questionForm FormGroup\r\n   */\r\n  public questionFormReady(questionForm: FormGroup) {\r\n    this.sectionQuestions.push(questionForm);\r\n  }\r\n\r\n  public selectViewMode(viewMode: QuestionnaireViewModeEnum) {\r\n    this.selectedViewMode = viewMode;\r\n    this.questionnaireUtilsService.changeViewMode(viewMode);\r\n  }\r\n\r\n  public selectSection(\r\n    section: QuestionContainerViewPageInterface,\r\n    sectionIndex: number\r\n  ) {\r\n    this.resetForm();\r\n    this.selectedSectionIndex = sectionIndex;\r\n    this.selectedSection = section;\r\n  }\r\n\r\n  public selectNextSection() {\r\n    this.selectedSectionIndex++;\r\n    this.selectedSection = this.sections[this.selectedSectionIndex];\r\n  }\r\n\r\n  public selectPrevSection() {\r\n    this.selectedSectionIndex--;\r\n    this.selectedSection = this.sections[this.selectedSectionIndex];\r\n  }\r\n\r\n  public isSelectedSection(section: QuestionContainerViewPageInterface) {\r\n    return section.id === this.selectedSection.id;\r\n  }\r\n\r\n  public submitQuestionnaire() {\r\n    this.postQuestionnaire(this.sectionForm.value, true);\r\n  }\r\n\r\n  public async exitQuestionnaire() {\r\n    await this.router.navigateByUrl(`tasks`);\r\n  }\r\n\r\n  public onAfterFilesSelected(\r\n    eventTuple: [QuestionTreeInterface, SimpleFileUploadItem[]]\r\n  ): void {\r\n    this.showActionStatus = true;\r\n    const selectedQuestion = eventTuple[0];\r\n    const files = eventTuple[1];\r\n    this.setFileContainer(selectedQuestion, {\r\n      isLoading: true,\r\n      progress: 0\r\n    } as SimpleFileUploadItemContainer);\r\n\r\n    this.dashBoardSurveyControllerService\r\n      .postAttachments$(\r\n        this.questionnaire.recordId,\r\n        selectedQuestion.nodeId,\r\n        files.map(f => f.file)\r\n      )\r\n      .subscribe(\r\n        result => {\r\n          switch (result.type) {\r\n            case HttpEventType.UploadProgress:\r\n              this.setFileContainer(selectedQuestion, {\r\n                progress: getProgress(result.loaded, result.total)\r\n              } as SimpleFileUploadItemContainer);\r\n              break;\r\n\r\n            case HttpEventType.Response:\r\n              this.showActionStatus = false;\r\n              this.setFileContainer(\r\n                selectedQuestion,\r\n                this.generateDefaultFileContainer()\r\n              );\r\n              this.setAttachments(selectedQuestion, result.body);\r\n              this.toastService.success('Attachment uploaded');\r\n              break;\r\n          }\r\n        },\r\n        error => {\r\n          this.showActionStatus = false;\r\n          this.resetToDefaultFileContainer(selectedQuestion);\r\n          this.toastService.error(\r\n            generateErrorMessage('File upload failed', error)\r\n          );\r\n        }\r\n      );\r\n  }\r\n\r\n  public onClickAttachment(attachment: Attachment): void {\r\n    this.dashBoardCommentControllerService\r\n      .getAttachmentDownloadUrl$(attachment.id)\r\n      .subscribe(\r\n        result => window.open(result),\r\n        error =>\r\n          this.toastService.error(\r\n            generateErrorMessage('Attachment load failed', error)\r\n          )\r\n      );\r\n  }\r\n\r\n  public openDeleteModal(\r\n    eventTuple: [QuestionTreeInterface, Attachment]\r\n  ): void {\r\n    const modalRef = this.modal.open(DeleteModalComponent, {\r\n      size: 'sm',\r\n      backdrop: 'static'\r\n    });\r\n\r\n    const instance = modalRef.componentInstance as DeleteModalComponent;\r\n    instance.title = 'Delete Attachment?';\r\n    instance.clickPrimary.subscribe(() => {\r\n      modalRef.close();\r\n      this.onDeleteAttachment(eventTuple);\r\n    });\r\n  }\r\n\r\n  public onDeleteAttachment(\r\n    eventTuple: [QuestionTreeInterface, Attachment]\r\n  ): void {\r\n    this.showActionStatus = true;\r\n    const selectedQuestion = eventTuple[0];\r\n    const attachment = eventTuple[1];\r\n    this.dashBoardSurveyControllerService\r\n      .deleteAttachment$(\r\n        this.questionnaire.recordId,\r\n        selectedQuestion.nodeId,\r\n        attachment.id\r\n      )\r\n      .pipe(\r\n        finalize(() => {\r\n          this.showActionStatus = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        result => {\r\n          this.setAttachments(\r\n            selectedQuestion,\r\n            selectedQuestion.questionDetails.attachments.filter(\r\n              item => item.id !== attachment.id\r\n            )\r\n          );\r\n          this.toastService.success('Attachment deleted');\r\n        },\r\n        error => {\r\n          this.resetToDefaultFileContainer(selectedQuestion);\r\n          this.toastService.error(\r\n            generateErrorMessage('Attachment delete failed', error)\r\n          );\r\n        }\r\n      );\r\n  }\r\n\r\n  private setFileContainer(\r\n    question: QuestionTreeInterface,\r\n    fileContainer: SimpleFileUploadItemContainer\r\n  ): void {\r\n    question.questionDetails = {\r\n      ...question.questionDetails,\r\n      fileContainer: {\r\n        ...question.questionDetails.fileContainer,\r\n        ...fileContainer\r\n      }\r\n    };\r\n  }\r\n\r\n  private setAttachments(\r\n    selectedQuestion: QuestionTreeInterface,\r\n    attachments: Attachment[]\r\n  ): void {\r\n    selectedQuestion.questionDetails.attachments = attachments;\r\n  }\r\n\r\n  private resetToDefaultFileContainer(question: QuestionTreeInterface): void {\r\n    this.setFileContainer(question, this.generateDefaultFileContainer());\r\n  }\r\n\r\n  private generateDefaultFileContainer(): SimpleFileUploadItemContainer {\r\n    return {\r\n      files: [],\r\n      progress: 0,\r\n      isLoading: false\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Make POST API call to save/submit survey.\r\n   * @param value Form value\r\n   * @param submitAction whether API should submit the survey for rules running. Used with 'submit' button\r\n   */\r\n  private postQuestionnaire(\r\n    value: AnswersFormInterface,\r\n    submitAction: boolean\r\n  ) {\r\n    this.showActionStatus = true;\r\n    let answers: AnswerDetailResponseInterface[] = [];\r\n    for (let i = 0; i < value.questions.length; i++) {\r\n      const questionDetails = value.questions[i];\r\n      answers = answers.concat(this.crawlAnswer(questionDetails));\r\n    }\r\n\r\n    // Submit just this question to the server\r\n    this.dashBoardSurveyControllerService\r\n      .postQuestionDetailResponses(answers, submitAction, this.recordId)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.showActionStatus = false;\r\n        })\r\n      )\r\n      .subscribe(async () => {\r\n        if (submitAction) {\r\n          await this.exitQuestionnaire();\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Recursive function that returns the total list of answers of the question and all its children.\r\n   * @param question question to crawl\r\n   */\r\n  private crawlAnswer(\r\n    questionDetails: QuestionFormInterface\r\n  ): AnswerDetailResponseInterface[] {\r\n    let answers: AnswerDetailResponseInterface[] = [];\r\n    const answer: QuestionDetailResponseInterface =\r\n      questionDetails.question.answer;\r\n    if (answer) {\r\n      // Add single choice answer item\r\n      const answerDetailText = answer.questionDetailResponsesChoice;\r\n      const questionDetailResponsesIds = [answer.questionDetailResponsesId];\r\n      const questionNodeId = questionDetails.question.questionId;\r\n\r\n      const answerPost: AnswerDetailResponseInterface = {\r\n        answerDetailText: answerDetailText,\r\n        questionDetailResponsesIds: questionDetailResponsesIds,\r\n        questionNodeId: questionNodeId,\r\n        answerDescription: questionDetails.question.answerDescription\r\n      };\r\n      answers.push(answerPost);\r\n    }\r\n    if (questionDetails.conditionFulfilled) {\r\n      for (let j = 0; j < questionDetails.children.length; j++) {\r\n        const child = questionDetails.children[j];\r\n        answers = answers.concat(this.crawlAnswer(child));\r\n      }\r\n    }\r\n    return answers;\r\n  }\r\n\r\n  /**\r\n   * Update the answered/unanswered counts across the whole page\r\n   * @param onlySelected Whether to update only selected section. Used when not updating the entire section list\r\n   */\r\n  private updateQuestionnaireCounts(onlySelected?: boolean) {\r\n    // Loop through all sections and generate counts\r\n    if (onlySelected) {\r\n      this.updateSectionCounts(this.selectedSection);\r\n    } else {\r\n      for (let i = 0; i < this.sections.length; i++) {\r\n        const section = this.sections[i];\r\n        this.updateSectionCounts(section);\r\n      }\r\n    }\r\n    this.updateTotalSectionCounts();\r\n  }\r\n\r\n  /**\r\n   * Update the total answered/unanswerd counts for the entire questionnaire, counting all sections\r\n   */\r\n  private updateTotalSectionCounts() {\r\n    let totalAnswersCount = 0;\r\n    let totalQuestionsCount = 0;\r\n    for (let i = 0; i < this.sections.length; i++) {\r\n      const section = this.sections[i];\r\n      totalAnswersCount += section.totalActiveAnswerCount;\r\n      totalQuestionsCount += section.totalActiveQuestionCount;\r\n    }\r\n    this.totalAnswersCount = totalAnswersCount;\r\n    this.totalQuestionsCount = totalQuestionsCount;\r\n  }\r\n\r\n  /**\r\n   * Update the answered/unanswered counts for the section\r\n   * @param section section form\r\n   */\r\n  private updateSectionCounts(section: QuestionContainerViewPageInterface) {\r\n    // Recursively navigate through each question and its children\r\n    const questionTree = section.questionTree;\r\n    let totalActiveQuestionCount = 0;\r\n    let totalActiveAnswerCount = 0;\r\n    for (let i = 0; i < questionTree.length; i++) {\r\n      const rootQuestion = questionTree[i];\r\n      const crawlCounts = this.crawlQuestion(rootQuestion);\r\n\r\n      totalActiveQuestionCount += crawlCounts.questionTotal;\r\n      totalActiveAnswerCount += crawlCounts.answerTotal;\r\n    }\r\n\r\n    // Update counts on UI\r\n    section.totalActiveQuestionCount = totalActiveQuestionCount;\r\n    section.totalActiveAnswerCount = totalActiveAnswerCount;\r\n  }\r\n\r\n  /**\r\n   * Recursive function that returns the total count of active child questions and itself.\r\n   * @param question question to crawl\r\n   */\r\n  private crawlQuestion(\r\n    question: QuestionTreeInterface\r\n  ): QuestionnaireSectionCounts {\r\n    // Loop through conditionChildren\r\n    let questionTotal = 0;\r\n    let answerTotal = 0;\r\n    if (question.children.length > 0) {\r\n      for (let i = 0; i < question.children.length; i++) {\r\n        const conditionChild: ConditionTreeInterface = question.children[i];\r\n        const conditionFulfilled = this.questionnaireUtilsService.getConditionFulfilled(\r\n          conditionChild,\r\n          question.questionDetails\r\n        );\r\n\r\n        if (conditionFulfilled) {\r\n          // If child condition is fulfilled, recurse into child\r\n          let crawlQuestionTotal = 0;\r\n          let crawlAnswerTotal = 0;\r\n          for (let j = 0; j < conditionChild.children.length; j++) {\r\n            const childQuestion = conditionChild.children[j];\r\n            const crawlCounts = this.crawlQuestion(childQuestion);\r\n            crawlQuestionTotal += crawlCounts.questionTotal;\r\n            crawlAnswerTotal += crawlCounts.answerTotal;\r\n          }\r\n          questionTotal += crawlQuestionTotal;\r\n          answerTotal += crawlAnswerTotal;\r\n        }\r\n      }\r\n    }\r\n    // Update counts for the question itself\r\n    questionTotal += 1;\r\n    if (\r\n      this.questionnaireUtilsService.getQuestionAnswer(question.questionDetails)\r\n    ) {\r\n      answerTotal += 1;\r\n    }\r\n\r\n    return { questionTotal: questionTotal, answerTotal: answerTotal };\r\n  }\r\n\r\n  /**\r\n   * Instantiate and subscribe to new section form\r\n   */\r\n  private resetForm() {\r\n    this.sectionForm = this.formBuilder.group({\r\n      questions: this.formBuilder.array([])\r\n    });\r\n    this.unsubscribe();\r\n    this._updateQuestionnaireCountsSubscription$ = this.sectionForm.valueChanges\r\n      .pipe(debounceTime(10))\r\n      .subscribe(value => {\r\n        this.updateQuestionnaireCounts(true);\r\n      });\r\n    this._sectionFormSubscription$ = this.sectionForm.valueChanges\r\n      .pipe(debounceTime(1000))\r\n      .subscribe(value => {\r\n        this.postQuestionnaire(value, false);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe from existing subscriptions\r\n   */\r\n  private unsubscribe() {\r\n    if (this._updateQuestionnaireCountsSubscription$) {\r\n      this._updateQuestionnaireCountsSubscription$.unsubscribe();\r\n    }\r\n    if (this._sectionFormSubscription$) {\r\n      this._sectionFormSubscription$.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private initDefaultFileContainerInQuestions(\r\n    questions: QuestionTreeInterface[]\r\n  ): void {\r\n    questions.forEach(question => {\r\n      question.questionDetails.fileContainer = this.generateDefaultFileContainer();\r\n      question.children.forEach(condition => {\r\n        this.initDefaultFileContainerInQuestions(condition.children);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  TaButtonsModule,\r\n  TaDropdownModule,\r\n  TaTabsetModule,\r\n  TaTagsModule,\r\n  TaTooltipModule\r\n} from '@trustarc/ui-toolkit';\r\n\r\nimport { DeleteModalModule } from '../delete-modal';\r\nimport { InitialIndicatorModule } from '../initial-indicator';\r\nimport { QuestionModule } from '../question';\r\nimport { QuestionAccordionModule } from '../question-accordion';\r\nimport { TaskStatusTagModule } from '../task-status-tag';\r\nimport { QuestionnaireContentComponent } from './questionnaire-content.component';\r\n\r\n@NgModule({\r\n  declarations: [QuestionnaireContentComponent],\r\n  imports: [\r\n    CommonModule,\r\n    QuestionModule,\r\n    QuestionAccordionModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TaButtonsModule,\r\n    TaTabsetModule,\r\n    TaDropdownModule,\r\n    TaTagsModule,\r\n    TaskStatusTagModule,\r\n    InitialIndicatorModule,\r\n    TaTooltipModule,\r\n    DeleteModalModule\r\n  ],\r\n  exports: [QuestionnaireContentComponent]\r\n})\r\nexport class QuestionnaireContentModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { TaActiveModal } from '@trustarc/ui-toolkit';\r\n\r\n@Component({\r\n  selector: 'ta-questionnaire-content-modal',\r\n  templateUrl: './questionnaire-content-modal.component.html',\r\n  styleUrls: ['./questionnaire-content-modal.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class QuestionnaireContentModalComponent implements OnInit {\r\n  @Input() public recordId: string;\r\n  @Input() public reviewMode: boolean;\r\n\r\n  constructor(public modalService: TaActiveModal) {}\r\n\r\n  public ngOnInit(): void {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  TaButtonsModule,\r\n  TaModalModule,\r\n  TaSvgIconModule\r\n} from '@trustarc/ui-toolkit';\r\n\r\nimport { QuestionnaireContentModule } from '../questionnaire-content';\r\nimport { QuestionnaireContentModalComponent } from './questionnaire-content-modal.component';\r\n\r\n@NgModule({\r\n  declarations: [QuestionnaireContentModalComponent],\r\n  imports: [\r\n    CommonModule,\r\n    TaButtonsModule,\r\n    TaSvgIconModule,\r\n    TaModalModule,\r\n    QuestionnaireContentModule\r\n  ],\r\n  exports: [QuestionnaireContentModalComponent],\r\n  entryComponents: [QuestionnaireContentModalComponent]\r\n})\r\nexport class QuestionnaireContentModalModule {}\r\n","import { Attachment } from './attachment.model';\r\n\r\nexport abstract class CommentBase {\r\n  id: string;\r\n  appName: string;\r\n  attachments: Attachment;\r\n  created: Date;\r\n  createdByFullName: string;\r\n  createdById: string;\r\n  entityId: string;\r\n  entityTitle: string;\r\n  entityType: string;\r\n  mentionedUsers: {\r\n    email: string;\r\n    firstName: string;\r\n    lastName: string;\r\n  }[];\r\n  messageText: string;\r\n  modifier: string;\r\n  sequenceNumber: number;\r\n  status: string;\r\n  version: number;\r\n}\r\n","import { CommentBase } from './comment-base.model';\r\nimport { CommentReply } from './comment-reply.model';\r\n\r\nexport class Comment extends CommentBase {\r\n  commentMessageReplies: CommentReply[];\r\n  isEditing: boolean;\r\n}\r\n","import { CommentBase } from './comment-base.model';\r\n\r\nexport class CommentReply extends CommentBase {\r\n  commentMessage: CommentBase;\r\n}\r\n","export class Assignee {\r\n  accountId: string;\r\n  userId: string;\r\n  externalUserName: string;\r\n  externalUserEmail: string;\r\n}\r\n","export class Attachment {\r\n  id: string;\r\n  created: Date;\r\n  region: string;\r\n  bucketName: string;\r\n  objectKey: string;\r\n  originalFileName: string;\r\n  version: string;\r\n  lastUpdated: Date;\r\n  createdBy: string;\r\n  lastUpdatedBy: string;\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["_","_.cloneDeep","_.cloneDeepWith","Component","ChangeDetectionStrategy","Input","NgModule","CommonModule","HttpParams","Injectable","HttpClient","Inject","EventEmitter","Validators","FormBuilder","Output","CommentEntityTypeEnum","TaskStatusEnum","RespondentTypeEnum","QuestionTypeEnum","QuestionSingleSelectUiTypeEnum","QuestionMultiSelectUiTypeEnum","QuestionnaireViewModeEnum","map","BehaviorSubject","ViewChild","TaSvgIconModule","TaButtonsModule","TaPopoverModule","TaDropdownModule","TaCheckboxModule","FormsModule","ReactiveFormsModule","TaMentionModule","NgxSkeletonLoaderModule","ViewEncapsulation","TaActiveModal","TaModalModule","HostBinding","_.union","tslib_1.__extends","NG_VALUE_ACCESSOR","forwardRef","ChangeDetectorRef","ToastService","TaTooltipModule","Subject","TaRadioModule","TaProgressbarModule","TaToggleSwitchModule","router","HttpEventType","finalize","debounceTime","Router","TaModal","TaTabsetModule","TaTagsModule"],"mappings":"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"}
