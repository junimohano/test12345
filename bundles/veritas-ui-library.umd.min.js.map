{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://veritas-ui-library/lib/utils.ts","ng://veritas-ui-library/lib/enums/comment-entity-type.enum.ts","ng://veritas-ui-library/lib/enums/task-status.enum.ts","ng://veritas-ui-library/lib/enums/respondent-type.enum.ts","ng://veritas-ui-library/lib/enums/question-type.enum.ts","ng://veritas-ui-library/lib/enums/question-single-select-ui-type.enum.ts","ng://veritas-ui-library/lib/enums/question-multi-select-ui-type.enum.ts","ng://veritas-ui-library/lib/enums/questionnaire-view-mode.enum.ts","ng://veritas-ui-library/lib/components/initial-indicator/initial-indicator.component.ts","ng://veritas-ui-library/lib/components/initial-indicator/initial-indicator.module.ts","ng://veritas-ui-library/lib/constants/veritas-api.constant.ts","ng://veritas-ui-library/lib/custom-encoder.ts","ng://veritas-ui-library/lib/services/user-controller/user-controller.service.ts","ng://veritas-ui-library/lib/components/comments-popover/comment-form/comment-form.component.ts","ng://veritas-ui-library/lib/services/aaa-user/aaa-user.service.ts","ng://veritas-ui-library/lib/services/dash-board-comment-controller/dash-board-comment-controller.service.ts","ng://veritas-ui-library/lib/constants/page.constant.ts","ng://veritas-ui-library/lib/components/comments-popover/comments-popover.component.ts","ng://veritas-ui-library/lib/components/comments-popover/comments-popover.module.ts","ng://veritas-ui-library/lib/components/delete-modal/delete-modal.component.ts","ng://veritas-ui-library/lib/components/delete-modal/delete-modal.module.ts","ng://veritas-ui-library/lib/components/file-upload/file-download/file-download.component.ts","ng://veritas-ui-library/lib/components/file-upload/file-download/file-download.module.ts","ng://veritas-ui-library/lib/change-detectable-component-base.ts","ng://veritas-ui-library/lib/components/file-upload/file-upload/file-upload.model.ts","ng://veritas-ui-library/lib/components/file-upload/file-upload/file-upload.validation.service.ts","ng://veritas-ui-library/lib/components/file-upload/file-upload/file-upload.component.ts","ng://veritas-ui-library/lib/components/file-upload/file-upload/file-upload.module.ts","ng://veritas-ui-library/lib/components/file-upload/simple-file-upload/simple-file-upload.component.ts","ng://veritas-ui-library/lib/components/file-upload/simple-file-upload/simple-file-upload.module.ts","ng://veritas-ui-library/lib/components/file-upload/simple-file-upload/simple-file-upload-item.model.ts","ng://veritas-ui-library/lib/components/file-upload/simple-file-upload/simple-file-upload-config.model.ts","ng://veritas-ui-library/lib/components/file-upload/simple-file-upload/simple-file-upload-item-container.model.ts","ng://veritas-ui-library/lib/components/question/components/multi-select/multi-select.component.ts","ng://veritas-ui-library/lib/components/question/components/single-select/single-select.component.ts","ng://veritas-ui-library/lib/components/question/components/text/text.component.ts","ng://veritas-ui-library/lib/services/dash-board-survey-controller/dash-board-survey-controller.service.ts","ng://veritas-ui-library/lib/services/questionnaire-utils/questionnaire-utils.service.ts","ng://veritas-ui-library/lib/components/question/question.component.ts","ng://veritas-ui-library/lib/components/question/question.module.ts","ng://veritas-ui-library/lib/components/question-accordion/components/question-more-menu/question-more-menu.component.ts","ng://veritas-ui-library/lib/components/question-accordion/question-accordion.component.ts","ng://veritas-ui-library/lib/components/question-accordion/question-accordion.module.ts","ng://veritas-ui-library/lib/components/task-status-tag/task-status-tag.component.ts","ng://veritas-ui-library/lib/components/task-status-tag/task-status-tag.module.ts","ng://veritas-ui-library/lib/components/questionnaire-content/questionnaire-content.component.ts","ng://veritas-ui-library/lib/components/questionnaire-content/questionnaire-content.module.ts","ng://veritas-ui-library/lib/components/questionnaire-content-modal/questionnaire-content-modal.component.ts","ng://veritas-ui-library/lib/components/questionnaire-content-modal/questionnaire-content-modal.module.ts","ng://veritas-ui-library/lib/models/comment-base.model.ts","ng://veritas-ui-library/lib/models/comment.model.ts","ng://veritas-ui-library/lib/models/comment-reply.model.ts","ng://veritas-ui-library/lib/models/assignee.model.ts","ng://veritas-ui-library/lib/models/attachment.model.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__read","o","m","r","ar","error","__spread","concat","generateErrorMessage","message","httpError","isPropertyChanged","simpleChange","previousValue","currentValue","getProgress","loaded","total","Math","round","CommentEntityTypeEnum","TaskStatusEnum","RespondentTypeEnum","QuestionTypeEnum","QuestionSingleSelectUiTypeEnum","QuestionMultiSelectUiTypeEnum","QuestionnaireViewModeEnum","InitialIndicatorComponent","splitKey","ngOnInit","ngOnChanges","changes","name","setInitial","nameSplits","split","initial","getInitial","getWordByIndex","index","toLocaleUpperCase","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","Input","InitialIndicatorModule","NgModule","declarations","imports","CommonModule","exports","VERITAS_API_PROXY_PREFIX_URL","CustomEncoder","encodeKey","key","encodeURIComponent","encodeValue","decodeKey","decodeURIComponent","decodeValue","UserControllerService","httpClient","veritasApiProxyPrefixUrl","url","maxRows","getUsers$","page","search","params","HttpParams","encoder","append","toString","get","Injectable","providedIn","HttpClient","Inject","CommentFormComponent","formBuilder","userControllerService","commentPlaceholder","canHideActions","formSubmitted","EventEmitter","formCancelled","commentForm","group","comment","Validators","required","MENTION_CONFIG","triggerChar","maxItems","labelKey","mentionSelect","onMentionSelect","bind","mentionUsers","focused","patchValue","onSubmit","emit","onCancel","event","textFocus","textFocusout","searchTerm","toPromise","users","_a","content","resetForm","reset","user","externalUserEmail","FormBuilder","Output","getDisplayText","Open","InProgress","InReview","Closed","ActionRequired","Reviewer","RemediationTaskReviewer","PrivacyTeam","BusinessOwner","VendorContact","HumanResourcesTeam","ItSecurityTeam","Other","AaaUserService","fullName","defineProperty","DashBoardCommentControllerService","getComments$","entityId","pipe","map","response","forEach","isEditing","createComment$","entityType","data","messageText","post","updateComment$","commentId","id","deleteComment$","delete","getQuestionContainerViewPages","taskId","mapGetQuestionContainerViewPages","getAttachmentDownloadUrl$","attachmentId","questionnaire","postQuestionDetailResponses","answers","submitAction","answersData","CommentsPopoverComponent","dashBoardCommentControllerService","aaaUserService","apiComments","isLoading","isRefreshing","searchUser$","BehaviorSubject","ngOnDestroy","_searchUser$","unsubscribe","popoverShown","loadComments","toggleEdit","formValue","createComment","updateSubmit","updateComment","Question","newCommentForm","deleteComment","ViewChild","CommentsPopoverModule","TaSvgIconModule","TaButtonsModule","TaPopoverModule","TaDropdownModule","TaCheckboxModule","FormsModule","ReactiveFormsModule","TaMentionModule","NgxSkeletonLoaderModule","DeleteModalComponent","modalService","description","primaryButtonText","secondaryButtonText","cancelButtonText","clickPrimary","clickSecondary","afterCancelled","ngAfterViewInit","_this","setTimeout","initDefaultFocus","onClickCancel","dismiss","primaryButton","el","nativeElement","focus","encapsulation","ViewEncapsulation","None","TaActiveModal","DeleteModalModule","TaModalModule","entryComponents","FileDownloadComponent","dBlock","attachments","files","deleteAttachment","clickAttachment","removeFile","HostBinding","FileDownloadModule","ChangeDetectableComponentBase","changeDetectorRef","markForCheck","isChangeDetectorDestroyed","detach","detectChanges","checkNoChanges","reattach","FORMAT","jpg","exts","mime","png","gif","csv","tsv","zip","txt","doc","xsl","ppt","rtf","pdf","css","js","html","code","FileUploadValidationService","format","isValidFileSize","fileSize","maxFileSize","isValidExtension","file","formatConfig","isJpgFile","isPngFile","isGifFile","isCsvFile","isTsvFile","isZipFile","isTxtFile","isDocFile","isXslFile","isPptFile","isRtfFile","isPdfFile","isCssFile","isJsFile","isHtmlFile","isCodeFile","getAllowedMime","_.union","checkFileWith","mimeTypes","validExts","fileExt","toLowerCase","isValidExt","type","includes","isValidMime","FileUploadComponent","fileUploadValidationService","toastService","_super","afterFilesSelected","draggingOver","allowedMime","propagateChange","tslib_1.__extends","onDragOver","preventDefault","onDragLeave","selectFiles","filesToAdd","isValid","isValidFilesSize","formatBytes","onDrop","dataTransfer","onFilesSelected","target","openUploadBrowser","fileInput","click","registerOnChange","fn","registerOnTouched","writeValue","bytes","decimals","dm","floor","log","parseFloat","pow","toFixed","size","getFilesSize","reduce","totalSize","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ChangeDetectorRef","ToastService","FileUploadModule","TaTooltipModule","SimpleFileUploadComponent","prefixText","linkText","suffixText","config","attachmentNameKey","isMultiple","onAfterFilesSelected","text","onRemoveFile","splice","onClickAttachment","attachment","onDeleteAttachment","SimpleFileUploadModule","SimpleFileUploadItem","SimpleFileUploadConfig","SimpleFileUploadItemContainer","MultiSelectComponent","questionMultiSelectUiTypeEnum","onChange","onSelectResponse","SingleSelectComponent","questionSingleSelectUiTypeEnum","question","updateStep","questionDetails","questionDetailResponses","TextComponent","onModelChange","DashBoardSurveyControllerService","recordId","postAttachments$","questionNodeId","formData","FormData","reportProgress","observe","deleteAttachment$","QuestionnaireUtilsService","reviewMode","viewMode","All","_viewModeSubject$","Subject","getReviewMode","setReviewMode","getViewMode","changeViewMode","getViewModeObservable","asObservable","getQuestionAnswer","questionDetailType","SingleSelect","selectedResponse","find","questionDetailResponsesSelected","Text","textResponse","questionDetailAnswerText","getConditionFulfilled","conditionTree","conditionDetails","conditionDetailConditions","conditionDetailCondition","checkCondition","currentResponse","expressionViewValueId","questionDetailResponsesId","QuestionComponent","questionnaireUtilsService","nodeId","nodeType","questionDetailText","commentMessageCount","questionDetailAnswer","recordQuestionEntityId","children","formReady","questionTypeEnum","answerText","questionForm","answer","questionId","processSelectedOption","keys","controls","valueChanges","subscribe","formValueOfAnswerChanged","isQuestionVisible","Answered","isAnswered","Unanswered","answerDescription","emitEvent","questionAnswer","prevResponse","MultiSelect","questionDetailResponse","QuestionModule","TaRadioModule","TaProgressbarModule","QuestionMoreMenuComponent","QuestionAccordionComponent","questionAccordionForm","array","conditionFulfilled","formValueChanged","questionFormReady","setControl","childFormReady","onAddAttachments","simpleFileUploadComponent","fileUploadComponent","conditionChild","uiToolkitModules","QuestionAccordionModule","TaToggleSwitchModule","TaskStatusTagComponent","taskStatusEnum","TaskStatusTagModule","QuestionnaireContentComponent","dashBoardSurveyControllerService","router","modal","questionnaireViewModesEnum","selectedSectionIndex","showActionStatus","selectedViewMode","_b","questionContainerViewPages","item","initDefaultFileContainerInQuestions","questionTree","sections","selectSection","updateQuestionnaireCounts","error_1","selectedSection","totalActiveAnswerCount","totalActiveQuestionCount","sectionForm","sectionQuestions","selectViewMode","section","sectionIndex","selectNextSection","selectPrevSection","isSelectedSection","submitQuestionnaire","postQuestionnaire","exitQuestionnaire","navigateByUrl","eventTuple","selectedQuestion","setFileContainer","progress","HttpEventType","UploadProgress","Response","generateDefaultFileContainer","setAttachments","success","resetToDefaultFileContainer","window","open","openDeleteModal","modalRef","backdrop","instance","componentInstance","title","close","finalize","filter","fileContainer","questions","crawlAnswer","answerPost","answerDetailText","questionDetailResponsesChoice","questionDetailResponsesIds","j","child","onlySelected","updateSectionCounts","updateTotalSectionCounts","totalAnswersCount","totalQuestionsCount","rootQuestion","crawlCounts","crawlQuestion","questionTotal","answerTotal","crawlQuestionTotal","crawlAnswerTotal","childQuestion","_updateQuestionnaireCountsSubscription$","debounceTime","_sectionFormSubscription$","condition","Router","TaModal","QuestionnaireContentModule","TaTabsetModule","TaTagsModule","QuestionnaireContentModalComponent","QuestionnaireContentModalModule","CommentBase","Comment","CommentReply","Assignee","Attachment","stringContains","indexOf","onlyUnique","self","findIndex","selfValue","JSON","stringify","flatMap","items","getZoneOffset","timezoneOffset","Date","getTimezoneOffset","isNegative","zoneOffset","getEnumKeys","enumType","isNaN","omitDeep","collection","excludeKeys","_i","clonedCollection","_.cloneDeep","_.cloneDeepWith","omitFn"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { SimpleChange } from '@angular/core';\r\nimport * as _ from 'lodash';\r\n\r\nexport function stringContains(value: string, search: string): boolean {\r\n  return value.toLowerCase().indexOf(search.toLowerCase()) !== -1;\r\n}\r\n\r\nexport function generateErrorMessage(message: string, httpError: any): string {\r\n  return httpError && httpError.error && httpError.error.message\r\n    ? `${message} (${httpError.error.message})`\r\n    : message;\r\n}\r\n\r\nexport function onlyUnique(value: any, index: number, self: any[]): boolean {\r\n  return (\r\n    index ===\r\n    self.findIndex(\r\n      selfValue => JSON.stringify(selfValue) === JSON.stringify(value)\r\n    )\r\n  );\r\n}\r\n\r\nexport const nameOf = <T>(name: Extract<keyof T, string>): string => name;\r\n\r\nexport function flatMap<TDestination>(\r\n  items: any[],\r\n  key: string\r\n): TDestination[] {\r\n  return ([] as any[]).concat(...items.map(item => item[key]));\r\n}\r\n\r\nexport function getZoneOffset(): string {\r\n  const timezoneOffset = new Date().getTimezoneOffset();\r\n  const isNegative = timezoneOffset < 0;\r\n  let zoneOffset = (timezoneOffset * (isNegative ? -1 : 1)).toString();\r\n\r\n  for (let i = zoneOffset.toString().length; i < 4; i++) {\r\n    zoneOffset = '0' + zoneOffset;\r\n  }\r\n\r\n  return isNegative ? '-' : '+' + zoneOffset;\r\n}\r\n\r\nexport function getEnumKeys(enumType: any): string[] {\r\n  return Object.keys(enumType).filter(\r\n    type => isNaN(<any>type) && type !== 'values'\r\n  );\r\n}\r\n\r\nexport function isPropertyChanged(simpleChange: SimpleChange): boolean {\r\n  return (\r\n    simpleChange && simpleChange.previousValue !== simpleChange.currentValue\r\n  );\r\n}\r\n\r\nexport function omitDeep(collection: any, ...excludeKeys: string[]): any {\r\n  function omitFn(value: any): void {\r\n    if (value && typeof value === 'object') {\r\n      excludeKeys.forEach(key => {\r\n        delete value[key];\r\n      });\r\n    }\r\n  }\r\n\r\n  const clonedCollection = _.cloneDeep(collection);\r\n\r\n  return _.cloneDeepWith(clonedCollection, omitFn);\r\n}\r\n\r\nexport function getProgress(loaded: number, total: number): number {\r\n  return Math.round((loaded / total) * 100);\r\n}\r\n","export enum CommentEntityTypeEnum {\r\n  Question = 'QUESTION',\r\n  Task = 'TASK'\r\n}\r\n","export enum TaskStatusEnum {\r\n  Open = 'OPEN',\r\n  InProgress = 'IN_PROGRESS',\r\n  InReview = 'IN_REVIEW',\r\n  Closed = 'CLOSED',\r\n  ActionRequired = 'ACTION_REQUIRED'\r\n}\r\n\r\nexport namespace TaskStatusEnum {\r\n  export function getDisplayText(value: TaskStatusEnum): string {\r\n    let result = '';\r\n    switch (value) {\r\n      case TaskStatusEnum.Open:\r\n        result = 'Open';\r\n        break;\r\n\r\n      case TaskStatusEnum.InProgress:\r\n        result = 'In Progress';\r\n        break;\r\n\r\n      case TaskStatusEnum.InReview:\r\n        result = 'In Review';\r\n        break;\r\n\r\n      case TaskStatusEnum.Closed:\r\n        result = 'Closed';\r\n        break;\r\n\r\n      case TaskStatusEnum.ActionRequired:\r\n        result = 'Action Required';\r\n        break;\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n","export enum RespondentTypeEnum {\r\n  Reviewer = 'REVIEWER',\r\n  RemediationTaskReviewer = 'REMEDIATION_TASK_REVIEWER',\r\n  PrivacyTeam = 'PRIVACY_TEAM',\r\n  BusinessOwner = 'BUSINESS_OWNER',\r\n  VendorContact = 'VENDOR_CONTACT',\r\n  HumanResourcesTeam = 'HUMAN_RESOURCES_TEAM',\r\n  ItSecurityTeam = 'IT_SECURITY_TEAM',\r\n  Other = 'OTHER'\r\n}\r\n\r\nexport namespace RespondentTypeEnum {\r\n  export function getDisplayText(value: RespondentTypeEnum): string {\r\n    let result = '';\r\n    switch (value) {\r\n      case RespondentTypeEnum.Reviewer:\r\n        result = 'Reviewer';\r\n        break;\r\n\r\n      case RespondentTypeEnum.RemediationTaskReviewer:\r\n        result = 'Remediation Task Reviewer';\r\n        break;\r\n\r\n      case RespondentTypeEnum.PrivacyTeam:\r\n        result = 'Privacy Team';\r\n        break;\r\n\r\n      case RespondentTypeEnum.BusinessOwner:\r\n        result = 'Business Owner';\r\n        break;\r\n\r\n      case RespondentTypeEnum.VendorContact:\r\n        result = 'Vendor Contact';\r\n        break;\r\n\r\n      case RespondentTypeEnum.HumanResourcesTeam:\r\n        result = 'Human Resources Team';\r\n        break;\r\n\r\n      case RespondentTypeEnum.ItSecurityTeam:\r\n        result = 'IT/Security Team';\r\n        break;\r\n\r\n      case RespondentTypeEnum.Other:\r\n        result = 'Other';\r\n        break;\r\n\r\n      default:\r\n        result = value;\r\n        break;\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n","export enum QuestionTypeEnum {\r\n  SingleSelect = 'SINGLE_SELECT',\r\n  MultiSelect = 'MULTI_SELECT',\r\n  Text = 'TEXT'\r\n}\r\n","export enum QuestionSingleSelectUiTypeEnum {\r\n  Horizontal = 'HORIZONTAL',\r\n  Vertical = 'VERTICAL',\r\n  Slider = 'SLIDER'\r\n}\r\n","export enum QuestionMultiSelectUiTypeEnum {\r\n  Horizontal = 'HORIZONTAL',\r\n  Vertical = 'VERTICAL'\r\n}\r\n","export enum QuestionnaireViewModeEnum {\r\n  All = 'all',\r\n  Answered = 'answered',\r\n  Unanswered = 'unanswered'\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  SimpleChanges\r\n} from '@angular/core';\r\n\r\nimport { isPropertyChanged } from '../../utils';\r\n\r\n@Component({\r\n  selector: 'ta-initial-indicator',\r\n  templateUrl: './initial-indicator.component.html',\r\n  styleUrls: ['./initial-indicator.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class InitialIndicatorComponent implements OnInit, OnChanges {\r\n  @Input() public name: string;\r\n\r\n  public initial: string;\r\n\r\n  private readonly splitKey = ' ';\r\n\r\n  constructor() {}\r\n\r\n  public ngOnInit(): void {}\r\n\r\n  public ngOnChanges(changes: SimpleChanges): void {\r\n    if (isPropertyChanged(changes.name)) {\r\n      this.setInitial();\r\n    }\r\n  }\r\n\r\n  private setInitial(): void {\r\n    const nameSplits = this.name.split(this.splitKey);\r\n    this.initial =\r\n      nameSplits.length > 1 ? this.getInitial(nameSplits) : this.name;\r\n  }\r\n\r\n  private getInitial(nameSplits: string[]): string {\r\n    return `${this.getWordByIndex(nameSplits, 0)}${this.getWordByIndex(\r\n      nameSplits,\r\n      1\r\n    )}`;\r\n  }\r\n\r\n  private getWordByIndex(nameSplits: string[], index: number) {\r\n    return nameSplits[index][0].toLocaleUpperCase();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { InitialIndicatorComponent } from './initial-indicator.component';\r\n\r\n@NgModule({\r\n  declarations: [InitialIndicatorComponent],\r\n  imports: [CommonModule],\r\n  exports: [InitialIndicatorComponent]\r\n})\r\nexport class InitialIndicatorModule {}\r\n","export const VERITAS_API_PROXY_PREFIX_URL = 'VERITAS_API_PROXY_PREFIX_URL';\r\n","import { HttpParameterCodec } from '@angular/common/http';\r\n\r\nexport class CustomEncoder implements HttpParameterCodec {\r\n  public encodeKey(key: string): string {\r\n    return encodeURIComponent(key);\r\n  }\r\n\r\n  public encodeValue(value: string): string {\r\n    return encodeURIComponent(value);\r\n  }\r\n\r\n  public decodeKey(key: string): string {\r\n    return decodeURIComponent(key);\r\n  }\r\n\r\n  public decodeValue(value: string): string {\r\n    return decodeURIComponent(value);\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { VERITAS_API_PROXY_PREFIX_URL } from '../../constants';\r\nimport { CustomEncoder } from '../../custom-encoder';\r\nimport { PageInterface } from '../../interfaces/page.interface';\r\nimport { Assignee } from '../../models/assignee.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserControllerService {\r\n  private readonly url = `${this.veritasApiProxyPrefixUrl}/users`;\r\n  private readonly maxRows = 10;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    @Inject(VERITAS_API_PROXY_PREFIX_URL)\r\n    private veritasApiProxyPrefixUrl: string\r\n  ) {}\r\n\r\n  public getUsers$(\r\n    page: number,\r\n    search: string = null\r\n  ): Observable<PageInterface<Assignee>> {\r\n    let params = new HttpParams({ encoder: new CustomEncoder() })\r\n      .append('page', page.toString())\r\n      .append('size', this.maxRows.toString());\r\n\r\n    if (search) {\r\n      params = params.append('search', search);\r\n    }\r\n\r\n    return this.httpClient.get<PageInterface<Assignee>>(this.url, {\r\n      params\r\n    });\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { UserControllerService } from '../../../services/user-controller';\r\n\r\n@Component({\r\n  selector: 'ta-comment-form',\r\n  templateUrl: './comment-form.component.html',\r\n  styleUrls: ['./comment-form.component.scss']\r\n})\r\nexport class CommentFormComponent implements OnInit {\r\n  @Input() public commentPlaceholder = '';\r\n  @Input() public canHideActions = false;\r\n\r\n  @Output() public formSubmitted = new EventEmitter<any>();\r\n  @Output() public formCancelled = new EventEmitter<any>();\r\n\r\n  public commentForm = this.formBuilder.group({\r\n    comment: ['', Validators.required]\r\n  });\r\n  public MENTION_CONFIG = {\r\n    triggerChar: '@',\r\n    maxItems: 10,\r\n    labelKey: 'externalUserEmail',\r\n    mentionSelect: this.onMentionSelect.bind(this)\r\n  };\r\n  public mentionUsers: any[] = [];\r\n  public focused = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private userControllerService: UserControllerService\r\n  ) {}\r\n\r\n  public ngOnInit(): void {\r\n    if (this.commentPlaceholder) {\r\n      this.commentForm.patchValue({\r\n        comment: this.commentPlaceholder\r\n      });\r\n    }\r\n  }\r\n\r\n  public onSubmit(): void {\r\n    this.formSubmitted.emit(this.commentForm.value);\r\n  }\r\n\r\n  public onCancel(event: any): void {\r\n    this.formCancelled.emit();\r\n  }\r\n\r\n  public textFocus(): void {\r\n    this.focused = true;\r\n  }\r\n\r\n  public textFocusout(): void {}\r\n\r\n  public async searchTerm(searchTerm: string): Promise<void> {\r\n    const users = await this.userControllerService\r\n      .getUsers$(0, searchTerm)\r\n      .toPromise();\r\n    this.mentionUsers = users.content;\r\n  }\r\n\r\n  public resetForm(): void {\r\n    this.commentForm.reset();\r\n  }\r\n\r\n  private onMentionSelect(user: any): string {\r\n    return `[~${user.externalUserEmail}]`;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AaaUserService {\r\n  private fullName = '';\r\n\r\n  constructor() {}\r\n\r\n  public set setFullName(fullName: string) {\r\n    this.fullName = fullName;\r\n  }\r\n\r\n  public get getFullName() {\r\n    return this.fullName;\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { VERITAS_API_PROXY_PREFIX_URL } from '../../constants';\r\nimport { PAGE_OFFSET_FOR_SERVER } from '../../constants/page.constant';\r\nimport { CommentEntityTypeEnum } from '../../enums/comment-entity-type.enum';\r\nimport { PageInterface } from '../../interfaces/page.interface';\r\nimport { AnswerDetailResponseInterface } from '../../interfaces/questionnaire.interface';\r\nimport { Comment } from '../../models/comment.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashBoardCommentControllerService {\r\n  private readonly url = `${this.veritasApiProxyPrefixUrl}/comment`;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    @Inject(VERITAS_API_PROXY_PREFIX_URL)\r\n    private veritasApiProxyPrefixUrl: string\r\n  ) {}\r\n\r\n  public getComments$(\r\n    entityId: string,\r\n    page: number = 1,\r\n    maxRows: number = 20\r\n  ): Observable<PageInterface<Comment>> {\r\n    const params = new HttpParams()\r\n      .append('page', (page + PAGE_OFFSET_FOR_SERVER).toString())\r\n      .append('size', maxRows.toString());\r\n\r\n    return this.httpClient\r\n      .get<PageInterface<Comment>>(`${this.url}/${entityId}`, {\r\n        params\r\n      })\r\n      .pipe(\r\n        map(response => {\r\n          response.content.forEach((comment: Comment) => {\r\n            comment.isEditing = false;\r\n          });\r\n          return response;\r\n        })\r\n      );\r\n  }\r\n\r\n  public createComment$(\r\n    entityId: string,\r\n    entityType: CommentEntityTypeEnum,\r\n    message: string\r\n  ): Observable<Comment> {\r\n    const data = {\r\n      entityId,\r\n      entityType,\r\n      messageText: message\r\n    };\r\n\r\n    return this.httpClient.post<Comment>(`${this.url}/${entityId}`, data);\r\n  }\r\n\r\n  public updateComment$(\r\n    entityId: string,\r\n    entityType: CommentEntityTypeEnum,\r\n    commentId: string,\r\n    message: string\r\n  ): Observable<Comment> {\r\n    const data = {\r\n      entityId,\r\n      entityType,\r\n      messageText: message,\r\n      id: commentId\r\n    };\r\n\r\n    return this.httpClient.post<Comment>(\r\n      `${this.url}/${entityId}/${commentId}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  public deleteComment$(\r\n    entityId: string,\r\n    commentId: string\r\n  ): Observable<Comment> {\r\n    return this.httpClient.delete<Comment>(\r\n      `${this.url}/${entityId}/${commentId}`\r\n    );\r\n  }\r\n\r\n  public getQuestionContainerViewPages(taskId: string): Observable<any> {\r\n    return this.httpClient\r\n      .get(`/api/question-survey/${taskId}`)\r\n      .pipe(map(this.mapGetQuestionContainerViewPages));\r\n  }\r\n\r\n  public getAttachmentDownloadUrl$(attachmentId: string): Observable<any> {\r\n    return this.httpClient.get(`${this.url}/attachments/${attachmentId}/url`);\r\n  }\r\n\r\n  private mapGetQuestionContainerViewPages(questionnaire) {\r\n    return questionnaire;\r\n  }\r\n\r\n  public postQuestionDetailResponses(\r\n    answers: AnswerDetailResponseInterface[],\r\n    submitAction: boolean,\r\n    taskId: string\r\n  ): Observable<any> {\r\n    // Assemble post data\r\n    const answersData = {\r\n      answers: answers,\r\n      submitAction: submitAction\r\n    };\r\n    return this.httpClient.post(`/api/question-survey/${taskId}`, answersData);\r\n  }\r\n}\r\n","export const PAGE_OFFSET_FOR_SERVER = -1;\r\nexport const SEARCH_DEBOUNCE_TIME = 300;\r\n","import { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\n\r\nimport { CommentEntityTypeEnum } from '../../enums';\r\nimport { PageInterface } from '../../interfaces';\r\nimport { Comment } from '../../models';\r\nimport { AaaUserService } from '../../services/aaa-user';\r\nimport { DashBoardCommentControllerService } from '../../services/dash-board-comment-controller';\r\nimport { CommentFormComponent } from './comment-form/comment-form.component';\r\n\r\n@Component({\r\n  selector: 'ta-comments-popover',\r\n  templateUrl: './comments-popover.component.html',\r\n  styleUrls: ['./comments-popover.component.scss']\r\n})\r\nexport class CommentsPopoverComponent implements OnInit, OnDestroy {\r\n  @Input() public entityId: string;\r\n\r\n  @ViewChild('newCommentForm') public newCommentForm: CommentFormComponent;\r\n\r\n  public apiComments: PageInterface<Comment> = null;\r\n  public isLoading = false;\r\n  public isRefreshing = false;\r\n\r\n  public searchUser$: BehaviorSubject<string> = new BehaviorSubject('');\r\n  private _searchUser$: Subscription;\r\n\r\n  constructor(\r\n    private dashBoardCommentControllerService: DashBoardCommentControllerService,\r\n    public aaaUserService: AaaUserService\r\n  ) {}\r\n\r\n  public ngOnInit(): void {}\r\n\r\n  public ngOnDestroy(): void {\r\n    if (this._searchUser$) {\r\n      this._searchUser$.unsubscribe();\r\n    }\r\n  }\r\n\r\n  public async popoverShown(): Promise<void> {\r\n    if (!this.apiComments) {\r\n      this.isLoading = true;\r\n    } else {\r\n      this.isRefreshing = true;\r\n    }\r\n    await this.loadComments();\r\n    this.isLoading = false;\r\n    this.isRefreshing = false;\r\n  }\r\n\r\n  public searchTerm(searchTerm: string): void {\r\n    this.searchUser$.next(searchTerm);\r\n  }\r\n\r\n  public toggleEdit(comment: Comment): void {\r\n    comment.isEditing = comment.isEditing ? false : true;\r\n  }\r\n\r\n  public onSubmit(formValue: any): void {\r\n    if (formValue) {\r\n      this.createComment(formValue.comment);\r\n    }\r\n  }\r\n\r\n  public async updateSubmit(formValue: any, comment: Comment): Promise<void> {\r\n    this.isRefreshing = true;\r\n    await this.updateComment(comment.id, formValue.comment);\r\n    await this.loadComments();\r\n    this.isRefreshing = false;\r\n  }\r\n\r\n  public async createComment(message: string): Promise<void> {\r\n    this.isRefreshing = true;\r\n    await this.dashBoardCommentControllerService\r\n      .createComment$(this.entityId, CommentEntityTypeEnum.Question, message)\r\n      .toPromise();\r\n    await this.loadComments();\r\n    this.newCommentForm.resetForm();\r\n    this.isRefreshing = false;\r\n  }\r\n\r\n  public async updateComment(\r\n    commentId: string,\r\n    message: string\r\n  ): Promise<void> {\r\n    await this.dashBoardCommentControllerService\r\n      .updateComment$(\r\n        this.entityId,\r\n        CommentEntityTypeEnum.Question,\r\n        commentId,\r\n        message\r\n      )\r\n      .toPromise();\r\n  }\r\n\r\n  public async deleteComment(commentId: string): Promise<void> {\r\n    this.isRefreshing = true;\r\n    await this.dashBoardCommentControllerService\r\n      .deleteComment$(this.entityId, commentId)\r\n      .toPromise();\r\n    await this.loadComments();\r\n    this.isRefreshing = false;\r\n  }\r\n\r\n  private async loadComments(): Promise<void> {\r\n    const apiComments: PageInterface<\r\n      any\r\n    > = await this.dashBoardCommentControllerService\r\n      .getComments$(this.entityId)\r\n      .toPromise();\r\n    this.apiComments = apiComments;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TaMentionModule } from '@trustarc/mention';\r\nimport {\r\n  TaButtonsModule,\r\n  TaCheckboxModule,\r\n  TaDropdownModule,\r\n  TaPopoverModule,\r\n  TaSvgIconModule\r\n} from '@trustarc/ui-toolkit';\r\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\r\n\r\nimport { InitialIndicatorModule } from '../initial-indicator';\r\nimport { CommentFormComponent } from './comment-form/comment-form.component';\r\nimport { CommentsPopoverComponent } from './comments-popover.component';\r\n\r\n@NgModule({\r\n  declarations: [CommentsPopoverComponent, CommentFormComponent],\r\n  imports: [\r\n    CommonModule,\r\n    TaSvgIconModule,\r\n    TaButtonsModule,\r\n    TaPopoverModule,\r\n    InitialIndicatorModule,\r\n    TaDropdownModule,\r\n    TaCheckboxModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TaMentionModule,\r\n    NgxSkeletonLoaderModule\r\n  ],\r\n  exports: [CommentsPopoverComponent]\r\n})\r\nexport class CommentsPopoverModule {}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { TaActiveModal } from '@trustarc/ui-toolkit';\r\n\r\n@Component({\r\n  selector: 'ta-delete-modal',\r\n  templateUrl: './delete-modal.component.html',\r\n  styleUrls: ['./delete-modal.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DeleteModalComponent implements OnInit, AfterViewInit {\r\n  @Input() public title: string;\r\n  @Input() public description =\r\n    'The item cannot be recovered once deleted. Are you sure you want to delete this?';\r\n  @Input() public primaryButtonText = 'Delete';\r\n  @Input() public secondaryButtonText = 'Secondary';\r\n  @Input() public cancelButtonText = 'Cancel';\r\n  @Input() public isSecondaryButtonEnabled: boolean;\r\n\r\n  @Output() public clickPrimary = new EventEmitter<any>();\r\n  @Output() public clickSecondary = new EventEmitter<any>();\r\n  @Output() public afterCancelled = new EventEmitter<any>();\r\n\r\n  @ViewChild('primaryButton') public primaryButton: ElementRef;\r\n\r\n  constructor(public modalService: TaActiveModal) {}\r\n\r\n  public ngOnInit(): void {}\r\n\r\n  public ngAfterViewInit(): void {\r\n    setTimeout(() => this.initDefaultFocus());\r\n  }\r\n\r\n  public onClickCancel(): void {\r\n    this.modalService.dismiss('Cancel click');\r\n    this.afterCancelled.emit();\r\n  }\r\n\r\n  private initDefaultFocus(): void {\r\n    (this.primaryButton as any).el.nativeElement.focus();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  TaButtonsModule,\r\n  TaModalModule,\r\n  TaSvgIconModule\r\n} from '@trustarc/ui-toolkit';\r\n\r\nimport { DeleteModalComponent } from './delete-modal.component';\r\n\r\n@NgModule({\r\n  declarations: [DeleteModalComponent],\r\n  imports: [CommonModule, TaButtonsModule, TaSvgIconModule, TaModalModule],\r\n  exports: [DeleteModalComponent],\r\n  entryComponents: [DeleteModalComponent]\r\n})\r\nexport class DeleteModalModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Input,\r\n  OnInit,\r\n  Output\r\n} from '@angular/core';\r\n\r\nimport { SimpleFileUploadConfig } from '../simple-file-upload/simple-file-upload-config.model';\r\nimport { SimpleFileUploadItem } from '../simple-file-upload/simple-file-upload-item.model';\r\n\r\n@Component({\r\n  selector: 'ta-file-download',\r\n  templateUrl: './file-download.component.html',\r\n  styleUrls: ['./file-download.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FileDownloadComponent implements OnInit {\r\n  @HostBinding('class.d-block') public dBlock = true;\r\n\r\n  @Input() public attachments: any[] = [];\r\n  @Input() public files: SimpleFileUploadItem[] = [];\r\n  @Input() public disabled: boolean;\r\n  @Input() public hasDescription: boolean;\r\n  @Input() public config: SimpleFileUploadConfig;\r\n\r\n  @Output() public deleteAttachment = new EventEmitter<any>();\r\n  @Output() public clickAttachment = new EventEmitter<any>();\r\n  @Output() public removeFile = new EventEmitter<number>();\r\n\r\n  constructor() {}\r\n\r\n  public ngOnInit(): void {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TaButtonsModule, TaSvgIconModule } from '@trustarc/ui-toolkit';\r\n\r\nimport { FileDownloadComponent } from './file-download.component';\r\n\r\n@NgModule({\r\n  declarations: [FileDownloadComponent],\r\n  imports: [CommonModule, FormsModule, TaButtonsModule, TaSvgIconModule],\r\n  exports: [FileDownloadComponent]\r\n})\r\nexport class FileDownloadModule {}\r\n","import { ChangeDetectorRef } from '@angular/core';\r\n\r\nexport abstract class ChangeDetectableComponentBase\r\n  implements ChangeDetectorRef {\r\n  private get isChangeDetectorDestroyed(): boolean {\r\n    return this.changeDetectorRef['destroyed'];\r\n  }\r\n\r\n  constructor(protected changeDetectorRef: ChangeDetectorRef) {}\r\n\r\n  markForCheck(): void {\r\n    if (this.isChangeDetectorDestroyed) {\r\n      return;\r\n    }\r\n\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  detach(): void {\r\n    if (this.isChangeDetectorDestroyed) {\r\n      return;\r\n    }\r\n\r\n    this.changeDetectorRef.detach();\r\n  }\r\n\r\n  detectChanges(): void {\r\n    if (this.isChangeDetectorDestroyed) {\r\n      return;\r\n    }\r\n\r\n    this.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  checkNoChanges(): void {\r\n    if (this.isChangeDetectorDestroyed) {\r\n      return;\r\n    }\r\n\r\n    this.changeDetectorRef.checkNoChanges();\r\n  }\r\n\r\n  reattach(): void {\r\n    if (this.isChangeDetectorDestroyed) {\r\n      return;\r\n    }\r\n\r\n    this.changeDetectorRef.reattach();\r\n  }\r\n}\r\n","export interface FileUploadFormatConfig {\r\n  jpg?: boolean;\r\n  png?: boolean;\r\n  gif?: boolean;\r\n  csv?: boolean;\r\n  tsv?: boolean;\r\n  zip?: boolean;\r\n  txt?: boolean;\r\n  doc?: boolean;\r\n  xsl?: boolean;\r\n  ppt?: boolean;\r\n  rtf?: boolean;\r\n  pdf?: boolean;\r\n  css?: boolean;\r\n  js?: boolean;\r\n  html?: boolean;\r\n  code?: boolean;\r\n}\r\n\r\nexport interface FormatInterface {\r\n  [x: string]: {\r\n    exts: string[];\r\n    mime: string[];\r\n  };\r\n}\r\n\r\nexport const FORMAT: FormatInterface = {\r\n  jpg: {\r\n    exts: ['jpg', 'jpeg'],\r\n    mime: [\r\n      'image/jpeg',\r\n      'image/jpg',\r\n      'image/jp_',\r\n      'application/jpg',\r\n      'application/x-jpg',\r\n      'image/pjpeg',\r\n      'image/pipeg',\r\n      'image/vnd.swiftview-jpeg',\r\n      'image/x-xbitmap'\r\n    ]\r\n  },\r\n  png: {\r\n    exts: ['png'],\r\n    mime: ['image/png', 'application/png', 'application/x-png']\r\n  },\r\n  gif: {\r\n    exts: ['gif'],\r\n    mime: ['image/gif', 'image/x-xbitmap', 'image/gi_']\r\n  },\r\n  csv: {\r\n    exts: ['csv'],\r\n    mime: [\r\n      'text/comma-separated-values',\r\n      'text/csv',\r\n      'application/csv',\r\n      'application/excel',\r\n      'application/vnd.ms-excel',\r\n      'application/vnd.msexcel',\r\n      'text/anytext'\r\n    ]\r\n  },\r\n  tsv: {\r\n    exts: ['tsv'],\r\n    mime: ['text/tab-separated-values']\r\n  },\r\n  zip: {\r\n    exts: ['zip'],\r\n    mime: [\r\n      'application/zip',\r\n      'application/x-zip',\r\n      'application/x-zip-compressed',\r\n      'application/octet-stream',\r\n      'application/x-compress',\r\n      'application/x-compressed',\r\n      'multipart/x-zip'\r\n    ]\r\n  },\r\n  txt: {\r\n    exts: ['txt'],\r\n    mime: [\r\n      'text/plain',\r\n      'application/txt',\r\n      'browser/internal',\r\n      'text/anytext',\r\n      'widetext/plain',\r\n      'widetext/paragraph'\r\n    ]\r\n  },\r\n  doc: {\r\n    exts: ['doc', 'docx'],\r\n    mime: [\r\n      'application/msword [official]',\r\n      'application/doc',\r\n      'application/vnd.msword',\r\n      'application/vnd.ms-word',\r\n      'application/winword',\r\n      'application/word',\r\n      'application/x-msw6',\r\n      'application/x-msword',\r\n      'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n    ]\r\n  },\r\n  xsl: {\r\n    exts: ['xsl', 'xlsx'],\r\n    mime: [\r\n      'application/vnd.ms-excel [official]',\r\n      'application/msexcel',\r\n      'application/x-msexcel',\r\n      'application/x-ms-excel',\r\n      'application/vnd.ms-excel',\r\n      'application/x-excel',\r\n      'application/x-dos_ms_excel',\r\n      'application/xls',\r\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n    ]\r\n  },\r\n  ppt: {\r\n    exts: ['ppt', 'pptx'],\r\n    mime: [\r\n      'application/vnd.ms-powerpoint [official]',\r\n      'application/mspowerpoint',\r\n      'application/ms-powerpoint',\r\n      'application/mspowerpnt',\r\n      'application/vnd-mspowerpoint',\r\n      'application/powerpoint',\r\n      'application/x-powerpoint',\r\n      'application/x-m'\r\n    ]\r\n  },\r\n  rtf: {\r\n    exts: ['rtf'],\r\n    mime: [\r\n      'application/rtf',\r\n      'application/x-rtf',\r\n      'text/rtf',\r\n      'text/richtext',\r\n      'application/msword',\r\n      'application/doc',\r\n      'application/x-soffice'\r\n    ]\r\n  },\r\n  pdf: {\r\n    exts: ['pdf'],\r\n    mime: [\r\n      'application/pdf',\r\n      'application/x-pdf',\r\n      'application/acrobat',\r\n      'applications/vnd.pdf',\r\n      'text/pdf',\r\n      'text/x-pdf'\r\n    ]\r\n  },\r\n  css: {\r\n    exts: ['css'],\r\n    mime: ['text/css', 'application/css-stylesheet']\r\n  },\r\n  js: {\r\n    exts: ['js'],\r\n    mime: ['application/x-javascript', 'text/javascript']\r\n  },\r\n  html: {\r\n    exts: ['html'],\r\n    mime: ['text/html', 'text/plain']\r\n  },\r\n  code: {\r\n    exts: ['php', 'ts'],\r\n    mime: []\r\n  }\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport * as _ from 'lodash';\r\n\r\nimport {\r\n  FileUploadFormatConfig,\r\n  FORMAT,\r\n  FormatInterface\r\n} from './file-upload.model';\r\n\r\n@Injectable()\r\nexport class FileUploadValidationService {\r\n  private format: FormatInterface;\r\n\r\n  constructor() {\r\n    this.format = FORMAT;\r\n  }\r\n\r\n  /**\r\n   * Check file size. Return true if valid\r\n   */\r\n  public isValidFileSize(fileSize: number, maxFileSize: number): boolean {\r\n    return fileSize <= maxFileSize;\r\n  }\r\n\r\n  /**\r\n   * Check file mime or extension. Return true if valid\r\n   */\r\n  public isValidExtension(\r\n    file: File,\r\n    formatConfig: FileUploadFormatConfig\r\n  ): boolean {\r\n    return (\r\n      (formatConfig.jpg && this.isJpgFile(file)) ||\r\n      (formatConfig.png && this.isPngFile(file)) ||\r\n      (formatConfig.gif && this.isGifFile(file)) ||\r\n      (formatConfig.csv && this.isCsvFile(file)) ||\r\n      (formatConfig.tsv && this.isTsvFile(file)) ||\r\n      (formatConfig.zip && this.isZipFile(file)) ||\r\n      (formatConfig.txt && this.isTxtFile(file)) ||\r\n      (formatConfig.doc && this.isDocFile(file)) ||\r\n      (formatConfig.xsl && this.isXslFile(file)) ||\r\n      (formatConfig.ppt && this.isPptFile(file)) ||\r\n      (formatConfig.rtf && this.isRtfFile(file)) ||\r\n      (formatConfig.pdf && this.isPdfFile(file)) ||\r\n      (formatConfig.css && this.isCssFile(file)) ||\r\n      (formatConfig.js && this.isJsFile(file)) ||\r\n      (formatConfig.html && this.isHtmlFile(file)) ||\r\n      (formatConfig.code && this.isCodeFile(file))\r\n    );\r\n  }\r\n\r\n  public getAllowedMime(formatConfig: FileUploadFormatConfig): string[] {\r\n    const mime = [];\r\n    for (const format in formatConfig) {\r\n      if (this.format[format]) {\r\n        mime.push(this.format[format].mime);\r\n      }\r\n    }\r\n    return _.union(mime);\r\n  }\r\n\r\n  private checkFileWith(\r\n    mimeTypes: string[],\r\n    validExts: string[],\r\n    file: File\r\n  ): boolean {\r\n    const fileExt = file.name\r\n      .split('.')\r\n      .pop()\r\n      .toLowerCase();\r\n\r\n    const isValidExt =\r\n      (file.type === '' || mimeTypes.length === 0) &&\r\n      validExts.includes(fileExt);\r\n\r\n    const isValidMime = file.type && mimeTypes.includes(file.type);\r\n\r\n    return isValidExt || isValidMime;\r\n  }\r\n\r\n  private isJpgFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.jpg.mime, this.format.jpg.exts, file);\r\n  }\r\n\r\n  private isPngFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.png.mime, this.format.png.exts, file);\r\n  }\r\n\r\n  private isGifFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.gif.mime, this.format.gif.exts, file);\r\n  }\r\n\r\n  private isCsvFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.csv.mime, this.format.csv.exts, file);\r\n  }\r\n\r\n  private isTsvFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.tsv.mime, this.format.tsv.exts, file);\r\n  }\r\n\r\n  private isZipFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.zip.mime, this.format.zip.exts, file);\r\n  }\r\n\r\n  private isTxtFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.txt.mime, this.format.txt.exts, file);\r\n  }\r\n\r\n  private isDocFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.doc.mime, this.format.doc.exts, file);\r\n  }\r\n\r\n  private isXslFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.xsl.mime, this.format.xsl.exts, file);\r\n  }\r\n\r\n  private isPptFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.ppt.mime, this.format.ppt.exts, file);\r\n  }\r\n\r\n  private isRtfFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.rtf.mime, this.format.rtf.exts, file);\r\n  }\r\n\r\n  public isPdfFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.pdf.mime, this.format.pdf.exts, file);\r\n  }\r\n\r\n  private isCssFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.css.mime, this.format.css.exts, file);\r\n  }\r\n\r\n  private isJsFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.js.mime, this.format.js.exts, file);\r\n  }\r\n\r\n  private isHtmlFile(file: File): boolean {\r\n    return this.checkFileWith(\r\n      this.format.html.mime,\r\n      this.format.html.exts,\r\n      file\r\n    );\r\n  }\r\n\r\n  private isCodeFile(file: File): boolean {\r\n    return this.checkFileWith(\r\n      this.format.code.mime,\r\n      this.format.code.exts,\r\n      file\r\n    );\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { ToastService } from '@trustarc/ui-toolkit';\r\n\r\nimport { ChangeDetectableComponentBase } from '../../../change-detectable-component-base';\r\nimport { FileUploadFormatConfig } from './file-upload.model';\r\nimport { FileUploadValidationService } from './file-upload.validation.service';\r\n\r\n@Component({\r\n  selector: 'ta-file-upload',\r\n  templateUrl: './file-upload.component.html',\r\n  styleUrls: ['./file-upload.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => FileUploadComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class FileUploadComponent extends ChangeDetectableComponentBase\r\n  implements OnInit, ControlValueAccessor {\r\n  @Input() public id: string;\r\n  @Input() public prefixText: string;\r\n  @Input() public linkText: string;\r\n  @Input() public suffixText: string;\r\n  @Input() public isMultiple: boolean;\r\n  @Input() public formatConfig: FileUploadFormatConfig = {\r\n    jpg: false,\r\n    png: false,\r\n    gif: false,\r\n    csv: false,\r\n    tsv: false,\r\n    zip: false,\r\n    txt: false,\r\n    doc: false,\r\n    xsl: false,\r\n    ppt: false,\r\n    rtf: false,\r\n    pdf: false,\r\n    css: false,\r\n    js: false,\r\n    html: false,\r\n    code: false\r\n  };\r\n  @Input() public maxFileSize: number;\r\n\r\n  @Output() public afterFilesSelected = new EventEmitter<File[]>();\r\n\r\n  @ViewChild('fileInput') public fileInput: ElementRef;\r\n\r\n  public draggingOver = false;\r\n  public allowedMime: string[] = [];\r\n  public files: File[] = [];\r\n\r\n  private propagateChange: Function = (files: any) => {};\r\n\r\n  constructor(\r\n    protected changeDetectorRef: ChangeDetectorRef,\r\n    private fileUploadValidationService: FileUploadValidationService,\r\n    private toastService: ToastService\r\n  ) {\r\n    super(changeDetectorRef);\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.allowedMime = this.fileUploadValidationService.getAllowedMime(\r\n      this.formatConfig\r\n    );\r\n  }\r\n\r\n  public onDragOver(e: any): void {\r\n    e.preventDefault();\r\n    this.draggingOver = true;\r\n    this.markForCheck();\r\n  }\r\n\r\n  public onDragLeave(e: any): void {\r\n    e.preventDefault();\r\n    this.draggingOver = false;\r\n    this.markForCheck();\r\n  }\r\n\r\n  public selectFiles(files: File[]): void {\r\n    const filesToAdd = Object.assign([], files);\r\n    let isValid = true;\r\n\r\n    if (!this.isValidFilesSize(filesToAdd)) {\r\n      isValid = false;\r\n      this.toastService.error(\r\n        `Attachments size exceeds the allowable limit (maximum: ${this.formatBytes(\r\n          this.maxFileSize\r\n        )})`\r\n      );\r\n    }\r\n\r\n    filesToAdd.forEach((file: File, index) => {\r\n      if (\r\n        !this.fileUploadValidationService.isValidExtension(\r\n          file,\r\n          this.formatConfig\r\n        )\r\n      ) {\r\n        isValid = false;\r\n        this.toastService.error(`${file.name} is invalid file type`);\r\n      }\r\n    });\r\n\r\n    if (!isValid) {\r\n      return;\r\n    }\r\n\r\n    this.propagateChange(filesToAdd);\r\n    this.markForCheck();\r\n    this.afterFilesSelected.emit(filesToAdd);\r\n  }\r\n\r\n  public onDrop(event: any): void {\r\n    event.preventDefault();\r\n    this.onDragLeave(event);\r\n    this.selectFiles(event.dataTransfer.files);\r\n  }\r\n\r\n  public onFilesSelected(event: any): void {\r\n    this.selectFiles(event.target.files);\r\n    event.target.value = null;\r\n  }\r\n\r\n  public openUploadBrowser(): void {\r\n    this.fileInput.nativeElement.click();\r\n  }\r\n\r\n  public registerOnChange(fn): void {\r\n    this.propagateChange = fn;\r\n  }\r\n\r\n  public registerOnTouched(): void {}\r\n\r\n  public writeValue(value: any): void {\r\n    if (value) {\r\n      this.files = value;\r\n    }\r\n  }\r\n\r\n  private formatBytes(bytes: number, decimals = 2): string {\r\n    if (bytes === 0) {\r\n      return '0 Bytes';\r\n    }\r\n\r\n    const k = 1024;\r\n    const dm = decimals < 0 ? 0 : decimals;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n  }\r\n\r\n  private isValidFilesSize(files: File[]): boolean {\r\n    const size = this.getFilesSize(files);\r\n\r\n    return this.maxFileSize\r\n      ? this.fileUploadValidationService.isValidFileSize(size, this.maxFileSize)\r\n      : true;\r\n  }\r\n\r\n  private getFilesSize(files: File[]): number {\r\n    return files\r\n      .map(f => f.size)\r\n      .reduce((totalSize, fileSize) => totalSize + fileSize);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  TaButtonsModule,\r\n  TaSvgIconModule,\r\n  TaTooltipModule\r\n} from '@trustarc/ui-toolkit';\r\n\r\nimport { FileUploadComponent } from './file-upload.component';\r\nimport { FileUploadValidationService } from './file-upload.validation.service';\r\n\r\n@NgModule({\r\n  declarations: [FileUploadComponent],\r\n  imports: [CommonModule, TaButtonsModule, TaSvgIconModule, TaTooltipModule],\r\n  exports: [FileUploadComponent],\r\n  providers: [FileUploadValidationService]\r\n})\r\nexport class FileUploadModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { ChangeDetectableComponentBase } from '../../../change-detectable-component-base';\r\nimport { FileUploadComponent } from '../file-upload/file-upload.component';\r\nimport { SimpleFileUploadConfig } from './simple-file-upload-config.model';\r\nimport { SimpleFileUploadItem } from './simple-file-upload-item.model';\r\n\r\n@Component({\r\n  selector: 'ta-simple-file-upload',\r\n  templateUrl: './simple-file-upload.component.html',\r\n  styleUrls: ['./simple-file-upload.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: SimpleFileUploadComponent,\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class SimpleFileUploadComponent extends ChangeDetectableComponentBase\r\n  implements ControlValueAccessor {\r\n  @Input() public id: string;\r\n  @Input() public prefixText = 'Drag & drop your files to attach or';\r\n  @Input() public linkText = 'browse';\r\n  @Input() public suffixText = 'to choose a file';\r\n  @Input() public attachments: any[] = [];\r\n  @Input() public files: SimpleFileUploadItem[] = [];\r\n  @Input() public config: SimpleFileUploadConfig = {\r\n    attachmentNameKey: 'originalFileName',\r\n    format: { pdf: true, doc: true }\r\n  };\r\n  @Input() public isMultiple = true;\r\n  @Input() public disabled: boolean;\r\n  @Input() public hasDescription: boolean;\r\n  @Input() public maxFileSize = 1048576 - 255; // 1MB - (255 request length)\r\n  @Input() public uploadHidden: boolean;\r\n\r\n  @Output() public afterFilesSelected = new EventEmitter<\r\n    SimpleFileUploadItem[]\r\n  >();\r\n  @Output() public deleteAttachment = new EventEmitter<any>();\r\n  @Output() public clickAttachment = new EventEmitter<any>();\r\n\r\n  @ViewChild(FileUploadComponent)\r\n  public fileUploadComponent: FileUploadComponent;\r\n\r\n  constructor(protected changeDetectorRef: ChangeDetectorRef) {\r\n    super(changeDetectorRef);\r\n  }\r\n\r\n  public onAfterFilesSelected(files: File[], text?: string): void {\r\n    const filesToAdd = files.map(\r\n      file => ({ file, text } as SimpleFileUploadItem)\r\n    );\r\n    this.files = [...this.files, ...filesToAdd];\r\n    this.afterFilesSelected.emit(this.files);\r\n    this.detectChanges();\r\n  }\r\n\r\n  public onRemoveFile(index: number): void {\r\n    this.files.splice(index, 1);\r\n    this.afterFilesSelected.emit(this.files);\r\n    this.detectChanges();\r\n  }\r\n\r\n  public onClickAttachment(attachment: any): void {\r\n    this.clickAttachment.emit(attachment);\r\n  }\r\n\r\n  public onDeleteAttachment(attachment: any): void {\r\n    this.deleteAttachment.emit(attachment);\r\n  }\r\n\r\n  public writeValue(value: any): void {\r\n    if (value) {\r\n      this.files = value;\r\n    }\r\n  }\r\n\r\n  public registerOnChange(): void {}\r\n\r\n  public registerOnTouched(): void {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  TaButtonsModule,\r\n  TaSvgIconModule,\r\n  TaTooltipModule\r\n} from '@trustarc/ui-toolkit';\r\n\r\nimport { FileDownloadModule } from '../file-download/file-download.module';\r\nimport { FileUploadModule } from '../file-upload/file-upload.module';\r\nimport { SimpleFileUploadComponent } from './simple-file-upload.component';\r\n\r\n@NgModule({\r\n  declarations: [SimpleFileUploadComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FileUploadModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TaButtonsModule,\r\n    TaSvgIconModule,\r\n    TaTooltipModule,\r\n    FileDownloadModule\r\n  ],\r\n  exports: [SimpleFileUploadComponent]\r\n})\r\nexport class SimpleFileUploadModule {}\r\n","export class SimpleFileUploadItem {\r\n  file: File;\r\n  text: string;\r\n}\r\n","import { FileUploadFormatConfig } from '../file-upload';\r\n\r\nexport class SimpleFileUploadConfig {\r\n  attachmentNameKey?: string;\r\n  format?: FileUploadFormatConfig;\r\n}\r\n","import { SimpleFileUploadItem } from './simple-file-upload-item.model';\r\n\r\nexport class SimpleFileUploadItemContainer {\r\n  files: SimpleFileUploadItem[];\r\n  progress: number;\r\n  isLoading: boolean;\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  forwardRef,\r\n  Input,\r\n  OnInit\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { QuestionMultiSelectUiTypeEnum } from '../../../../enums';\r\nimport {\r\n  QuestionDetailResponseInterface,\r\n  QuestionTreeInterface\r\n} from '../../../../interfaces';\r\n\r\n@Component({\r\n  selector: 'ta-multi-select',\r\n  templateUrl: './multi-select.component.html',\r\n  styleUrls: ['./multi-select.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => MultiSelectComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class MultiSelectComponent implements OnInit, ControlValueAccessor {\r\n  @Input() public question: QuestionTreeInterface;\r\n\r\n  public readonly questionMultiSelectUiTypeEnum = QuestionMultiSelectUiTypeEnum;\r\n\r\n  constructor() {}\r\n\r\n  public ngOnInit(): void {}\r\n\r\n  public onSelectResponse(response: QuestionDetailResponseInterface): void {\r\n    this.onChange(response);\r\n  }\r\n\r\n  public registerOnChange(fn): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  public registerOnTouched(): void {}\r\n\r\n  public writeValue(value: any): void {}\r\n\r\n  private onChange = (_: any) => {};\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  forwardRef,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { QuestionSingleSelectUiTypeEnum } from '../../../../enums';\r\nimport {\r\n  QuestionDetailResponseInterface,\r\n  QuestionTreeInterface\r\n} from '../../../../interfaces';\r\nimport { isPropertyChanged } from '../../../../utils';\r\n\r\n@Component({\r\n  selector: 'ta-single-select',\r\n  templateUrl: './single-select.component.html',\r\n  styleUrls: ['./single-select.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => SingleSelectComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class SingleSelectComponent\r\n  implements OnInit, OnChanges, ControlValueAccessor {\r\n  @Input() public question: QuestionTreeInterface;\r\n\r\n  public step: number;\r\n  public readonly questionSingleSelectUiTypeEnum = QuestionSingleSelectUiTypeEnum;\r\n\r\n  constructor() {}\r\n\r\n  public ngOnInit(): void {}\r\n\r\n  public ngOnChanges(changes: SimpleChanges): void {\r\n    if (isPropertyChanged(changes.question)) {\r\n      this.updateStep();\r\n    }\r\n  }\r\n\r\n  public onSelectResponse(response: QuestionDetailResponseInterface): void {\r\n    this.onChange(response);\r\n  }\r\n\r\n  public registerOnChange(fn): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  public registerOnTouched(): void {}\r\n\r\n  public writeValue(value: any): void {}\r\n\r\n  private onChange = (_: any) => {};\r\n\r\n  private updateStep(): void {\r\n    const step =\r\n      100 / (this.question.questionDetails.questionDetailResponses.length + 1);\r\n    this.step = +step.toFixed(2);\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  forwardRef,\r\n  Input,\r\n  OnInit\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { QuestionTreeInterface } from '../../../../interfaces';\r\n\r\n@Component({\r\n  selector: 'ta-text',\r\n  templateUrl: './text.component.html',\r\n  styleUrls: ['./text.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => TextComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class TextComponent implements OnInit, ControlValueAccessor {\r\n  @Input() public question: QuestionTreeInterface;\r\n\r\n  public value: string;\r\n\r\n  constructor() {}\r\n\r\n  public ngOnInit(): void {}\r\n\r\n  public onModelChange(value: string): void {\r\n    this.onChange(value);\r\n  }\r\n\r\n  public registerOnChange(fn): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  public registerOnTouched(): void {}\r\n\r\n  public writeValue(value: string): void {\r\n    if (value) {\r\n      this.value = value;\r\n    }\r\n  }\r\n\r\n  private onChange = (_: any) => {};\r\n}\r\n","import { HttpClient, HttpEvent } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { VERITAS_API_PROXY_PREFIX_URL } from '../../constants';\r\nimport {\r\n  AnswerDetailResponseInterface,\r\n  QuestionnaireInterface\r\n} from '../../interfaces/questionnaire.interface';\r\nimport { Attachment } from '../../models/attachment.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashBoardSurveyControllerService {\r\n  private readonly url = `${this.veritasApiProxyPrefixUrl}/question-survey`;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    @Inject(VERITAS_API_PROXY_PREFIX_URL)\r\n    private veritasApiProxyPrefixUrl: string\r\n  ) {}\r\n\r\n  /**\r\n   * GET List Tasks Data\r\n   */\r\n  public getQuestionContainerViewPages(\r\n    recordId: string\r\n  ): Observable<QuestionnaireInterface> {\r\n    return this.httpClient\r\n      .get(`${this.url}/${recordId}`)\r\n      .pipe(map(this.mapGetQuestionContainerViewPages));\r\n  }\r\n\r\n  public postAttachments$(\r\n    recordId: string,\r\n    questionNodeId: string,\r\n    files: File[]\r\n  ): Observable<HttpEvent<Attachment[]>> {\r\n    const formData = new FormData();\r\n    files.forEach(file => formData.append('attachmentFiles', file));\r\n\r\n    return this.httpClient.post<any>(\r\n      `${this.url}/${recordId}/question/${questionNodeId}/attachments`,\r\n      formData,\r\n      {\r\n        reportProgress: true,\r\n        observe: 'events'\r\n      }\r\n    );\r\n  }\r\n\r\n  public deleteAttachment$(\r\n    recordId: string,\r\n    questionNodeId: string,\r\n    attachmentId: string\r\n  ): Observable<Attachment[]> {\r\n    return this.httpClient.delete<Attachment[]>(\r\n      `${\r\n        this.url\r\n      }/${recordId}/question/${questionNodeId}/attachments/${attachmentId}`\r\n    );\r\n  }\r\n\r\n  private mapGetQuestionContainerViewPages(questionnaire) {\r\n    return questionnaire;\r\n  }\r\n\r\n  public postQuestionDetailResponses(\r\n    answers: AnswerDetailResponseInterface[],\r\n    submitAction: boolean,\r\n    recordId: string\r\n  ): Observable<any> {\r\n    // Assemble post data\r\n    const answersData = {\r\n      answers: answers,\r\n      submitAction: submitAction\r\n    };\r\n    return this.httpClient.post(\r\n      `/api/question-survey/${recordId}`,\r\n      answersData\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { QuestionTypeEnum } from '../../enums/question-type.enum';\r\nimport { QuestionnaireViewModeEnum } from '../../enums/questionnaire-view-mode.enum';\r\nimport {\r\n  ConditionDetailConditionInterface,\r\n  ConditionTreeInterface,\r\n  QuestionDetailResponseInterface,\r\n  QuestionDetailsInterface\r\n} from '../../interfaces/questionnaire.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QuestionnaireUtilsService {\r\n  private reviewMode = false;\r\n  private viewMode = QuestionnaireViewModeEnum.All;\r\n  private _viewModeSubject$ = new Subject<any>();\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * Toggles whether to display the questionnaire in review mode.\r\n   */\r\n  public getReviewMode() {\r\n    return this.reviewMode;\r\n  }\r\n\r\n  public setReviewMode(reviewMode: boolean) {\r\n    this.reviewMode = reviewMode;\r\n  }\r\n\r\n  /**\r\n   * Communicate whether to show all, unanswered, or answered questions\r\n   */\r\n  public getViewMode() {\r\n    return this.viewMode;\r\n  }\r\n\r\n  public changeViewMode(viewMode: QuestionnaireViewModeEnum) {\r\n    this.viewMode = viewMode;\r\n    this._viewModeSubject$.next(this.viewMode);\r\n  }\r\n\r\n  public getViewModeObservable(): Observable<string> {\r\n    return this._viewModeSubject$.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Return the question's current anwer. Can be a response object or a string.\r\n   * @param question to check\r\n   */\r\n  public getQuestionAnswer(questionDetails: QuestionDetailsInterface): any {\r\n    switch (questionDetails.questionDetailType) {\r\n      case QuestionTypeEnum.SingleSelect:\r\n        // Loop through responses and if previously selected option was found, patch value\r\n        const questionDetailResponses = questionDetails.questionDetailResponses;\r\n        if (questionDetailResponses) {\r\n          const selectedResponse = questionDetailResponses.find(response => {\r\n            return response.questionDetailResponsesSelected;\r\n          });\r\n\r\n          if (selectedResponse) {\r\n            return selectedResponse;\r\n          }\r\n        }\r\n        break;\r\n      case QuestionTypeEnum.Text:\r\n        const textResponse = questionDetails.questionDetailAnswerText;\r\n        if (textResponse) {\r\n          return textResponse;\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Used by parent question with a conditionTree to see if it should display it\r\n   * @param conditionTree conditionTree\r\n   */\r\n  public getConditionFulfilled(\r\n    conditionTree: ConditionTreeInterface,\r\n    questionDetails: QuestionDetailsInterface\r\n  ): boolean {\r\n    // Depending on question type, get the appropriate answer object/string\r\n    // Currently only supports single select\r\n    const selectedResponse: QuestionDetailResponseInterface = questionDetails.questionDetailResponses.find(\r\n      response => {\r\n        return response.questionDetailResponsesSelected;\r\n      }\r\n    );\r\n\r\n    if (\r\n      conditionTree.conditionDetails &&\r\n      conditionTree.conditionDetails.conditionDetailConditions\r\n    ) {\r\n      const conditionDetailConditions: ConditionDetailConditionInterface[] =\r\n        conditionTree.conditionDetails.conditionDetailConditions;\r\n\r\n      // Loop through all conditions and make sure they are all fulfilled\r\n      for (let i = 0; i < conditionDetailConditions.length; i++) {\r\n        const conditionDetailCondition = conditionDetailConditions[i];\r\n        if (!this.checkCondition(conditionDetailCondition, selectedResponse)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check that given condition is fulfilled by parent question\r\n   * @param conditionDetailCondition conditionDetailCondition\r\n   */\r\n  private checkCondition(\r\n    conditionDetailCondition: ConditionDetailConditionInterface,\r\n    currentResponse: any\r\n  ): boolean {\r\n    // Currently only supports single select\r\n    if (currentResponse && conditionDetailCondition.expressionViewValueId) {\r\n      const answer: QuestionDetailResponseInterface = currentResponse;\r\n      const questionResponseId = answer.questionDetailResponsesId;\r\n      const conditionValueId = conditionDetailCondition.expressionViewValueId;\r\n\r\n      if (questionResponseId === conditionValueId) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\nimport { QuestionnaireViewModeEnum, QuestionTypeEnum } from '../../enums';\r\nimport {\r\n  QuestionDetailsInterface,\r\n  QuestionTreeInterface\r\n} from '../../interfaces';\r\nimport { QuestionnaireUtilsService } from '../../services';\r\n\r\n@Component({\r\n  selector: 'ta-question',\r\n  templateUrl: './question.component.html',\r\n  styleUrls: ['./question.component.scss']\r\n})\r\nexport class QuestionComponent implements OnInit {\r\n  @Input() public question: QuestionTreeInterface = {\r\n    nodeId: null,\r\n    nodeType: null,\r\n    questionDetails: {\r\n      questionDetailText: null,\r\n      questionDetailType: null,\r\n      commentMessageCount: null,\r\n      questionDetailResponses: [],\r\n      questionDetailAnswer: null,\r\n      recordQuestionEntityId: null\r\n    } as QuestionDetailsInterface,\r\n    children: []\r\n  };\r\n\r\n  @Output() public formReady = new EventEmitter<FormGroup>();\r\n\r\n  public readonly questionTypeEnum = QuestionTypeEnum;\r\n  public answerText = '';\r\n  public questionForm: FormGroup;\r\n  public viewMode: QuestionnaireViewModeEnum;\r\n  public questionAnswer: any;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private questionnaireUtilsService: QuestionnaireUtilsService\r\n  ) {\r\n    this.questionForm = this.formBuilder.group({\r\n      answer: null,\r\n      questionId: null\r\n    });\r\n    this.viewMode = this.questionnaireUtilsService.getViewMode();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.processSelectedOption();\r\n    this.formReady.emit(this.questionForm);\r\n\r\n    Object.keys(this.questionForm.controls).forEach(key =>\r\n      this.questionForm.controls[key].valueChanges.subscribe(value =>\r\n        this.formValueOfAnswerChanged(value)\r\n      )\r\n    );\r\n\r\n    this.questionnaireUtilsService\r\n      .getViewModeObservable()\r\n      .subscribe((viewMode: QuestionnaireViewModeEnum) => {\r\n        this.viewMode = viewMode;\r\n      });\r\n  }\r\n\r\n  public isQuestionVisible(): boolean {\r\n    switch (this.viewMode) {\r\n      case QuestionnaireViewModeEnum.All:\r\n        return true;\r\n      case QuestionnaireViewModeEnum.Answered:\r\n        return this.question.isAnswered;\r\n      case QuestionnaireViewModeEnum.Unanswered:\r\n        return !this.question.isAnswered;\r\n      default:\r\n        return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if question was previously answered, and sync it to the form object.\r\n   */\r\n  private processSelectedOption(): void {\r\n    this.questionForm.patchValue(\r\n      {\r\n        questionId: this.question.nodeId,\r\n        answerDescription: this.question.questionDetails.answerDescription\r\n      },\r\n      { emitEvent: false }\r\n    );\r\n    const questionAnswer = this.questionnaireUtilsService.getQuestionAnswer(\r\n      this.question.questionDetails\r\n    );\r\n    if (questionAnswer) {\r\n      this.questionForm.patchValue(\r\n        {\r\n          answer: questionAnswer\r\n        },\r\n        { emitEvent: false }\r\n      );\r\n      this.question.isAnswered = true;\r\n      this.questionAnswer = questionAnswer;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Depending on question type, update the question object\r\n   * @param value form value\r\n   */\r\n  private formValueOfAnswerChanged(value: any): void {\r\n    switch (this.question.questionDetails.questionDetailType) {\r\n      case QuestionTypeEnum.SingleSelect:\r\n        // Loop through responses and if previously selected option was found, patch value\r\n        const questionDetailResponses = this.question.questionDetails\r\n          .questionDetailResponses;\r\n        if (questionDetailResponses) {\r\n          // Mark the current choice false\r\n          const prevResponse = questionDetailResponses.find(response => {\r\n            return response.questionDetailResponsesSelected;\r\n          });\r\n          if (prevResponse) {\r\n            prevResponse.questionDetailResponsesSelected = false;\r\n          }\r\n\r\n          // Mark the new choice true\r\n          const newResponse = questionDetailResponses.find(response => {\r\n            return (\r\n              response.questionDetailResponsesId ===\r\n              value.questionDetailResponsesId\r\n            );\r\n          });\r\n          newResponse.questionDetailResponsesSelected = true;\r\n        }\r\n        break;\r\n\r\n      case QuestionTypeEnum.MultiSelect:\r\n        if (this.question.questionDetails.questionDetailResponses) {\r\n          const questionDetailResponse = this.question.questionDetails.questionDetailResponses.find(\r\n            response =>\r\n              response.questionDetailResponsesId ===\r\n              value.questionDetailResponsesId\r\n          );\r\n          questionDetailResponse.questionDetailResponsesSelected = !questionDetailResponse.questionDetailResponsesSelected;\r\n        }\r\n        break;\r\n\r\n      case QuestionTypeEnum.Text:\r\n        // Update value of questionDetailAnswerText on data object\r\n        this.question.questionDetails.questionDetailAnswerText = value;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // Set answered flag\r\n    if (value && value.answer) {\r\n      this.question.isAnswered = true;\r\n    } else {\r\n      this.question.isAnswered = false;\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  TaButtonsModule,\r\n  TaDropdownModule,\r\n  TaProgressbarModule,\r\n  TaRadioModule,\r\n  TaSvgIconModule,\r\n  TaTooltipModule\r\n} from '@trustarc/ui-toolkit';\r\n\r\nimport { SimpleFileUploadModule } from '../file-upload';\r\nimport { MultiSelectComponent } from './components/multi-select/multi-select.component';\r\nimport { SingleSelectComponent } from './components/single-select/single-select.component';\r\nimport { TextComponent } from './components/text/text.component';\r\nimport { QuestionComponent } from './question.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    QuestionComponent,\r\n    MultiSelectComponent,\r\n    SingleSelectComponent,\r\n    TextComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    TaRadioModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    TaButtonsModule,\r\n    TaSvgIconModule,\r\n    TaDropdownModule,\r\n    TaTooltipModule,\r\n    SimpleFileUploadModule,\r\n    TaProgressbarModule\r\n  ],\r\n  exports: [QuestionComponent]\r\n})\r\nexport class QuestionModule {}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ta-question-more-menu',\r\n  templateUrl: './question-more-menu.component.html',\r\n  styleUrls: ['./question-more-menu.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class QuestionMoreMenuComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  public ngOnInit(): void {}\r\n}\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\n\r\nimport {\r\n  ConditionTreeInterface,\r\n  QuestionDetailsInterface,\r\n  QuestionTreeInterface\r\n} from '../../interfaces';\r\nimport { Attachment } from '../../models';\r\nimport { QuestionnaireUtilsService } from '../../services';\r\nimport {\r\n  SimpleFileUploadComponent,\r\n  SimpleFileUploadItem\r\n} from '../file-upload';\r\n\r\n@Component({\r\n  selector: 'ta-question-accordion',\r\n  templateUrl: './question-accordion.component.html',\r\n  styleUrls: ['./question-accordion.component.scss']\r\n})\r\nexport class QuestionAccordionComponent implements OnInit {\r\n  @Input() public question: QuestionTreeInterface = {\r\n    nodeId: null,\r\n    nodeType: null,\r\n    questionDetails: {\r\n      questionDetailText: null,\r\n      questionDetailType: null,\r\n      commentMessageCount: null,\r\n      questionDetailResponses: [],\r\n      questionDetailAnswer: null,\r\n      recordQuestionEntityId: null\r\n    } as QuestionDetailsInterface,\r\n    children: []\r\n  };\r\n\r\n  @Output() public formReady = new EventEmitter<FormGroup>();\r\n  @Output() public afterFilesSelected = new EventEmitter<\r\n    [QuestionTreeInterface, SimpleFileUploadItem[]]\r\n  >();\r\n  @Output() public deleteAttachment = new EventEmitter<\r\n    [QuestionTreeInterface, Attachment]\r\n  >();\r\n  @Output() public clickAttachment = new EventEmitter<Attachment>();\r\n\r\n  @ViewChild(SimpleFileUploadComponent)\r\n  public simpleFileUploadComponent: SimpleFileUploadComponent;\r\n\r\n  public questionAccordionForm: FormGroup;\r\n  public reviewMode: boolean;\r\n\r\n  private get children(): FormArray {\r\n    return this.questionAccordionForm.get('children') as FormArray;\r\n  }\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private questionnaireUtilsService: QuestionnaireUtilsService\r\n  ) {\r\n    this.questionAccordionForm = this.formBuilder.group({\r\n      question: null,\r\n      children: this.formBuilder.array([]),\r\n      conditionFulfilled: false\r\n    });\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.formReady.emit(this.questionAccordionForm);\r\n    this.questionAccordionForm.valueChanges.subscribe(value => {\r\n      this.formValueChanged(value);\r\n    });\r\n    this.reviewMode = this.questionnaireUtilsService.getReviewMode();\r\n  }\r\n\r\n  /**\r\n   * Propagate main questionForm to questionAccordionForm\r\n   * @param questionForm questionForm\r\n   */\r\n  public questionFormReady(questionForm: FormGroup): void {\r\n    this.questionAccordionForm.setControl('question', questionForm);\r\n  }\r\n\r\n  /**\r\n   * Propagate child questionForm to questionAccordionForm\r\n   * @param questionForm questionForm\r\n   */\r\n  public childFormReady(questionForm: FormGroup): void {\r\n    this.children.push(questionForm);\r\n  }\r\n\r\n  public onAddAttachments(): void {\r\n    this.simpleFileUploadComponent.fileUploadComponent.openUploadBrowser();\r\n  }\r\n\r\n  private formValueChanged(value: any): void {\r\n    // Check if new answer fulfills the condition of this question\r\n    for (let i = 0; i < this.question.children.length; i++) {\r\n      const conditionChild: ConditionTreeInterface = this.question.children[i];\r\n      // set this so that UI can store whether to show follow up questions\r\n      conditionChild.conditionFulfilled = this.questionnaireUtilsService.getConditionFulfilled(\r\n        conditionChild,\r\n        this.question.questionDetails\r\n      );\r\n      this.questionAccordionForm.patchValue(\r\n        { conditionFulfilled: conditionChild.conditionFulfilled },\r\n        { emitEvent: false }\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  TaButtonsModule,\r\n  TaDropdownModule,\r\n  TaProgressbarModule,\r\n  TaRadioModule,\r\n  TaSvgIconModule,\r\n  TaToggleSwitchModule\r\n} from '@trustarc/ui-toolkit';\r\n\r\nimport { CommentsPopoverModule } from '../comments-popover';\r\nimport { SimpleFileUploadModule } from '../file-upload';\r\nimport { QuestionModule } from '../question';\r\nimport { QuestionMoreMenuComponent } from './components/question-more-menu/question-more-menu.component';\r\nimport { QuestionAccordionComponent } from './question-accordion.component';\r\n\r\nconst uiToolkitModules = [\r\n  TaRadioModule,\r\n  TaProgressbarModule,\r\n  TaSvgIconModule,\r\n  TaButtonsModule,\r\n  TaDropdownModule\r\n];\r\n\r\n@NgModule({\r\n  declarations: [QuestionAccordionComponent, QuestionMoreMenuComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    QuestionModule,\r\n    CommentsPopoverModule,\r\n    SimpleFileUploadModule,\r\n    TaToggleSwitchModule,\r\n    ...uiToolkitModules\r\n  ],\r\n  exports: [QuestionAccordionComponent, QuestionMoreMenuComponent]\r\n})\r\nexport class QuestionAccordionModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  OnInit\r\n} from '@angular/core';\r\n\r\nimport { TaskStatusEnum } from '../../enums';\r\n\r\n@Component({\r\n  selector: 'ta-task-status-tag',\r\n  templateUrl: './task-status-tag.component.html',\r\n  styleUrls: ['./task-status-tag.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TaskStatusTagComponent implements OnInit {\r\n  @Input() public taskStatus: TaskStatusEnum;\r\n\r\n  public taskStatusEnum = TaskStatusEnum;\r\n\r\n  constructor() {}\r\n\r\n  public ngOnInit(): void {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { TaskStatusTagComponent } from './task-status-tag.component';\r\n\r\n@NgModule({\r\n  declarations: [TaskStatusTagComponent],\r\n  imports: [CommonModule],\r\n  exports: [TaskStatusTagComponent]\r\n})\r\nexport class TaskStatusTagModule {}\r\n","import { HttpEventType } from '@angular/common/http';\r\nimport {\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { TaModal, ToastService } from '@trustarc/ui-toolkit';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, finalize } from 'rxjs/operators';\r\n\r\nimport { QuestionnaireViewModeEnum, TaskStatusEnum } from '../../enums';\r\nimport {\r\n  AnswerDetailResponseInterface,\r\n  AnswersFormInterface,\r\n  ConditionTreeInterface,\r\n  QuestionContainerViewPageInterface,\r\n  QuestionDetailResponseInterface,\r\n  QuestionFormInterface,\r\n  QuestionnaireInterface,\r\n  QuestionnaireSectionCounts,\r\n  QuestionTreeInterface\r\n} from '../../interfaces';\r\nimport { Attachment } from '../../models';\r\nimport {\r\n  DashBoardCommentControllerService,\r\n  DashBoardSurveyControllerService,\r\n  QuestionnaireUtilsService\r\n} from '../../services';\r\nimport {\r\n  generateErrorMessage,\r\n  getProgress,\r\n  isPropertyChanged\r\n} from '../../utils';\r\nimport { DeleteModalComponent } from '../delete-modal';\r\nimport {\r\n  SimpleFileUploadItem,\r\n  SimpleFileUploadItemContainer\r\n} from '../file-upload/simple-file-upload';\r\n\r\n@Component({\r\n  selector: 'ta-questionnaire-content',\r\n  templateUrl: './questionnaire-content.component.html',\r\n  styleUrls: ['./questionnaire-content.component.scss']\r\n})\r\nexport class QuestionnaireContentComponent\r\n  implements OnInit, OnDestroy, OnChanges {\r\n  @Input() public recordId: string;\r\n  @Input() public reviewMode: boolean;\r\n\r\n  public questionnaireViewModesEnum = QuestionnaireViewModeEnum;\r\n  public taskStatusEnum = TaskStatusEnum;\r\n\r\n  public questionnaire: QuestionnaireInterface;\r\n  public sections: QuestionContainerViewPageInterface[];\r\n\r\n  public selectedSection: QuestionContainerViewPageInterface;\r\n  public selectedSectionIndex = 0;\r\n  public totalQuestionsCount: number;\r\n  public totalAnswersCount: number;\r\n  public showActionStatus = false;\r\n  public selectedViewMode = QuestionnaireViewModeEnum.All;\r\n\r\n  private sectionForm: FormGroup;\r\n\r\n  private _sectionFormSubscription$: Subscription;\r\n  private _updateQuestionnaireCountsSubscription$: Subscription;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private dashBoardSurveyControllerService: DashBoardSurveyControllerService,\r\n    private dashBoardCommentControllerService: DashBoardCommentControllerService,\r\n    private questionnaireUtilsService: QuestionnaireUtilsService,\r\n    private router: Router,\r\n    private toastService: ToastService,\r\n    private modal: TaModal\r\n  ) {}\r\n\r\n  public ngOnInit() {}\r\n\r\n  public ngOnDestroy() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  public async ngOnChanges(changes: SimpleChanges) {\r\n    if (isPropertyChanged(changes.recordId)) {\r\n      if (this.recordId) {\r\n        try {\r\n          this.questionnaire = await this.dashBoardSurveyControllerService\r\n            .getQuestionContainerViewPages(this.recordId)\r\n            .toPromise();\r\n\r\n          this.questionnaire.questionContainerViewPages.forEach(item =>\r\n            this.initDefaultFileContainerInQuestions(item.questionTree)\r\n          );\r\n          this.sections = this.questionnaire.questionContainerViewPages;\r\n          this.selectSection(\r\n            this.sections[this.selectedSectionIndex],\r\n            this.selectedSectionIndex\r\n          );\r\n          this.updateQuestionnaireCounts();\r\n        } catch (error) {\r\n          this.toastService.error(\r\n            generateErrorMessage('Questionnaire load failed', error)\r\n          );\r\n        }\r\n\r\n        this.resetForm();\r\n      }\r\n    }\r\n\r\n    if (isPropertyChanged(changes.reviewMode)) {\r\n      this.questionnaireUtilsService.setReviewMode(this.reviewMode);\r\n    }\r\n  }\r\n\r\n  public get isSectionComplete(): boolean {\r\n    return this.selectedSection\r\n      ? this.selectedSection.totalActiveAnswerCount ===\r\n          this.selectedSection.totalActiveQuestionCount\r\n      : false;\r\n  }\r\n\r\n  public get isFirstSection(): boolean {\r\n    return this.selectedSectionIndex === 0;\r\n  }\r\n\r\n  public get isLastSection(): boolean {\r\n    return this.selectedSectionIndex === this.sections.length - 1;\r\n  }\r\n\r\n  private get sectionQuestions() {\r\n    return this.sectionForm.get('questions') as FormArray;\r\n  }\r\n\r\n  /**\r\n   * Adds question's individual form into questionnaireForm\r\n   * @param index question index\r\n   * @param questionForm FormGroup\r\n   */\r\n  public questionFormReady(questionForm: FormGroup) {\r\n    this.sectionQuestions.push(questionForm);\r\n  }\r\n\r\n  public selectViewMode(viewMode: QuestionnaireViewModeEnum) {\r\n    this.selectedViewMode = viewMode;\r\n    this.questionnaireUtilsService.changeViewMode(viewMode);\r\n  }\r\n\r\n  public selectSection(\r\n    section: QuestionContainerViewPageInterface,\r\n    sectionIndex: number\r\n  ) {\r\n    this.resetForm();\r\n    this.selectedSectionIndex = sectionIndex;\r\n    this.selectedSection = section;\r\n  }\r\n\r\n  public selectNextSection() {\r\n    this.selectedSectionIndex++;\r\n    this.selectedSection = this.sections[this.selectedSectionIndex];\r\n  }\r\n\r\n  public selectPrevSection() {\r\n    this.selectedSectionIndex--;\r\n    this.selectedSection = this.sections[this.selectedSectionIndex];\r\n  }\r\n\r\n  public isSelectedSection(section: QuestionContainerViewPageInterface) {\r\n    return section.id === this.selectedSection.id;\r\n  }\r\n\r\n  public submitQuestionnaire() {\r\n    this.postQuestionnaire(this.sectionForm.value, true);\r\n  }\r\n\r\n  public async exitQuestionnaire() {\r\n    await this.router.navigateByUrl(`tasks`);\r\n  }\r\n\r\n  public onAfterFilesSelected(\r\n    eventTuple: [QuestionTreeInterface, SimpleFileUploadItem[]]\r\n  ): void {\r\n    this.showActionStatus = true;\r\n    const selectedQuestion = eventTuple[0];\r\n    const files = eventTuple[1];\r\n    this.setFileContainer(selectedQuestion, {\r\n      isLoading: true,\r\n      progress: 0\r\n    } as SimpleFileUploadItemContainer);\r\n\r\n    this.dashBoardSurveyControllerService\r\n      .postAttachments$(\r\n        this.questionnaire.recordId,\r\n        selectedQuestion.nodeId,\r\n        files.map(f => f.file)\r\n      )\r\n      .subscribe(\r\n        result => {\r\n          switch (result.type) {\r\n            case HttpEventType.UploadProgress:\r\n              this.setFileContainer(selectedQuestion, {\r\n                progress: getProgress(result.loaded, result.total)\r\n              } as SimpleFileUploadItemContainer);\r\n              break;\r\n\r\n            case HttpEventType.Response:\r\n              this.showActionStatus = false;\r\n              this.setFileContainer(\r\n                selectedQuestion,\r\n                this.generateDefaultFileContainer()\r\n              );\r\n              this.setAttachments(selectedQuestion, result.body);\r\n              this.toastService.success('Attachment uploaded');\r\n              break;\r\n          }\r\n        },\r\n        error => {\r\n          this.showActionStatus = false;\r\n          this.resetToDefaultFileContainer(selectedQuestion);\r\n          this.toastService.error(\r\n            generateErrorMessage('File upload failed', error)\r\n          );\r\n        }\r\n      );\r\n  }\r\n\r\n  public onClickAttachment(attachment: Attachment): void {\r\n    this.dashBoardCommentControllerService\r\n      .getAttachmentDownloadUrl$(attachment.id)\r\n      .subscribe(\r\n        result => window.open(result),\r\n        error =>\r\n          this.toastService.error(\r\n            generateErrorMessage('Attachment load failed', error)\r\n          )\r\n      );\r\n  }\r\n\r\n  public openDeleteModal(\r\n    eventTuple: [QuestionTreeInterface, Attachment]\r\n  ): void {\r\n    const modalRef = this.modal.open(DeleteModalComponent, {\r\n      size: 'sm',\r\n      backdrop: 'static'\r\n    });\r\n\r\n    const instance = modalRef.componentInstance as DeleteModalComponent;\r\n    instance.title = 'Delete Attachment?';\r\n    instance.clickPrimary.subscribe(() => {\r\n      modalRef.close();\r\n      this.onDeleteAttachment(eventTuple);\r\n    });\r\n  }\r\n\r\n  public onDeleteAttachment(\r\n    eventTuple: [QuestionTreeInterface, Attachment]\r\n  ): void {\r\n    this.showActionStatus = true;\r\n    const selectedQuestion = eventTuple[0];\r\n    const attachment = eventTuple[1];\r\n    this.dashBoardSurveyControllerService\r\n      .deleteAttachment$(\r\n        this.questionnaire.recordId,\r\n        selectedQuestion.nodeId,\r\n        attachment.id\r\n      )\r\n      .pipe(\r\n        finalize(() => {\r\n          this.showActionStatus = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        result => {\r\n          this.setAttachments(\r\n            selectedQuestion,\r\n            selectedQuestion.questionDetails.attachments.filter(\r\n              item => item.id !== attachment.id\r\n            )\r\n          );\r\n          this.toastService.success('Attachment deleted');\r\n        },\r\n        error => {\r\n          this.resetToDefaultFileContainer(selectedQuestion);\r\n          this.toastService.error(\r\n            generateErrorMessage('Attachment delete failed', error)\r\n          );\r\n        }\r\n      );\r\n  }\r\n\r\n  private setFileContainer(\r\n    question: QuestionTreeInterface,\r\n    fileContainer: SimpleFileUploadItemContainer\r\n  ): void {\r\n    question.questionDetails = {\r\n      ...question.questionDetails,\r\n      fileContainer: {\r\n        ...question.questionDetails.fileContainer,\r\n        ...fileContainer\r\n      }\r\n    };\r\n  }\r\n\r\n  private setAttachments(\r\n    selectedQuestion: QuestionTreeInterface,\r\n    attachments: Attachment[]\r\n  ): void {\r\n    selectedQuestion.questionDetails.attachments = attachments;\r\n  }\r\n\r\n  private resetToDefaultFileContainer(question: QuestionTreeInterface): void {\r\n    this.setFileContainer(question, this.generateDefaultFileContainer());\r\n  }\r\n\r\n  private generateDefaultFileContainer(): SimpleFileUploadItemContainer {\r\n    return {\r\n      files: [],\r\n      progress: 0,\r\n      isLoading: false\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Make POST API call to save/submit survey.\r\n   * @param value Form value\r\n   * @param submitAction whether API should submit the survey for rules running. Used with 'submit' button\r\n   */\r\n  private postQuestionnaire(\r\n    value: AnswersFormInterface,\r\n    submitAction: boolean\r\n  ) {\r\n    this.showActionStatus = true;\r\n    let answers: AnswerDetailResponseInterface[] = [];\r\n    for (let i = 0; i < value.questions.length; i++) {\r\n      const questionDetails = value.questions[i];\r\n      answers = answers.concat(this.crawlAnswer(questionDetails));\r\n    }\r\n\r\n    // Submit just this question to the server\r\n    this.dashBoardSurveyControllerService\r\n      .postQuestionDetailResponses(answers, submitAction, this.recordId)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.showActionStatus = false;\r\n        })\r\n      )\r\n      .subscribe(async () => {\r\n        if (submitAction) {\r\n          await this.exitQuestionnaire();\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Recursive function that returns the total list of answers of the question and all its children.\r\n   * @param question question to crawl\r\n   */\r\n  private crawlAnswer(\r\n    questionDetails: QuestionFormInterface\r\n  ): AnswerDetailResponseInterface[] {\r\n    let answers: AnswerDetailResponseInterface[] = [];\r\n    const answer: QuestionDetailResponseInterface =\r\n      questionDetails.question.answer;\r\n    if (answer) {\r\n      // Add single choice answer item\r\n      const answerDetailText = answer.questionDetailResponsesChoice;\r\n      const questionDetailResponsesIds = [answer.questionDetailResponsesId];\r\n      const questionNodeId = questionDetails.question.questionId;\r\n\r\n      const answerPost: AnswerDetailResponseInterface = {\r\n        answerDetailText: answerDetailText,\r\n        questionDetailResponsesIds: questionDetailResponsesIds,\r\n        questionNodeId: questionNodeId,\r\n        answerDescription: questionDetails.question.answerDescription\r\n      };\r\n      answers.push(answerPost);\r\n    }\r\n    if (questionDetails.conditionFulfilled) {\r\n      for (let j = 0; j < questionDetails.children.length; j++) {\r\n        const child = questionDetails.children[j];\r\n        answers = answers.concat(this.crawlAnswer(child));\r\n      }\r\n    }\r\n    return answers;\r\n  }\r\n\r\n  /**\r\n   * Update the answered/unanswered counts across the whole page\r\n   * @param onlySelected Whether to update only selected section. Used when not updating the entire section list\r\n   */\r\n  private updateQuestionnaireCounts(onlySelected?: boolean) {\r\n    // Loop through all sections and generate counts\r\n    if (onlySelected) {\r\n      this.updateSectionCounts(this.selectedSection);\r\n    } else {\r\n      for (let i = 0; i < this.sections.length; i++) {\r\n        const section = this.sections[i];\r\n        this.updateSectionCounts(section);\r\n      }\r\n    }\r\n    this.updateTotalSectionCounts();\r\n  }\r\n\r\n  /**\r\n   * Update the total answered/unanswerd counts for the entire questionnaire, counting all sections\r\n   */\r\n  private updateTotalSectionCounts() {\r\n    let totalAnswersCount = 0;\r\n    let totalQuestionsCount = 0;\r\n    for (let i = 0; i < this.sections.length; i++) {\r\n      const section = this.sections[i];\r\n      totalAnswersCount += section.totalActiveAnswerCount;\r\n      totalQuestionsCount += section.totalActiveQuestionCount;\r\n    }\r\n    this.totalAnswersCount = totalAnswersCount;\r\n    this.totalQuestionsCount = totalQuestionsCount;\r\n  }\r\n\r\n  /**\r\n   * Update the answered/unanswered counts for the section\r\n   * @param section section form\r\n   */\r\n  private updateSectionCounts(section: QuestionContainerViewPageInterface) {\r\n    // Recursively navigate through each question and its children\r\n    const questionTree = section.questionTree;\r\n    let totalActiveQuestionCount = 0;\r\n    let totalActiveAnswerCount = 0;\r\n    for (let i = 0; i < questionTree.length; i++) {\r\n      const rootQuestion = questionTree[i];\r\n      const crawlCounts = this.crawlQuestion(rootQuestion);\r\n\r\n      totalActiveQuestionCount += crawlCounts.questionTotal;\r\n      totalActiveAnswerCount += crawlCounts.answerTotal;\r\n    }\r\n\r\n    // Update counts on UI\r\n    section.totalActiveQuestionCount = totalActiveQuestionCount;\r\n    section.totalActiveAnswerCount = totalActiveAnswerCount;\r\n  }\r\n\r\n  /**\r\n   * Recursive function that returns the total count of active child questions and itself.\r\n   * @param question question to crawl\r\n   */\r\n  private crawlQuestion(\r\n    question: QuestionTreeInterface\r\n  ): QuestionnaireSectionCounts {\r\n    // Loop through conditionChildren\r\n    let questionTotal = 0;\r\n    let answerTotal = 0;\r\n    if (question.children.length > 0) {\r\n      for (let i = 0; i < question.children.length; i++) {\r\n        const conditionChild: ConditionTreeInterface = question.children[i];\r\n        const conditionFulfilled = this.questionnaireUtilsService.getConditionFulfilled(\r\n          conditionChild,\r\n          question.questionDetails\r\n        );\r\n\r\n        if (conditionFulfilled) {\r\n          // If child condition is fulfilled, recurse into child\r\n          let crawlQuestionTotal = 0;\r\n          let crawlAnswerTotal = 0;\r\n          for (let j = 0; j < conditionChild.children.length; j++) {\r\n            const childQuestion = conditionChild.children[j];\r\n            const crawlCounts = this.crawlQuestion(childQuestion);\r\n            crawlQuestionTotal += crawlCounts.questionTotal;\r\n            crawlAnswerTotal += crawlCounts.answerTotal;\r\n          }\r\n          questionTotal += crawlQuestionTotal;\r\n          answerTotal += crawlAnswerTotal;\r\n        }\r\n      }\r\n    }\r\n    // Update counts for the question itself\r\n    questionTotal += 1;\r\n    if (\r\n      this.questionnaireUtilsService.getQuestionAnswer(question.questionDetails)\r\n    ) {\r\n      answerTotal += 1;\r\n    }\r\n\r\n    return { questionTotal: questionTotal, answerTotal: answerTotal };\r\n  }\r\n\r\n  /**\r\n   * Instantiate and subscribe to new section form\r\n   */\r\n  private resetForm() {\r\n    this.sectionForm = this.formBuilder.group({\r\n      questions: this.formBuilder.array([])\r\n    });\r\n    this.unsubscribe();\r\n    this._updateQuestionnaireCountsSubscription$ = this.sectionForm.valueChanges\r\n      .pipe(debounceTime(10))\r\n      .subscribe(value => {\r\n        this.updateQuestionnaireCounts(true);\r\n      });\r\n    this._sectionFormSubscription$ = this.sectionForm.valueChanges\r\n      .pipe(debounceTime(1000))\r\n      .subscribe(value => {\r\n        this.postQuestionnaire(value, false);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe from existing subscriptions\r\n   */\r\n  private unsubscribe() {\r\n    if (this._updateQuestionnaireCountsSubscription$) {\r\n      this._updateQuestionnaireCountsSubscription$.unsubscribe();\r\n    }\r\n    if (this._sectionFormSubscription$) {\r\n      this._sectionFormSubscription$.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private initDefaultFileContainerInQuestions(\r\n    questions: QuestionTreeInterface[]\r\n  ): void {\r\n    questions.forEach(question => {\r\n      question.questionDetails.fileContainer = this.generateDefaultFileContainer();\r\n      question.children.forEach(condition => {\r\n        this.initDefaultFileContainerInQuestions(condition.children);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  TaButtonsModule,\r\n  TaDropdownModule,\r\n  TaTabsetModule,\r\n  TaTagsModule,\r\n  TaTooltipModule\r\n} from '@trustarc/ui-toolkit';\r\n\r\nimport { DeleteModalModule } from '../delete-modal';\r\nimport { InitialIndicatorModule } from '../initial-indicator';\r\nimport { QuestionModule } from '../question';\r\nimport { QuestionAccordionModule } from '../question-accordion';\r\nimport { TaskStatusTagModule } from '../task-status-tag';\r\nimport { QuestionnaireContentComponent } from './questionnaire-content.component';\r\n\r\n@NgModule({\r\n  declarations: [QuestionnaireContentComponent],\r\n  imports: [\r\n    CommonModule,\r\n    QuestionModule,\r\n    QuestionAccordionModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TaButtonsModule,\r\n    TaTabsetModule,\r\n    TaDropdownModule,\r\n    TaTagsModule,\r\n    TaskStatusTagModule,\r\n    InitialIndicatorModule,\r\n    TaTooltipModule,\r\n    DeleteModalModule\r\n  ],\r\n  exports: [QuestionnaireContentComponent]\r\n})\r\nexport class QuestionnaireContentModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { TaActiveModal } from '@trustarc/ui-toolkit';\r\n\r\n@Component({\r\n  selector: 'ta-questionnaire-content-modal',\r\n  templateUrl: './questionnaire-content-modal.component.html',\r\n  styleUrls: ['./questionnaire-content-modal.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class QuestionnaireContentModalComponent implements OnInit {\r\n  @Input() public recordId: string;\r\n  @Input() public reviewMode: boolean;\r\n\r\n  constructor(public modalService: TaActiveModal) {}\r\n\r\n  public ngOnInit(): void {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  TaButtonsModule,\r\n  TaModalModule,\r\n  TaSvgIconModule\r\n} from '@trustarc/ui-toolkit';\r\n\r\nimport { QuestionnaireContentModule } from '../questionnaire-content';\r\nimport { QuestionnaireContentModalComponent } from './questionnaire-content-modal.component';\r\n\r\n@NgModule({\r\n  declarations: [QuestionnaireContentModalComponent],\r\n  imports: [\r\n    CommonModule,\r\n    TaButtonsModule,\r\n    TaSvgIconModule,\r\n    TaModalModule,\r\n    QuestionnaireContentModule\r\n  ],\r\n  exports: [QuestionnaireContentModalComponent],\r\n  entryComponents: [QuestionnaireContentModalComponent]\r\n})\r\nexport class QuestionnaireContentModalModule {}\r\n","import { Attachment } from './attachment.model';\r\n\r\nexport abstract class CommentBase {\r\n  id: string;\r\n  appName: string;\r\n  attachments: Attachment;\r\n  created: Date;\r\n  createdByFullName: string;\r\n  createdById: string;\r\n  entityId: string;\r\n  entityTitle: string;\r\n  entityType: string;\r\n  mentionedUsers: {\r\n    email: string;\r\n    firstName: string;\r\n    lastName: string;\r\n  }[];\r\n  messageText: string;\r\n  modifier: string;\r\n  sequenceNumber: number;\r\n  status: string;\r\n  version: number;\r\n}\r\n","import { CommentBase } from './comment-base.model';\r\nimport { CommentReply } from './comment-reply.model';\r\n\r\nexport class Comment extends CommentBase {\r\n  commentMessageReplies: CommentReply[];\r\n  isEditing: boolean;\r\n}\r\n","import { CommentBase } from './comment-base.model';\r\n\r\nexport class CommentReply extends CommentBase {\r\n  commentMessage: CommentBase;\r\n}\r\n","export class Assignee {\r\n  accountId: string;\r\n  userId: string;\r\n  externalUserName: string;\r\n  externalUserEmail: string;\r\n}\r\n","export class Attachment {\r\n  id: string;\r\n  created: Date;\r\n  region: string;\r\n  bucketName: string;\r\n  objectKey: string;\r\n  originalFileName: string;\r\n  version: string;\r\n  lastUpdated: Date;\r\n  createdBy: string;\r\n  lastUpdatedBy: string;\r\n}\r\n"]}