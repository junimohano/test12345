{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://veritas-library/lib/utils.ts","ng://veritas-library/lib/enums/comment-entity-type.enum.ts","ng://veritas-library/lib/enums/task-status.enum.ts","ng://veritas-library/lib/enums/respondent-type.enum.ts","ng://veritas-library/lib/enums/question-type.enum.ts","ng://veritas-library/lib/enums/question-single-select-ui-type.enum.ts","ng://veritas-library/lib/enums/question-multi-select-ui-type.enum.ts","ng://veritas-library/lib/enums/questionnaire-view-mode.enum.ts","ng://veritas-library/lib/components/initial-indicator/initial-indicator.component.ts","ng://veritas-library/lib/components/initial-indicator/initial-indicator.module.ts","ng://veritas-library/lib/constants/veritas-api.constant.ts","ng://veritas-library/lib/models/comment-base.model.ts","ng://veritas-library/lib/models/comment.model.ts","ng://veritas-library/lib/models/comment-reply.model.ts","ng://veritas-library/lib/models/assignee.model.ts","ng://veritas-library/lib/models/attachment.model.ts","ng://veritas-library/lib/services/aaa-user/aaa-user.service.ts","ng://veritas-library/lib/services/dash-board-comment-controller/dash-board-comment-controller.service.ts","ng://veritas-library/lib/constants/page.constant.ts","ng://veritas-library/lib/services/dash-board-survey-controller/dash-board-survey-controller.service.ts","ng://veritas-library/lib/services/questionnaire-utils/questionnaire-utils.service.ts","ng://veritas-library/lib/custom-encoder.ts","ng://veritas-library/lib/services/user-controller/user-controller.service.ts","ng://veritas-library/lib/change-detectable-component-base.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","isPropertyChanged","simpleChange","previousValue","currentValue","CommentEntityTypeEnum","TaskStatusEnum","RespondentTypeEnum","QuestionTypeEnum","QuestionSingleSelectUiTypeEnum","QuestionMultiSelectUiTypeEnum","QuestionnaireViewModeEnum","InitialIndicatorComponent","splitKey","ngOnInit","ngOnChanges","changes","name","setInitial","nameSplits","split","initial","length","getInitial","getWordByIndex","index","toLocaleUpperCase","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","Input","InitialIndicatorModule","NgModule","declarations","imports","CommonModule","exports","VERITAS_API_PROXY_PREFIX_URL","getDisplayText","result","Open","InProgress","InReview","Closed","ActionRequired","Reviewer","RemediationTaskReviewer","PrivacyTeam","BusinessOwner","VendorContact","HumanResourcesTeam","ItSecurityTeam","Other","CommentBase","Comment","tslib_1.__extends","CommentReply","Assignee","Attachment","AaaUserService","fullName","defineProperty","Injectable","providedIn","DashBoardCommentControllerService","httpClient","veritasApiProxyPrefixUrl","url","getComments$","entityId","page","maxRows","params","HttpParams","append","toString","get","pipe","map","response","content","forEach","comment","isEditing","createComment$","entityType","message","data","messageText","post","updateComment$","commentId","id","deleteComment$","delete","getQuestionContainerViewPages","taskId","mapGetQuestionContainerViewPages","getAttachmentDownloadUrl$","attachmentId","questionnaire","postQuestionDetailResponses","answers","submitAction","answersData","HttpClient","Inject","DashBoardSurveyControllerService","recordId","postAttachments$","questionNodeId","files","formData","FormData","file","reportProgress","observe","deleteAttachment$","QuestionnaireUtilsService","reviewMode","viewMode","All","_viewModeSubject$","Subject","getReviewMode","setReviewMode","getViewMode","changeViewMode","getViewModeObservable","asObservable","getQuestionAnswer","questionDetails","questionDetailType","SingleSelect","questionDetailResponses","selectedResponse","find","questionDetailResponsesSelected","Text","textResponse","questionDetailAnswerText","getConditionFulfilled","conditionTree","conditionDetails","conditionDetailConditions","conditionDetailCondition","checkCondition","currentResponse","expressionViewValueId","questionDetailResponsesId","CustomEncoder","encodeKey","key","encodeURIComponent","encodeValue","decodeKey","decodeURIComponent","decodeValue","UserControllerService","getUsers$","search","encoder","ChangeDetectableComponentBase","changeDetectorRef","markForCheck","isChangeDetectorDestroyed","detach","detectChanges","checkNoChanges","reattach","stringContains","toLowerCase","indexOf","generateErrorMessage","httpError","onlyUnique","self","findIndex","selfValue","JSON","stringify","flatMap","items","_a","concat","apply","__spread","arguments","item","getZoneOffset","timezoneOffset","Date","getTimezoneOffset","isNegative","zoneOffset","getEnumKeys","enumType","keys","filter","type","isNaN","omitDeep","collection","excludeKeys","_i","clonedCollection","_.cloneDeep","_.cloneDeepWith","omitFn","getProgress","loaded","total","Math","round"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { SimpleChange } from '@angular/core';\r\nimport * as _ from 'lodash';\r\n\r\nexport function stringContains(value: string, search: string): boolean {\r\n  return value.toLowerCase().indexOf(search.toLowerCase()) !== -1;\r\n}\r\n\r\nexport function generateErrorMessage(message: string, httpError: any): string {\r\n  return httpError && httpError.error && httpError.error.message\r\n    ? `${message} (${httpError.error.message})`\r\n    : message;\r\n}\r\n\r\nexport function onlyUnique(value: any, index: number, self: any[]): boolean {\r\n  return (\r\n    index ===\r\n    self.findIndex(\r\n      selfValue => JSON.stringify(selfValue) === JSON.stringify(value)\r\n    )\r\n  );\r\n}\r\n\r\nexport const nameOf = <T>(name: Extract<keyof T, string>): string => name;\r\n\r\nexport function flatMap<TDestination>(\r\n  items: any[],\r\n  key: string\r\n): TDestination[] {\r\n  return ([] as any[]).concat(...items.map(item => item[key]));\r\n}\r\n\r\nexport function getZoneOffset(): string {\r\n  const timezoneOffset = new Date().getTimezoneOffset();\r\n  const isNegative = timezoneOffset < 0;\r\n  let zoneOffset = (timezoneOffset * (isNegative ? -1 : 1)).toString();\r\n\r\n  for (let i = zoneOffset.toString().length; i < 4; i++) {\r\n    zoneOffset = '0' + zoneOffset;\r\n  }\r\n\r\n  return isNegative ? '-' : '+' + zoneOffset;\r\n}\r\n\r\nexport function getEnumKeys(enumType: any): string[] {\r\n  return Object.keys(enumType).filter(\r\n    type => isNaN(<any>type) && type !== 'values'\r\n  );\r\n}\r\n\r\nexport function isPropertyChanged(simpleChange: SimpleChange): boolean {\r\n  return (\r\n    simpleChange && simpleChange.previousValue !== simpleChange.currentValue\r\n  );\r\n}\r\n\r\nexport function omitDeep(collection: any, ...excludeKeys: string[]): any {\r\n  function omitFn(value: any): void {\r\n    if (value && typeof value === 'object') {\r\n      excludeKeys.forEach(key => {\r\n        delete value[key];\r\n      });\r\n    }\r\n  }\r\n\r\n  const clonedCollection = _.cloneDeep(collection);\r\n\r\n  return _.cloneDeepWith(clonedCollection, omitFn);\r\n}\r\n\r\nexport function getProgress(loaded: number, total: number): number {\r\n  return Math.round((loaded / total) * 100);\r\n}\r\n","export enum CommentEntityTypeEnum {\r\n  Question = 'QUESTION',\r\n  Task = 'TASK'\r\n}\r\n","export enum TaskStatusEnum {\r\n  Open = 'OPEN',\r\n  InProgress = 'IN_PROGRESS',\r\n  InReview = 'IN_REVIEW',\r\n  Closed = 'CLOSED',\r\n  ActionRequired = 'ACTION_REQUIRED'\r\n}\r\n\r\nexport namespace TaskStatusEnum {\r\n  export function getDisplayText(value: TaskStatusEnum): string {\r\n    let result = '';\r\n    switch (value) {\r\n      case TaskStatusEnum.Open:\r\n        result = 'Open';\r\n        break;\r\n\r\n      case TaskStatusEnum.InProgress:\r\n        result = 'In Progress';\r\n        break;\r\n\r\n      case TaskStatusEnum.InReview:\r\n        result = 'In Review';\r\n        break;\r\n\r\n      case TaskStatusEnum.Closed:\r\n        result = 'Closed';\r\n        break;\r\n\r\n      case TaskStatusEnum.ActionRequired:\r\n        result = 'Action Required';\r\n        break;\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n","export enum RespondentTypeEnum {\r\n  Reviewer = 'REVIEWER',\r\n  RemediationTaskReviewer = 'REMEDIATION_TASK_REVIEWER',\r\n  PrivacyTeam = 'PRIVACY_TEAM',\r\n  BusinessOwner = 'BUSINESS_OWNER',\r\n  VendorContact = 'VENDOR_CONTACT',\r\n  HumanResourcesTeam = 'HUMAN_RESOURCES_TEAM',\r\n  ItSecurityTeam = 'IT_SECURITY_TEAM',\r\n  Other = 'OTHER'\r\n}\r\n\r\nexport namespace RespondentTypeEnum {\r\n  export function getDisplayText(value: RespondentTypeEnum): string {\r\n    let result = '';\r\n    switch (value) {\r\n      case RespondentTypeEnum.Reviewer:\r\n        result = 'Reviewer';\r\n        break;\r\n\r\n      case RespondentTypeEnum.RemediationTaskReviewer:\r\n        result = 'Remediation Task Reviewer';\r\n        break;\r\n\r\n      case RespondentTypeEnum.PrivacyTeam:\r\n        result = 'Privacy Team';\r\n        break;\r\n\r\n      case RespondentTypeEnum.BusinessOwner:\r\n        result = 'Business Owner';\r\n        break;\r\n\r\n      case RespondentTypeEnum.VendorContact:\r\n        result = 'Vendor Contact';\r\n        break;\r\n\r\n      case RespondentTypeEnum.HumanResourcesTeam:\r\n        result = 'Human Resources Team';\r\n        break;\r\n\r\n      case RespondentTypeEnum.ItSecurityTeam:\r\n        result = 'IT/Security Team';\r\n        break;\r\n\r\n      case RespondentTypeEnum.Other:\r\n        result = 'Other';\r\n        break;\r\n\r\n      default:\r\n        result = value;\r\n        break;\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n","export enum QuestionTypeEnum {\r\n  SingleSelect = 'SINGLE_SELECT',\r\n  MultiSelect = 'MULTI_SELECT',\r\n  Text = 'TEXT'\r\n}\r\n","export enum QuestionSingleSelectUiTypeEnum {\r\n  Horizontal = 'HORIZONTAL',\r\n  Vertical = 'VERTICAL',\r\n  Slider = 'SLIDER'\r\n}\r\n","export enum QuestionMultiSelectUiTypeEnum {\r\n  Horizontal = 'HORIZONTAL',\r\n  Vertical = 'VERTICAL'\r\n}\r\n","export enum QuestionnaireViewModeEnum {\r\n  All = 'all',\r\n  Answered = 'answered',\r\n  Unanswered = 'unanswered'\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  SimpleChanges\r\n} from '@angular/core';\r\n\r\nimport { isPropertyChanged } from '../../utils';\r\n\r\n@Component({\r\n  selector: 'ta-initial-indicator',\r\n  templateUrl: './initial-indicator.component.html',\r\n  styleUrls: ['./initial-indicator.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class InitialIndicatorComponent implements OnInit, OnChanges {\r\n  @Input() public name: string;\r\n\r\n  public initial: string;\r\n\r\n  private readonly splitKey = ' ';\r\n\r\n  constructor() {}\r\n\r\n  public ngOnInit(): void {}\r\n\r\n  public ngOnChanges(changes: SimpleChanges): void {\r\n    if (isPropertyChanged(changes.name)) {\r\n      this.setInitial();\r\n    }\r\n  }\r\n\r\n  private setInitial(): void {\r\n    const nameSplits = this.name.split(this.splitKey);\r\n    this.initial =\r\n      nameSplits.length > 1 ? this.getInitial(nameSplits) : this.name;\r\n  }\r\n\r\n  private getInitial(nameSplits: string[]): string {\r\n    return `${this.getWordByIndex(nameSplits, 0)}${this.getWordByIndex(\r\n      nameSplits,\r\n      1\r\n    )}`;\r\n  }\r\n\r\n  private getWordByIndex(nameSplits: string[], index: number) {\r\n    return nameSplits[index][0].toLocaleUpperCase();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { InitialIndicatorComponent } from './initial-indicator.component';\r\n\r\n@NgModule({\r\n  declarations: [InitialIndicatorComponent],\r\n  imports: [CommonModule],\r\n  exports: [InitialIndicatorComponent]\r\n})\r\nexport class InitialIndicatorModule {}\r\n","export const VERITAS_API_PROXY_PREFIX_URL = 'VERITAS_API_PROXY_PREFIX_URL';\r\n","import { Attachment } from './attachment.model';\r\n\r\nexport abstract class CommentBase {\r\n  id: string;\r\n  appName: string;\r\n  attachments: Attachment;\r\n  created: Date;\r\n  createdByFullName: string;\r\n  createdById: string;\r\n  entityId: string;\r\n  entityTitle: string;\r\n  entityType: string;\r\n  mentionedUsers: {\r\n    email: string;\r\n    firstName: string;\r\n    lastName: string;\r\n  }[];\r\n  messageText: string;\r\n  modifier: string;\r\n  sequenceNumber: number;\r\n  status: string;\r\n  version: number;\r\n}\r\n","import { CommentBase } from './comment-base.model';\r\nimport { CommentReply } from './comment-reply.model';\r\n\r\nexport class Comment extends CommentBase {\r\n  commentMessageReplies: CommentReply[];\r\n  isEditing: boolean;\r\n}\r\n","import { CommentBase } from './comment-base.model';\r\n\r\nexport class CommentReply extends CommentBase {\r\n  commentMessage: CommentBase;\r\n}\r\n","export class Assignee {\r\n  accountId: string;\r\n  userId: string;\r\n  externalUserName: string;\r\n  externalUserEmail: string;\r\n}\r\n","export class Attachment {\r\n  id: string;\r\n  created: Date;\r\n  region: string;\r\n  bucketName: string;\r\n  objectKey: string;\r\n  originalFileName: string;\r\n  version: string;\r\n  lastUpdated: Date;\r\n  createdBy: string;\r\n  lastUpdatedBy: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AaaUserService {\r\n  private fullName = '';\r\n\r\n  constructor() {}\r\n\r\n  public set setFullName(fullName: string) {\r\n    this.fullName = fullName;\r\n  }\r\n\r\n  public get getFullName() {\r\n    return this.fullName;\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { PAGE_OFFSET_FOR_SERVER } from '../../constants/page.constant';\r\nimport { VERITAS_API_PROXY_PREFIX_URL } from '../../constants/veritas-api.constant';\r\nimport { CommentEntityTypeEnum } from '../../enums/comment-entity-type.enum';\r\nimport { PageInterface } from '../../interfaces/page.interface';\r\nimport { AnswerDetailResponseInterface } from '../../interfaces/questionnaire.interface';\r\nimport { Comment } from '../../models/comment.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashBoardCommentControllerService {\r\n  private readonly url = `${this.veritasApiProxyPrefixUrl}/comment`;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    @Inject(VERITAS_API_PROXY_PREFIX_URL)\r\n    private veritasApiProxyPrefixUrl: string\r\n  ) {}\r\n\r\n  public getComments$(\r\n    entityId: string,\r\n    page: number = 1,\r\n    maxRows: number = 20\r\n  ): Observable<PageInterface<Comment>> {\r\n    const params = new HttpParams()\r\n      .append('page', (page + PAGE_OFFSET_FOR_SERVER).toString())\r\n      .append('size', maxRows.toString());\r\n\r\n    return this.httpClient\r\n      .get<PageInterface<Comment>>(`${this.url}/${entityId}`, {\r\n        params\r\n      })\r\n      .pipe(\r\n        map(response => {\r\n          response.content.forEach((comment: Comment) => {\r\n            comment.isEditing = false;\r\n          });\r\n          return response;\r\n        })\r\n      );\r\n  }\r\n\r\n  public createComment$(\r\n    entityId: string,\r\n    entityType: CommentEntityTypeEnum,\r\n    message: string\r\n  ): Observable<Comment> {\r\n    const data = {\r\n      entityId,\r\n      entityType,\r\n      messageText: message\r\n    };\r\n\r\n    return this.httpClient.post<Comment>(`${this.url}/${entityId}`, data);\r\n  }\r\n\r\n  public updateComment$(\r\n    entityId: string,\r\n    entityType: CommentEntityTypeEnum,\r\n    commentId: string,\r\n    message: string\r\n  ): Observable<Comment> {\r\n    const data = {\r\n      entityId,\r\n      entityType,\r\n      messageText: message,\r\n      id: commentId\r\n    };\r\n\r\n    return this.httpClient.post<Comment>(\r\n      `${this.url}/${entityId}/${commentId}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  public deleteComment$(\r\n    entityId: string,\r\n    commentId: string\r\n  ): Observable<Comment> {\r\n    return this.httpClient.delete<Comment>(\r\n      `${this.url}/${entityId}/${commentId}`\r\n    );\r\n  }\r\n\r\n  public getQuestionContainerViewPages(taskId: string): Observable<any> {\r\n    return this.httpClient\r\n      .get(`/api/question-survey/${taskId}`)\r\n      .pipe(map(this.mapGetQuestionContainerViewPages));\r\n  }\r\n\r\n  public getAttachmentDownloadUrl$(attachmentId: string): Observable<any> {\r\n    return this.httpClient.get(`${this.url}/attachments/${attachmentId}/url`);\r\n  }\r\n\r\n  private mapGetQuestionContainerViewPages(questionnaire) {\r\n    return questionnaire;\r\n  }\r\n\r\n  public postQuestionDetailResponses(\r\n    answers: AnswerDetailResponseInterface[],\r\n    submitAction: boolean,\r\n    taskId: string\r\n  ): Observable<any> {\r\n    // Assemble post data\r\n    const answersData = {\r\n      answers: answers,\r\n      submitAction: submitAction\r\n    };\r\n    return this.httpClient.post(`/api/question-survey/${taskId}`, answersData);\r\n  }\r\n}\r\n","export const PAGE_OFFSET_FOR_SERVER = -1;\r\nexport const SEARCH_DEBOUNCE_TIME = 300;\r\n","import { HttpClient, HttpEvent } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { VERITAS_API_PROXY_PREFIX_URL } from '../../constants/veritas-api.constant';\r\nimport {\r\n  AnswerDetailResponseInterface,\r\n  QuestionnaireInterface\r\n} from '../../interfaces/questionnaire.interface';\r\nimport { Attachment } from '../../models/attachment.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashBoardSurveyControllerService {\r\n  private readonly url = `${this.veritasApiProxyPrefixUrl}/question-survey`;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    @Inject(VERITAS_API_PROXY_PREFIX_URL)\r\n    private veritasApiProxyPrefixUrl: string\r\n  ) {}\r\n\r\n  /**\r\n   * GET List Tasks Data\r\n   */\r\n  public getQuestionContainerViewPages(\r\n    recordId: string\r\n  ): Observable<QuestionnaireInterface> {\r\n    return this.httpClient\r\n      .get(`${this.url}/${recordId}`)\r\n      .pipe(map(this.mapGetQuestionContainerViewPages));\r\n  }\r\n\r\n  public postAttachments$(\r\n    recordId: string,\r\n    questionNodeId: string,\r\n    files: File[]\r\n  ): Observable<HttpEvent<Attachment[]>> {\r\n    const formData = new FormData();\r\n    files.forEach(file => formData.append('attachmentFiles', file));\r\n\r\n    return this.httpClient.post<any>(\r\n      `${this.url}/${recordId}/question/${questionNodeId}/attachments`,\r\n      formData,\r\n      {\r\n        reportProgress: true,\r\n        observe: 'events'\r\n      }\r\n    );\r\n  }\r\n\r\n  public deleteAttachment$(\r\n    recordId: string,\r\n    questionNodeId: string,\r\n    attachmentId: string\r\n  ): Observable<Attachment[]> {\r\n    return this.httpClient.delete<Attachment[]>(\r\n      `${\r\n        this.url\r\n      }/${recordId}/question/${questionNodeId}/attachments/${attachmentId}`\r\n    );\r\n  }\r\n\r\n  private mapGetQuestionContainerViewPages(questionnaire) {\r\n    return questionnaire;\r\n  }\r\n\r\n  public postQuestionDetailResponses(\r\n    answers: AnswerDetailResponseInterface[],\r\n    submitAction: boolean,\r\n    recordId: string\r\n  ): Observable<any> {\r\n    // Assemble post data\r\n    const answersData = {\r\n      answers: answers,\r\n      submitAction: submitAction\r\n    };\r\n    return this.httpClient.post(\r\n      `/api/question-survey/${recordId}`,\r\n      answersData\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { QuestionTypeEnum } from '../../enums/question-type.enum';\r\nimport { QuestionnaireViewModeEnum } from '../../enums/questionnaire-view-mode.enum';\r\nimport {\r\n  ConditionDetailConditionInterface,\r\n  ConditionTreeInterface,\r\n  QuestionDetailResponseInterface,\r\n  QuestionDetailsInterface\r\n} from '../../interfaces/questionnaire.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QuestionnaireUtilsService {\r\n  private reviewMode = false;\r\n  private viewMode = QuestionnaireViewModeEnum.All;\r\n  private _viewModeSubject$ = new Subject<any>();\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * Toggles whether to display the questionnaire in review mode.\r\n   */\r\n  public getReviewMode() {\r\n    return this.reviewMode;\r\n  }\r\n\r\n  public setReviewMode(reviewMode: boolean) {\r\n    this.reviewMode = reviewMode;\r\n  }\r\n\r\n  /**\r\n   * Communicate whether to show all, unanswered, or answered questions\r\n   */\r\n  public getViewMode() {\r\n    return this.viewMode;\r\n  }\r\n\r\n  public changeViewMode(viewMode: QuestionnaireViewModeEnum) {\r\n    this.viewMode = viewMode;\r\n    this._viewModeSubject$.next(this.viewMode);\r\n  }\r\n\r\n  public getViewModeObservable(): Observable<string> {\r\n    return this._viewModeSubject$.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Return the question's current anwer. Can be a response object or a string.\r\n   * @param question to check\r\n   */\r\n  public getQuestionAnswer(questionDetails: QuestionDetailsInterface): any {\r\n    switch (questionDetails.questionDetailType) {\r\n      case QuestionTypeEnum.SingleSelect:\r\n        // Loop through responses and if previously selected option was found, patch value\r\n        const questionDetailResponses = questionDetails.questionDetailResponses;\r\n        if (questionDetailResponses) {\r\n          const selectedResponse = questionDetailResponses.find(response => {\r\n            return response.questionDetailResponsesSelected;\r\n          });\r\n\r\n          if (selectedResponse) {\r\n            return selectedResponse;\r\n          }\r\n        }\r\n        break;\r\n      case QuestionTypeEnum.Text:\r\n        const textResponse = questionDetails.questionDetailAnswerText;\r\n        if (textResponse) {\r\n          return textResponse;\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Used by parent question with a conditionTree to see if it should display it\r\n   * @param conditionTree conditionTree\r\n   */\r\n  public getConditionFulfilled(\r\n    conditionTree: ConditionTreeInterface,\r\n    questionDetails: QuestionDetailsInterface\r\n  ): boolean {\r\n    // Depending on question type, get the appropriate answer object/string\r\n    // Currently only supports single select\r\n    const selectedResponse: QuestionDetailResponseInterface = questionDetails.questionDetailResponses.find(\r\n      response => {\r\n        return response.questionDetailResponsesSelected;\r\n      }\r\n    );\r\n\r\n    if (\r\n      conditionTree.conditionDetails &&\r\n      conditionTree.conditionDetails.conditionDetailConditions\r\n    ) {\r\n      const conditionDetailConditions: ConditionDetailConditionInterface[] =\r\n        conditionTree.conditionDetails.conditionDetailConditions;\r\n\r\n      // Loop through all conditions and make sure they are all fulfilled\r\n      for (let i = 0; i < conditionDetailConditions.length; i++) {\r\n        const conditionDetailCondition = conditionDetailConditions[i];\r\n        if (!this.checkCondition(conditionDetailCondition, selectedResponse)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check that given condition is fulfilled by parent question\r\n   * @param conditionDetailCondition conditionDetailCondition\r\n   */\r\n  private checkCondition(\r\n    conditionDetailCondition: ConditionDetailConditionInterface,\r\n    currentResponse: any\r\n  ): boolean {\r\n    // Currently only supports single select\r\n    if (currentResponse && conditionDetailCondition.expressionViewValueId) {\r\n      const answer: QuestionDetailResponseInterface = currentResponse;\r\n      const questionResponseId = answer.questionDetailResponsesId;\r\n      const conditionValueId = conditionDetailCondition.expressionViewValueId;\r\n\r\n      if (questionResponseId === conditionValueId) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import { HttpParameterCodec } from '@angular/common/http';\r\n\r\nexport class CustomEncoder implements HttpParameterCodec {\r\n  public encodeKey(key: string): string {\r\n    return encodeURIComponent(key);\r\n  }\r\n\r\n  public encodeValue(value: string): string {\r\n    return encodeURIComponent(value);\r\n  }\r\n\r\n  public decodeKey(key: string): string {\r\n    return decodeURIComponent(key);\r\n  }\r\n\r\n  public decodeValue(value: string): string {\r\n    return decodeURIComponent(value);\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { VERITAS_API_PROXY_PREFIX_URL } from '../../constants/veritas-api.constant';\r\nimport { CustomEncoder } from '../../custom-encoder';\r\nimport { PageInterface } from '../../interfaces/page.interface';\r\nimport { Assignee } from '../../models/assignee.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserControllerService {\r\n  private readonly url = `${this.veritasApiProxyPrefixUrl}/users`;\r\n  private readonly maxRows = 10;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    @Inject(VERITAS_API_PROXY_PREFIX_URL)\r\n    private veritasApiProxyPrefixUrl: string\r\n  ) {}\r\n\r\n  public getUsers$(\r\n    page: number,\r\n    search: string = null\r\n  ): Observable<PageInterface<Assignee>> {\r\n    let params = new HttpParams({ encoder: new CustomEncoder() })\r\n      .append('page', page.toString())\r\n      .append('size', this.maxRows.toString());\r\n\r\n    if (search) {\r\n      params = params.append('search', search);\r\n    }\r\n\r\n    return this.httpClient.get<PageInterface<Assignee>>(this.url, {\r\n      params\r\n    });\r\n  }\r\n}\r\n","import { ChangeDetectorRef } from '@angular/core';\r\n\r\nexport abstract class ChangeDetectableComponentBase\r\n  implements ChangeDetectorRef {\r\n  private get isChangeDetectorDestroyed(): boolean {\r\n    return this.changeDetectorRef['destroyed'];\r\n  }\r\n\r\n  constructor(protected changeDetectorRef: ChangeDetectorRef) {}\r\n\r\n  markForCheck(): void {\r\n    if (this.isChangeDetectorDestroyed) {\r\n      return;\r\n    }\r\n\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  detach(): void {\r\n    if (this.isChangeDetectorDestroyed) {\r\n      return;\r\n    }\r\n\r\n    this.changeDetectorRef.detach();\r\n  }\r\n\r\n  detectChanges(): void {\r\n    if (this.isChangeDetectorDestroyed) {\r\n      return;\r\n    }\r\n\r\n    this.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  checkNoChanges(): void {\r\n    if (this.isChangeDetectorDestroyed) {\r\n      return;\r\n    }\r\n\r\n    this.changeDetectorRef.checkNoChanges();\r\n  }\r\n\r\n  reattach(): void {\r\n    if (this.isChangeDetectorDestroyed) {\r\n      return;\r\n    }\r\n\r\n    this.changeDetectorRef.reattach();\r\n  }\r\n}\r\n"]}