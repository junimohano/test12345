{"version":3,"file":"veritas-ui-library.js.map","sources":["ng://veritas-ui-library/lib/utils.ts","ng://veritas-ui-library/lib/components/initial-indicator/initial-indicator.component.ts","ng://veritas-ui-library/lib/components/initial-indicator/initial-indicator.module.ts","ng://veritas-ui-library/lib/constants/page.constant.ts","ng://veritas-ui-library/lib/constants/veritas-api.constant.ts","ng://veritas-ui-library/lib/custom-encoder.ts","ng://veritas-ui-library/lib/services/user-controller/user-controller.service.ts","ng://veritas-ui-library/lib/components/comments-popover/comment-form/comment-form.component.ts","ng://veritas-ui-library/lib/enums/comment-entity-type.enum.ts","ng://veritas-ui-library/lib/enums/task-status.enum.ts","ng://veritas-ui-library/lib/enums/respondent-type.enum.ts","ng://veritas-ui-library/lib/enums/question-type.enum.ts","ng://veritas-ui-library/lib/enums/question-single-select-ui-type.enum.ts","ng://veritas-ui-library/lib/enums/question-multi-select-ui-type.enum.ts","ng://veritas-ui-library/lib/enums/questionnaire-view-mode.enum.ts","ng://veritas-ui-library/lib/services/aaa-user/aaa-user.service.ts","ng://veritas-ui-library/lib/services/dash-board-comment-controller/dash-board-comment-controller.service.ts","ng://veritas-ui-library/lib/components/comments-popover/comments-popover.component.ts","ng://veritas-ui-library/lib/components/comments-popover/comments-popover.module.ts","ng://veritas-ui-library/lib/components/delete-modal/delete-modal.component.ts","ng://veritas-ui-library/lib/components/delete-modal/delete-modal.module.ts","ng://veritas-ui-library/lib/components/file-upload/simple-file-upload/simple-file-upload-config.model.ts","ng://veritas-ui-library/lib/components/file-upload/file-download/file-download.component.ts","ng://veritas-ui-library/lib/components/file-upload/file-download/file-download.module.ts","ng://veritas-ui-library/lib/change-detectable-component-base.ts","ng://veritas-ui-library/lib/components/file-upload/file-upload/file-upload.model.ts","ng://veritas-ui-library/lib/components/file-upload/file-upload/file-upload.validation.service.ts","ng://veritas-ui-library/lib/components/file-upload/file-upload/file-upload.component.ts","ng://veritas-ui-library/lib/components/file-upload/file-upload/file-upload.module.ts","ng://veritas-ui-library/lib/components/file-upload/simple-file-upload/simple-file-upload.component.ts","ng://veritas-ui-library/lib/components/file-upload/simple-file-upload/simple-file-upload.module.ts","ng://veritas-ui-library/lib/components/file-upload/simple-file-upload/simple-file-upload-item.model.ts","ng://veritas-ui-library/lib/components/file-upload/simple-file-upload/simple-file-upload-item-container.model.ts","ng://veritas-ui-library/lib/components/question/components/multi-select/multi-select.component.ts","ng://veritas-ui-library/lib/components/question/components/single-select/single-select.component.ts","ng://veritas-ui-library/lib/components/question/components/text/text.component.ts","ng://veritas-ui-library/lib/services/dash-board-survey-controller/dash-board-survey-controller.service.ts","ng://veritas-ui-library/lib/services/questionnaire-utils/questionnaire-utils.service.ts","ng://veritas-ui-library/lib/components/question/question.component.ts","ng://veritas-ui-library/lib/components/question/question.module.ts","ng://veritas-ui-library/lib/components/question-accordion/components/question-more-menu/question-more-menu.component.ts","ng://veritas-ui-library/lib/components/question-accordion/question-accordion.component.ts","ng://veritas-ui-library/lib/components/question-accordion/question-accordion.module.ts","ng://veritas-ui-library/lib/components/task-status-tag/task-status-tag.component.ts","ng://veritas-ui-library/lib/components/task-status-tag/task-status-tag.module.ts","ng://veritas-ui-library/lib/components/questionnaire-content/questionnaire-content.component.ts","ng://veritas-ui-library/lib/components/questionnaire-content/questionnaire-content.module.ts","ng://veritas-ui-library/lib/components/questionnaire-content-modal/questionnaire-content-modal.component.ts","ng://veritas-ui-library/lib/components/questionnaire-content-modal/questionnaire-content-modal.module.ts","ng://veritas-ui-library/lib/models/comment-base.model.ts","ng://veritas-ui-library/lib/models/comment.model.ts","ng://veritas-ui-library/lib/models/comment-reply.model.ts","ng://veritas-ui-library/lib/models/assignee.model.ts","ng://veritas-ui-library/lib/models/attachment.model.ts","ng://veritas-ui-library/veritas-ui-library.ts"],"sourcesContent":["import { SimpleChange } from '@angular/core';\r\nimport * as _ from 'lodash';\r\n\r\nexport function stringContains(value: string, search: string): boolean {\r\n  return value.toLowerCase().indexOf(search.toLowerCase()) !== -1;\r\n}\r\n\r\nexport function generateErrorMessage(message: string, httpError: any): string {\r\n  return httpError && httpError.error && httpError.error.message\r\n    ? `${message} (${httpError.error.message})`\r\n    : message;\r\n}\r\n\r\nexport function onlyUnique(value: any, index: number, self: any[]): boolean {\r\n  return (\r\n    index ===\r\n    self.findIndex(\r\n      selfValue => JSON.stringify(selfValue) === JSON.stringify(value)\r\n    )\r\n  );\r\n}\r\n\r\nexport const nameOf = <T>(name: Extract<keyof T, string>): string => name;\r\n\r\nexport function flatMap<TDestination>(\r\n  items: any[],\r\n  key: string\r\n): TDestination[] {\r\n  return ([] as any[]).concat(...items.map(item => item[key]));\r\n}\r\n\r\nexport function getZoneOffset(): string {\r\n  const timezoneOffset = new Date().getTimezoneOffset();\r\n  const isNegative = timezoneOffset < 0;\r\n  let zoneOffset = (timezoneOffset * (isNegative ? -1 : 1)).toString();\r\n\r\n  for (let i = zoneOffset.toString().length; i < 4; i++) {\r\n    zoneOffset = '0' + zoneOffset;\r\n  }\r\n\r\n  return isNegative ? '-' : '+' + zoneOffset;\r\n}\r\n\r\nexport function getEnumKeys(enumType: any): string[] {\r\n  return Object.keys(enumType).filter(\r\n    type => isNaN(<any>type) && type !== 'values'\r\n  );\r\n}\r\n\r\nexport function isPropertyChanged(simpleChange: SimpleChange): boolean {\r\n  return (\r\n    simpleChange && simpleChange.previousValue !== simpleChange.currentValue\r\n  );\r\n}\r\n\r\nexport function omitDeep(collection: any, ...excludeKeys: string[]): any {\r\n  function omitFn(value: any): void {\r\n    if (value && typeof value === 'object') {\r\n      excludeKeys.forEach(key => {\r\n        delete value[key];\r\n      });\r\n    }\r\n  }\r\n\r\n  const clonedCollection = _.cloneDeep(collection);\r\n\r\n  return _.cloneDeepWith(clonedCollection, omitFn);\r\n}\r\n\r\nexport function getProgress(loaded: number, total: number): number {\r\n  return Math.round((loaded / total) * 100);\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  SimpleChanges\r\n} from '@angular/core';\r\n\r\nimport { isPropertyChanged } from '../../utils';\r\n\r\n@Component({\r\n  selector: 'ta-initial-indicator',\r\n  templateUrl: './initial-indicator.component.html',\r\n  styleUrls: ['./initial-indicator.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class InitialIndicatorComponent implements OnInit, OnChanges {\r\n  @Input() public name: string;\r\n\r\n  public initial: string;\r\n\r\n  private readonly splitKey = ' ';\r\n\r\n  constructor() {}\r\n\r\n  public ngOnInit(): void {}\r\n\r\n  public ngOnChanges(changes: SimpleChanges): void {\r\n    if (isPropertyChanged(changes.name)) {\r\n      this.setInitial();\r\n    }\r\n  }\r\n\r\n  private setInitial(): void {\r\n    const nameSplits = this.name.split(this.splitKey);\r\n    this.initial =\r\n      nameSplits.length > 1 ? this.getInitial(nameSplits) : this.name;\r\n  }\r\n\r\n  private getInitial(nameSplits: string[]): string {\r\n    return `${this.getWordByIndex(nameSplits, 0)}${this.getWordByIndex(\r\n      nameSplits,\r\n      1\r\n    )}`;\r\n  }\r\n\r\n  private getWordByIndex(nameSplits: string[], index: number) {\r\n    return nameSplits[index][0].toLocaleUpperCase();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { InitialIndicatorComponent } from './initial-indicator.component';\r\n\r\n@NgModule({\r\n  declarations: [InitialIndicatorComponent],\r\n  imports: [CommonModule],\r\n  exports: [InitialIndicatorComponent]\r\n})\r\nexport class InitialIndicatorModule {}\r\n","export const PAGE_OFFSET_FOR_SERVER = -1;\r\nexport const SEARCH_DEBOUNCE_TIME = 300;\r\n","export const VERITAS_API_PROXY_PREFIX_URL = 'VERITAS_API_PROXY_PREFIX_URL';\r\n","import { HttpParameterCodec } from '@angular/common/http';\r\n\r\nexport class CustomEncoder implements HttpParameterCodec {\r\n  public encodeKey(key: string): string {\r\n    return encodeURIComponent(key);\r\n  }\r\n\r\n  public encodeValue(value: string): string {\r\n    return encodeURIComponent(value);\r\n  }\r\n\r\n  public decodeKey(key: string): string {\r\n    return decodeURIComponent(key);\r\n  }\r\n\r\n  public decodeValue(value: string): string {\r\n    return decodeURIComponent(value);\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { VERITAS_API_PROXY_PREFIX_URL } from '../../constants';\r\nimport { CustomEncoder } from '../../custom-encoder';\r\nimport { PageInterface } from '../../interfaces/page.interface';\r\nimport { Assignee } from '../../models/assignee.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserControllerService {\r\n  private readonly url = `${this.veritasApiProxyPrefixUrl}/users`;\r\n  private readonly maxRows = 10;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    @Inject(VERITAS_API_PROXY_PREFIX_URL)\r\n    private veritasApiProxyPrefixUrl: string\r\n  ) {}\r\n\r\n  public getUsers$(\r\n    page: number,\r\n    search: string = null\r\n  ): Observable<PageInterface<Assignee>> {\r\n    let params = new HttpParams({ encoder: new CustomEncoder() })\r\n      .append('page', page.toString())\r\n      .append('size', this.maxRows.toString());\r\n\r\n    if (search) {\r\n      params = params.append('search', search);\r\n    }\r\n\r\n    return this.httpClient.get<PageInterface<Assignee>>(this.url, {\r\n      params\r\n    });\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { UserControllerService } from '../../../services/user-controller';\r\n\r\n@Component({\r\n  selector: 'ta-comment-form',\r\n  templateUrl: './comment-form.component.html',\r\n  styleUrls: ['./comment-form.component.scss']\r\n})\r\nexport class CommentFormComponent implements OnInit {\r\n  @Input() public commentPlaceholder = '';\r\n  @Input() public canHideActions = false;\r\n\r\n  @Output() public formSubmitted = new EventEmitter<any>();\r\n  @Output() public formCancelled = new EventEmitter<any>();\r\n\r\n  public commentForm = this.formBuilder.group({\r\n    comment: ['', Validators.required]\r\n  });\r\n  public MENTION_CONFIG = {\r\n    triggerChar: '@',\r\n    maxItems: 10,\r\n    labelKey: 'externalUserEmail',\r\n    mentionSelect: this.onMentionSelect.bind(this)\r\n  };\r\n  public mentionUsers: any[] = [];\r\n  public focused = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private userControllerService: UserControllerService\r\n  ) {}\r\n\r\n  public ngOnInit(): void {\r\n    if (this.commentPlaceholder) {\r\n      this.commentForm.patchValue({\r\n        comment: this.commentPlaceholder\r\n      });\r\n    }\r\n  }\r\n\r\n  public onSubmit(): void {\r\n    this.formSubmitted.emit(this.commentForm.value);\r\n  }\r\n\r\n  public onCancel(event: any): void {\r\n    this.formCancelled.emit();\r\n  }\r\n\r\n  public textFocus(): void {\r\n    this.focused = true;\r\n  }\r\n\r\n  public textFocusout(): void {}\r\n\r\n  public async searchTerm(searchTerm: string): Promise<void> {\r\n    const users = await this.userControllerService\r\n      .getUsers$(0, searchTerm)\r\n      .toPromise();\r\n    this.mentionUsers = users.content;\r\n  }\r\n\r\n  public resetForm(): void {\r\n    this.commentForm.reset();\r\n  }\r\n\r\n  private onMentionSelect(user: any): string {\r\n    return `[~${user.externalUserEmail}]`;\r\n  }\r\n}\r\n","export enum CommentEntityTypeEnum {\r\n  Question = 'QUESTION',\r\n  Task = 'TASK'\r\n}\r\n","export enum TaskStatusEnum {\r\n  Open = 'OPEN',\r\n  InProgress = 'IN_PROGRESS',\r\n  InReview = 'IN_REVIEW',\r\n  Closed = 'CLOSED',\r\n  ActionRequired = 'ACTION_REQUIRED'\r\n}\r\n\r\nexport namespace TaskStatusEnum {\r\n  export function getDisplayText(value: TaskStatusEnum): string {\r\n    let result = '';\r\n    switch (value) {\r\n      case TaskStatusEnum.Open:\r\n        result = 'Open';\r\n        break;\r\n\r\n      case TaskStatusEnum.InProgress:\r\n        result = 'In Progress';\r\n        break;\r\n\r\n      case TaskStatusEnum.InReview:\r\n        result = 'In Review';\r\n        break;\r\n\r\n      case TaskStatusEnum.Closed:\r\n        result = 'Closed';\r\n        break;\r\n\r\n      case TaskStatusEnum.ActionRequired:\r\n        result = 'Action Required';\r\n        break;\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n","export enum RespondentTypeEnum {\r\n  Reviewer = 'REVIEWER',\r\n  RemediationTaskReviewer = 'REMEDIATION_TASK_REVIEWER',\r\n  PrivacyTeam = 'PRIVACY_TEAM',\r\n  BusinessOwner = 'BUSINESS_OWNER',\r\n  VendorContact = 'VENDOR_CONTACT',\r\n  HumanResourcesTeam = 'HUMAN_RESOURCES_TEAM',\r\n  ItSecurityTeam = 'IT_SECURITY_TEAM',\r\n  Other = 'OTHER'\r\n}\r\n\r\nexport namespace RespondentTypeEnum {\r\n  export function getDisplayText(value: RespondentTypeEnum): string {\r\n    let result = '';\r\n    switch (value) {\r\n      case RespondentTypeEnum.Reviewer:\r\n        result = 'Reviewer';\r\n        break;\r\n\r\n      case RespondentTypeEnum.RemediationTaskReviewer:\r\n        result = 'Remediation Task Reviewer';\r\n        break;\r\n\r\n      case RespondentTypeEnum.PrivacyTeam:\r\n        result = 'Privacy Team';\r\n        break;\r\n\r\n      case RespondentTypeEnum.BusinessOwner:\r\n        result = 'Business Owner';\r\n        break;\r\n\r\n      case RespondentTypeEnum.VendorContact:\r\n        result = 'Vendor Contact';\r\n        break;\r\n\r\n      case RespondentTypeEnum.HumanResourcesTeam:\r\n        result = 'Human Resources Team';\r\n        break;\r\n\r\n      case RespondentTypeEnum.ItSecurityTeam:\r\n        result = 'IT/Security Team';\r\n        break;\r\n\r\n      case RespondentTypeEnum.Other:\r\n        result = 'Other';\r\n        break;\r\n\r\n      default:\r\n        result = value;\r\n        break;\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n","export enum QuestionTypeEnum {\r\n  SingleSelect = 'SINGLE_SELECT',\r\n  MultiSelect = 'MULTI_SELECT',\r\n  Text = 'TEXT'\r\n}\r\n","export enum QuestionSingleSelectUiTypeEnum {\r\n  Horizontal = 'HORIZONTAL',\r\n  Vertical = 'VERTICAL',\r\n  Slider = 'SLIDER'\r\n}\r\n","export enum QuestionMultiSelectUiTypeEnum {\r\n  Horizontal = 'HORIZONTAL',\r\n  Vertical = 'VERTICAL'\r\n}\r\n","export enum QuestionnaireViewModeEnum {\r\n  All = 'all',\r\n  Answered = 'answered',\r\n  Unanswered = 'unanswered'\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AaaUserService {\r\n  private fullName = '';\r\n\r\n  constructor() {}\r\n\r\n  public set setFullName(fullName: string) {\r\n    this.fullName = fullName;\r\n  }\r\n\r\n  public get getFullName() {\r\n    return this.fullName;\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { VERITAS_API_PROXY_PREFIX_URL } from '../../constants';\r\nimport { PAGE_OFFSET_FOR_SERVER } from '../../constants/page.constant';\r\nimport { CommentEntityTypeEnum } from '../../enums/comment-entity-type.enum';\r\nimport { PageInterface } from '../../interfaces/page.interface';\r\nimport { AnswerDetailResponseInterface } from '../../interfaces/questionnaire.interface';\r\nimport { Comment } from '../../models/comment.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashBoardCommentControllerService {\r\n  private readonly url = `${this.veritasApiProxyPrefixUrl}/comment`;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    @Inject(VERITAS_API_PROXY_PREFIX_URL)\r\n    private veritasApiProxyPrefixUrl: string\r\n  ) {}\r\n\r\n  public getComments$(\r\n    entityId: string,\r\n    page: number = 1,\r\n    maxRows: number = 20\r\n  ): Observable<PageInterface<Comment>> {\r\n    const params = new HttpParams()\r\n      .append('page', (page + PAGE_OFFSET_FOR_SERVER).toString())\r\n      .append('size', maxRows.toString());\r\n\r\n    return this.httpClient\r\n      .get<PageInterface<Comment>>(`${this.url}/${entityId}`, {\r\n        params\r\n      })\r\n      .pipe(\r\n        map(response => {\r\n          response.content.forEach((comment: Comment) => {\r\n            comment.isEditing = false;\r\n          });\r\n          return response;\r\n        })\r\n      );\r\n  }\r\n\r\n  public createComment$(\r\n    entityId: string,\r\n    entityType: CommentEntityTypeEnum,\r\n    message: string\r\n  ): Observable<Comment> {\r\n    const data = {\r\n      entityId,\r\n      entityType,\r\n      messageText: message\r\n    };\r\n\r\n    return this.httpClient.post<Comment>(`${this.url}/${entityId}`, data);\r\n  }\r\n\r\n  public updateComment$(\r\n    entityId: string,\r\n    entityType: CommentEntityTypeEnum,\r\n    commentId: string,\r\n    message: string\r\n  ): Observable<Comment> {\r\n    const data = {\r\n      entityId,\r\n      entityType,\r\n      messageText: message,\r\n      id: commentId\r\n    };\r\n\r\n    return this.httpClient.post<Comment>(\r\n      `${this.url}/${entityId}/${commentId}`,\r\n      data\r\n    );\r\n  }\r\n\r\n  public deleteComment$(\r\n    entityId: string,\r\n    commentId: string\r\n  ): Observable<Comment> {\r\n    return this.httpClient.delete<Comment>(\r\n      `${this.url}/${entityId}/${commentId}`\r\n    );\r\n  }\r\n\r\n  public getQuestionContainerViewPages(taskId: string): Observable<any> {\r\n    return this.httpClient\r\n      .get(`/api/question-survey/${taskId}`)\r\n      .pipe(map(this.mapGetQuestionContainerViewPages));\r\n  }\r\n\r\n  public getAttachmentDownloadUrl$(attachmentId: string): Observable<any> {\r\n    return this.httpClient.get(`${this.url}/attachments/${attachmentId}/url`);\r\n  }\r\n\r\n  private mapGetQuestionContainerViewPages(questionnaire) {\r\n    return questionnaire;\r\n  }\r\n\r\n  public postQuestionDetailResponses(\r\n    answers: AnswerDetailResponseInterface[],\r\n    submitAction: boolean,\r\n    taskId: string\r\n  ): Observable<any> {\r\n    // Assemble post data\r\n    const answersData = {\r\n      answers: answers,\r\n      submitAction: submitAction\r\n    };\r\n    return this.httpClient.post(`/api/question-survey/${taskId}`, answersData);\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\n\r\nimport { CommentEntityTypeEnum } from '../../enums';\r\nimport { PageInterface } from '../../interfaces';\r\nimport { Comment } from '../../models';\r\nimport { AaaUserService } from '../../services/aaa-user';\r\nimport { DashBoardCommentControllerService } from '../../services/dash-board-comment-controller';\r\nimport { CommentFormComponent } from './comment-form/comment-form.component';\r\n\r\n@Component({\r\n  selector: 'ta-comments-popover',\r\n  templateUrl: './comments-popover.component.html',\r\n  styleUrls: ['./comments-popover.component.scss']\r\n})\r\nexport class CommentsPopoverComponent implements OnInit, OnDestroy {\r\n  @Input() public entityId: string;\r\n\r\n  @ViewChild('newCommentForm') public newCommentForm: CommentFormComponent;\r\n\r\n  public apiComments: PageInterface<Comment> = null;\r\n  public isLoading = false;\r\n  public isRefreshing = false;\r\n\r\n  public searchUser$: BehaviorSubject<string> = new BehaviorSubject('');\r\n  private _searchUser$: Subscription;\r\n\r\n  constructor(\r\n    private dashBoardCommentControllerService: DashBoardCommentControllerService,\r\n    public aaaUserService: AaaUserService\r\n  ) {}\r\n\r\n  public ngOnInit(): void {}\r\n\r\n  public ngOnDestroy(): void {\r\n    if (this._searchUser$) {\r\n      this._searchUser$.unsubscribe();\r\n    }\r\n  }\r\n\r\n  public async popoverShown(): Promise<void> {\r\n    if (!this.apiComments) {\r\n      this.isLoading = true;\r\n    } else {\r\n      this.isRefreshing = true;\r\n    }\r\n    await this.loadComments();\r\n    this.isLoading = false;\r\n    this.isRefreshing = false;\r\n  }\r\n\r\n  public searchTerm(searchTerm: string): void {\r\n    this.searchUser$.next(searchTerm);\r\n  }\r\n\r\n  public toggleEdit(comment: Comment): void {\r\n    comment.isEditing = comment.isEditing ? false : true;\r\n  }\r\n\r\n  public onSubmit(formValue: any): void {\r\n    if (formValue) {\r\n      this.createComment(formValue.comment);\r\n    }\r\n  }\r\n\r\n  public async updateSubmit(formValue: any, comment: Comment): Promise<void> {\r\n    this.isRefreshing = true;\r\n    await this.updateComment(comment.id, formValue.comment);\r\n    await this.loadComments();\r\n    this.isRefreshing = false;\r\n  }\r\n\r\n  public async createComment(message: string): Promise<void> {\r\n    this.isRefreshing = true;\r\n    await this.dashBoardCommentControllerService\r\n      .createComment$(this.entityId, CommentEntityTypeEnum.Question, message)\r\n      .toPromise();\r\n    await this.loadComments();\r\n    this.newCommentForm.resetForm();\r\n    this.isRefreshing = false;\r\n  }\r\n\r\n  public async updateComment(\r\n    commentId: string,\r\n    message: string\r\n  ): Promise<void> {\r\n    await this.dashBoardCommentControllerService\r\n      .updateComment$(\r\n        this.entityId,\r\n        CommentEntityTypeEnum.Question,\r\n        commentId,\r\n        message\r\n      )\r\n      .toPromise();\r\n  }\r\n\r\n  public async deleteComment(commentId: string): Promise<void> {\r\n    this.isRefreshing = true;\r\n    await this.dashBoardCommentControllerService\r\n      .deleteComment$(this.entityId, commentId)\r\n      .toPromise();\r\n    await this.loadComments();\r\n    this.isRefreshing = false;\r\n  }\r\n\r\n  private async loadComments(): Promise<void> {\r\n    const apiComments: PageInterface<\r\n      any\r\n    > = await this.dashBoardCommentControllerService\r\n      .getComments$(this.entityId)\r\n      .toPromise();\r\n    this.apiComments = apiComments;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TaMentionModule } from '@trustarc/mention';\r\nimport {\r\n  TaButtonsModule,\r\n  TaCheckboxModule,\r\n  TaDropdownModule,\r\n  TaPopoverModule,\r\n  TaSvgIconModule\r\n} from '@trustarc/ui-toolkit';\r\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\r\n\r\nimport { InitialIndicatorModule } from '../initial-indicator';\r\nimport { CommentFormComponent } from './comment-form/comment-form.component';\r\nimport { CommentsPopoverComponent } from './comments-popover.component';\r\n\r\n@NgModule({\r\n  declarations: [CommentsPopoverComponent, CommentFormComponent],\r\n  imports: [\r\n    CommonModule,\r\n    TaSvgIconModule,\r\n    TaButtonsModule,\r\n    TaPopoverModule,\r\n    InitialIndicatorModule,\r\n    TaDropdownModule,\r\n    TaCheckboxModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TaMentionModule,\r\n    NgxSkeletonLoaderModule\r\n  ],\r\n  exports: [CommentsPopoverComponent]\r\n})\r\nexport class CommentsPopoverModule {}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { TaActiveModal } from '@trustarc/ui-toolkit';\r\n\r\n@Component({\r\n  selector: 'ta-delete-modal',\r\n  templateUrl: './delete-modal.component.html',\r\n  styleUrls: ['./delete-modal.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DeleteModalComponent implements OnInit, AfterViewInit {\r\n  @Input() public title: string;\r\n  @Input() public description =\r\n    'The item cannot be recovered once deleted. Are you sure you want to delete this?';\r\n  @Input() public primaryButtonText = 'Delete';\r\n  @Input() public secondaryButtonText = 'Secondary';\r\n  @Input() public cancelButtonText = 'Cancel';\r\n  @Input() public isSecondaryButtonEnabled: boolean;\r\n\r\n  @Output() public clickPrimary = new EventEmitter<any>();\r\n  @Output() public clickSecondary = new EventEmitter<any>();\r\n  @Output() public afterCancelled = new EventEmitter<any>();\r\n\r\n  @ViewChild('primaryButton') public primaryButton: ElementRef;\r\n\r\n  constructor(public modalService: TaActiveModal) {}\r\n\r\n  public ngOnInit(): void {}\r\n\r\n  public ngAfterViewInit(): void {\r\n    setTimeout(() => this.initDefaultFocus());\r\n  }\r\n\r\n  public onClickCancel(): void {\r\n    this.modalService.dismiss('Cancel click');\r\n    this.afterCancelled.emit();\r\n  }\r\n\r\n  private initDefaultFocus(): void {\r\n    (this.primaryButton as any).el.nativeElement.focus();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  TaButtonsModule,\r\n  TaModalModule,\r\n  TaSvgIconModule\r\n} from '@trustarc/ui-toolkit';\r\n\r\nimport { DeleteModalComponent } from './delete-modal.component';\r\n\r\n@NgModule({\r\n  declarations: [DeleteModalComponent],\r\n  imports: [CommonModule, TaButtonsModule, TaSvgIconModule, TaModalModule],\r\n  exports: [DeleteModalComponent],\r\n  entryComponents: [DeleteModalComponent]\r\n})\r\nexport class DeleteModalModule {}\r\n","import { FileUploadFormatConfig } from '../file-upload';\r\n\r\nexport class SimpleFileUploadConfig {\r\n  attachmentNameKey?: string;\r\n  format?: FileUploadFormatConfig;\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Input,\r\n  OnInit,\r\n  Output\r\n} from '@angular/core';\r\n\r\nimport { SimpleFileUploadConfig } from '../simple-file-upload/simple-file-upload-config.model';\r\nimport { SimpleFileUploadItem } from '../simple-file-upload/simple-file-upload-item.model';\r\n\r\n@Component({\r\n  selector: 'ta-file-download',\r\n  templateUrl: './file-download.component.html',\r\n  styleUrls: ['./file-download.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FileDownloadComponent implements OnInit {\r\n  @HostBinding('class.d-block') public dBlock = true;\r\n\r\n  @Input() public attachments: any[] = [];\r\n  @Input() public files: SimpleFileUploadItem[] = [];\r\n  @Input() public disabled: boolean;\r\n  @Input() public hasDescription: boolean;\r\n  @Input() public config: SimpleFileUploadConfig;\r\n\r\n  @Output() public deleteAttachment = new EventEmitter<any>();\r\n  @Output() public clickAttachment = new EventEmitter<any>();\r\n  @Output() public removeFile = new EventEmitter<number>();\r\n\r\n  constructor() {}\r\n\r\n  public ngOnInit(): void {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TaButtonsModule, TaSvgIconModule } from '@trustarc/ui-toolkit';\r\n\r\nimport { FileDownloadComponent } from './file-download.component';\r\n\r\n@NgModule({\r\n  declarations: [FileDownloadComponent],\r\n  imports: [CommonModule, FormsModule, TaButtonsModule, TaSvgIconModule],\r\n  exports: [FileDownloadComponent]\r\n})\r\nexport class FileDownloadModule {}\r\n","import { ChangeDetectorRef } from '@angular/core';\r\n\r\nexport abstract class ChangeDetectableComponentBase\r\n  implements ChangeDetectorRef {\r\n  private get isChangeDetectorDestroyed(): boolean {\r\n    return this.changeDetectorRef['destroyed'];\r\n  }\r\n\r\n  constructor(protected changeDetectorRef: ChangeDetectorRef) {}\r\n\r\n  markForCheck(): void {\r\n    if (this.isChangeDetectorDestroyed) {\r\n      return;\r\n    }\r\n\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  detach(): void {\r\n    if (this.isChangeDetectorDestroyed) {\r\n      return;\r\n    }\r\n\r\n    this.changeDetectorRef.detach();\r\n  }\r\n\r\n  detectChanges(): void {\r\n    if (this.isChangeDetectorDestroyed) {\r\n      return;\r\n    }\r\n\r\n    this.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  checkNoChanges(): void {\r\n    if (this.isChangeDetectorDestroyed) {\r\n      return;\r\n    }\r\n\r\n    this.changeDetectorRef.checkNoChanges();\r\n  }\r\n\r\n  reattach(): void {\r\n    if (this.isChangeDetectorDestroyed) {\r\n      return;\r\n    }\r\n\r\n    this.changeDetectorRef.reattach();\r\n  }\r\n}\r\n","export interface FileUploadFormatConfig {\r\n  jpg?: boolean;\r\n  png?: boolean;\r\n  gif?: boolean;\r\n  csv?: boolean;\r\n  tsv?: boolean;\r\n  zip?: boolean;\r\n  txt?: boolean;\r\n  doc?: boolean;\r\n  xsl?: boolean;\r\n  ppt?: boolean;\r\n  rtf?: boolean;\r\n  pdf?: boolean;\r\n  css?: boolean;\r\n  js?: boolean;\r\n  html?: boolean;\r\n  code?: boolean;\r\n}\r\n\r\nexport interface FormatInterface {\r\n  [x: string]: {\r\n    exts: string[];\r\n    mime: string[];\r\n  };\r\n}\r\n\r\nexport const FORMAT: FormatInterface = {\r\n  jpg: {\r\n    exts: ['jpg', 'jpeg'],\r\n    mime: [\r\n      'image/jpeg',\r\n      'image/jpg',\r\n      'image/jp_',\r\n      'application/jpg',\r\n      'application/x-jpg',\r\n      'image/pjpeg',\r\n      'image/pipeg',\r\n      'image/vnd.swiftview-jpeg',\r\n      'image/x-xbitmap'\r\n    ]\r\n  },\r\n  png: {\r\n    exts: ['png'],\r\n    mime: ['image/png', 'application/png', 'application/x-png']\r\n  },\r\n  gif: {\r\n    exts: ['gif'],\r\n    mime: ['image/gif', 'image/x-xbitmap', 'image/gi_']\r\n  },\r\n  csv: {\r\n    exts: ['csv'],\r\n    mime: [\r\n      'text/comma-separated-values',\r\n      'text/csv',\r\n      'application/csv',\r\n      'application/excel',\r\n      'application/vnd.ms-excel',\r\n      'application/vnd.msexcel',\r\n      'text/anytext'\r\n    ]\r\n  },\r\n  tsv: {\r\n    exts: ['tsv'],\r\n    mime: ['text/tab-separated-values']\r\n  },\r\n  zip: {\r\n    exts: ['zip'],\r\n    mime: [\r\n      'application/zip',\r\n      'application/x-zip',\r\n      'application/x-zip-compressed',\r\n      'application/octet-stream',\r\n      'application/x-compress',\r\n      'application/x-compressed',\r\n      'multipart/x-zip'\r\n    ]\r\n  },\r\n  txt: {\r\n    exts: ['txt'],\r\n    mime: [\r\n      'text/plain',\r\n      'application/txt',\r\n      'browser/internal',\r\n      'text/anytext',\r\n      'widetext/plain',\r\n      'widetext/paragraph'\r\n    ]\r\n  },\r\n  doc: {\r\n    exts: ['doc', 'docx'],\r\n    mime: [\r\n      'application/msword [official]',\r\n      'application/doc',\r\n      'application/vnd.msword',\r\n      'application/vnd.ms-word',\r\n      'application/winword',\r\n      'application/word',\r\n      'application/x-msw6',\r\n      'application/x-msword',\r\n      'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n    ]\r\n  },\r\n  xsl: {\r\n    exts: ['xsl', 'xlsx'],\r\n    mime: [\r\n      'application/vnd.ms-excel [official]',\r\n      'application/msexcel',\r\n      'application/x-msexcel',\r\n      'application/x-ms-excel',\r\n      'application/vnd.ms-excel',\r\n      'application/x-excel',\r\n      'application/x-dos_ms_excel',\r\n      'application/xls',\r\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n    ]\r\n  },\r\n  ppt: {\r\n    exts: ['ppt', 'pptx'],\r\n    mime: [\r\n      'application/vnd.ms-powerpoint [official]',\r\n      'application/mspowerpoint',\r\n      'application/ms-powerpoint',\r\n      'application/mspowerpnt',\r\n      'application/vnd-mspowerpoint',\r\n      'application/powerpoint',\r\n      'application/x-powerpoint',\r\n      'application/x-m'\r\n    ]\r\n  },\r\n  rtf: {\r\n    exts: ['rtf'],\r\n    mime: [\r\n      'application/rtf',\r\n      'application/x-rtf',\r\n      'text/rtf',\r\n      'text/richtext',\r\n      'application/msword',\r\n      'application/doc',\r\n      'application/x-soffice'\r\n    ]\r\n  },\r\n  pdf: {\r\n    exts: ['pdf'],\r\n    mime: [\r\n      'application/pdf',\r\n      'application/x-pdf',\r\n      'application/acrobat',\r\n      'applications/vnd.pdf',\r\n      'text/pdf',\r\n      'text/x-pdf'\r\n    ]\r\n  },\r\n  css: {\r\n    exts: ['css'],\r\n    mime: ['text/css', 'application/css-stylesheet']\r\n  },\r\n  js: {\r\n    exts: ['js'],\r\n    mime: ['application/x-javascript', 'text/javascript']\r\n  },\r\n  html: {\r\n    exts: ['html'],\r\n    mime: ['text/html', 'text/plain']\r\n  },\r\n  code: {\r\n    exts: ['php', 'ts'],\r\n    mime: []\r\n  }\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport * as _ from 'lodash';\r\n\r\nimport {\r\n  FileUploadFormatConfig,\r\n  FORMAT,\r\n  FormatInterface\r\n} from './file-upload.model';\r\n\r\n@Injectable()\r\nexport class FileUploadValidationService {\r\n  private format: FormatInterface;\r\n\r\n  constructor() {\r\n    this.format = FORMAT;\r\n  }\r\n\r\n  /**\r\n   * Check file size. Return true if valid\r\n   */\r\n  public isValidFileSize(fileSize: number, maxFileSize: number): boolean {\r\n    return fileSize <= maxFileSize;\r\n  }\r\n\r\n  /**\r\n   * Check file mime or extension. Return true if valid\r\n   */\r\n  public isValidExtension(\r\n    file: File,\r\n    formatConfig: FileUploadFormatConfig\r\n  ): boolean {\r\n    return (\r\n      (formatConfig.jpg && this.isJpgFile(file)) ||\r\n      (formatConfig.png && this.isPngFile(file)) ||\r\n      (formatConfig.gif && this.isGifFile(file)) ||\r\n      (formatConfig.csv && this.isCsvFile(file)) ||\r\n      (formatConfig.tsv && this.isTsvFile(file)) ||\r\n      (formatConfig.zip && this.isZipFile(file)) ||\r\n      (formatConfig.txt && this.isTxtFile(file)) ||\r\n      (formatConfig.doc && this.isDocFile(file)) ||\r\n      (formatConfig.xsl && this.isXslFile(file)) ||\r\n      (formatConfig.ppt && this.isPptFile(file)) ||\r\n      (formatConfig.rtf && this.isRtfFile(file)) ||\r\n      (formatConfig.pdf && this.isPdfFile(file)) ||\r\n      (formatConfig.css && this.isCssFile(file)) ||\r\n      (formatConfig.js && this.isJsFile(file)) ||\r\n      (formatConfig.html && this.isHtmlFile(file)) ||\r\n      (formatConfig.code && this.isCodeFile(file))\r\n    );\r\n  }\r\n\r\n  public getAllowedMime(formatConfig: FileUploadFormatConfig): string[] {\r\n    const mime = [];\r\n    for (const format in formatConfig) {\r\n      if (this.format[format]) {\r\n        mime.push(this.format[format].mime);\r\n      }\r\n    }\r\n    return _.union(mime);\r\n  }\r\n\r\n  private checkFileWith(\r\n    mimeTypes: string[],\r\n    validExts: string[],\r\n    file: File\r\n  ): boolean {\r\n    const fileExt = file.name\r\n      .split('.')\r\n      .pop()\r\n      .toLowerCase();\r\n\r\n    const isValidExt =\r\n      (file.type === '' || mimeTypes.length === 0) &&\r\n      validExts.includes(fileExt);\r\n\r\n    const isValidMime = file.type && mimeTypes.includes(file.type);\r\n\r\n    return isValidExt || isValidMime;\r\n  }\r\n\r\n  private isJpgFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.jpg.mime, this.format.jpg.exts, file);\r\n  }\r\n\r\n  private isPngFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.png.mime, this.format.png.exts, file);\r\n  }\r\n\r\n  private isGifFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.gif.mime, this.format.gif.exts, file);\r\n  }\r\n\r\n  private isCsvFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.csv.mime, this.format.csv.exts, file);\r\n  }\r\n\r\n  private isTsvFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.tsv.mime, this.format.tsv.exts, file);\r\n  }\r\n\r\n  private isZipFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.zip.mime, this.format.zip.exts, file);\r\n  }\r\n\r\n  private isTxtFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.txt.mime, this.format.txt.exts, file);\r\n  }\r\n\r\n  private isDocFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.doc.mime, this.format.doc.exts, file);\r\n  }\r\n\r\n  private isXslFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.xsl.mime, this.format.xsl.exts, file);\r\n  }\r\n\r\n  private isPptFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.ppt.mime, this.format.ppt.exts, file);\r\n  }\r\n\r\n  private isRtfFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.rtf.mime, this.format.rtf.exts, file);\r\n  }\r\n\r\n  public isPdfFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.pdf.mime, this.format.pdf.exts, file);\r\n  }\r\n\r\n  private isCssFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.css.mime, this.format.css.exts, file);\r\n  }\r\n\r\n  private isJsFile(file: File): boolean {\r\n    return this.checkFileWith(this.format.js.mime, this.format.js.exts, file);\r\n  }\r\n\r\n  private isHtmlFile(file: File): boolean {\r\n    return this.checkFileWith(\r\n      this.format.html.mime,\r\n      this.format.html.exts,\r\n      file\r\n    );\r\n  }\r\n\r\n  private isCodeFile(file: File): boolean {\r\n    return this.checkFileWith(\r\n      this.format.code.mime,\r\n      this.format.code.exts,\r\n      file\r\n    );\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { ToastService } from '@trustarc/ui-toolkit';\r\n\r\nimport { ChangeDetectableComponentBase } from '../../../change-detectable-component-base';\r\nimport { FileUploadFormatConfig } from './file-upload.model';\r\nimport { FileUploadValidationService } from './file-upload.validation.service';\r\n\r\n@Component({\r\n  selector: 'ta-file-upload',\r\n  templateUrl: './file-upload.component.html',\r\n  styleUrls: ['./file-upload.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => FileUploadComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class FileUploadComponent extends ChangeDetectableComponentBase\r\n  implements OnInit, ControlValueAccessor {\r\n  @Input() public id: string;\r\n  @Input() public prefixText: string;\r\n  @Input() public linkText: string;\r\n  @Input() public suffixText: string;\r\n  @Input() public isMultiple: boolean;\r\n  @Input() public formatConfig: FileUploadFormatConfig = {\r\n    jpg: false,\r\n    png: false,\r\n    gif: false,\r\n    csv: false,\r\n    tsv: false,\r\n    zip: false,\r\n    txt: false,\r\n    doc: false,\r\n    xsl: false,\r\n    ppt: false,\r\n    rtf: false,\r\n    pdf: false,\r\n    css: false,\r\n    js: false,\r\n    html: false,\r\n    code: false\r\n  };\r\n  @Input() public maxFileSize: number;\r\n\r\n  @Output() public afterFilesSelected = new EventEmitter<File[]>();\r\n\r\n  @ViewChild('fileInput') public fileInput: ElementRef;\r\n\r\n  public draggingOver = false;\r\n  public allowedMime: string[] = [];\r\n  public files: File[] = [];\r\n\r\n  private propagateChange: Function = (files: any) => {};\r\n\r\n  constructor(\r\n    protected changeDetectorRef: ChangeDetectorRef,\r\n    private fileUploadValidationService: FileUploadValidationService,\r\n    private toastService: ToastService\r\n  ) {\r\n    super(changeDetectorRef);\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.allowedMime = this.fileUploadValidationService.getAllowedMime(\r\n      this.formatConfig\r\n    );\r\n  }\r\n\r\n  public onDragOver(e: any): void {\r\n    e.preventDefault();\r\n    this.draggingOver = true;\r\n    this.markForCheck();\r\n  }\r\n\r\n  public onDragLeave(e: any): void {\r\n    e.preventDefault();\r\n    this.draggingOver = false;\r\n    this.markForCheck();\r\n  }\r\n\r\n  public selectFiles(files: File[]): void {\r\n    const filesToAdd = Object.assign([], files);\r\n    let isValid = true;\r\n\r\n    if (!this.isValidFilesSize(filesToAdd)) {\r\n      isValid = false;\r\n      this.toastService.error(\r\n        `Attachments size exceeds the allowable limit (maximum: ${this.formatBytes(\r\n          this.maxFileSize\r\n        )})`\r\n      );\r\n    }\r\n\r\n    filesToAdd.forEach((file: File, index) => {\r\n      if (\r\n        !this.fileUploadValidationService.isValidExtension(\r\n          file,\r\n          this.formatConfig\r\n        )\r\n      ) {\r\n        isValid = false;\r\n        this.toastService.error(`${file.name} is invalid file type`);\r\n      }\r\n    });\r\n\r\n    if (!isValid) {\r\n      return;\r\n    }\r\n\r\n    this.propagateChange(filesToAdd);\r\n    this.markForCheck();\r\n    this.afterFilesSelected.emit(filesToAdd);\r\n  }\r\n\r\n  public onDrop(event: any): void {\r\n    event.preventDefault();\r\n    this.onDragLeave(event);\r\n    this.selectFiles(event.dataTransfer.files);\r\n  }\r\n\r\n  public onFilesSelected(event: any): void {\r\n    this.selectFiles(event.target.files);\r\n    event.target.value = null;\r\n  }\r\n\r\n  public openUploadBrowser(): void {\r\n    this.fileInput.nativeElement.click();\r\n  }\r\n\r\n  public registerOnChange(fn): void {\r\n    this.propagateChange = fn;\r\n  }\r\n\r\n  public registerOnTouched(): void {}\r\n\r\n  public writeValue(value: any): void {\r\n    if (value) {\r\n      this.files = value;\r\n    }\r\n  }\r\n\r\n  private formatBytes(bytes: number, decimals = 2): string {\r\n    if (bytes === 0) {\r\n      return '0 Bytes';\r\n    }\r\n\r\n    const k = 1024;\r\n    const dm = decimals < 0 ? 0 : decimals;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n  }\r\n\r\n  private isValidFilesSize(files: File[]): boolean {\r\n    const size = this.getFilesSize(files);\r\n\r\n    return this.maxFileSize\r\n      ? this.fileUploadValidationService.isValidFileSize(size, this.maxFileSize)\r\n      : true;\r\n  }\r\n\r\n  private getFilesSize(files: File[]): number {\r\n    return files\r\n      .map(f => f.size)\r\n      .reduce((totalSize, fileSize) => totalSize + fileSize);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  TaButtonsModule,\r\n  TaSvgIconModule,\r\n  TaTooltipModule\r\n} from '@trustarc/ui-toolkit';\r\n\r\nimport { FileUploadComponent } from './file-upload.component';\r\nimport { FileUploadValidationService } from './file-upload.validation.service';\r\n\r\n@NgModule({\r\n  declarations: [FileUploadComponent],\r\n  imports: [CommonModule, TaButtonsModule, TaSvgIconModule, TaTooltipModule],\r\n  exports: [FileUploadComponent],\r\n  providers: [FileUploadValidationService]\r\n})\r\nexport class FileUploadModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { ChangeDetectableComponentBase } from '../../../change-detectable-component-base';\r\nimport { FileUploadComponent } from '../file-upload/file-upload.component';\r\nimport { SimpleFileUploadConfig } from './simple-file-upload-config.model';\r\nimport { SimpleFileUploadItem } from './simple-file-upload-item.model';\r\n\r\n@Component({\r\n  selector: 'ta-simple-file-upload',\r\n  templateUrl: './simple-file-upload.component.html',\r\n  styleUrls: ['./simple-file-upload.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: SimpleFileUploadComponent,\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class SimpleFileUploadComponent extends ChangeDetectableComponentBase\r\n  implements ControlValueAccessor {\r\n  @Input() public id: string;\r\n  @Input() public prefixText = 'Drag & drop your files to attach or';\r\n  @Input() public linkText = 'browse';\r\n  @Input() public suffixText = 'to choose a file';\r\n  @Input() public attachments: any[] = [];\r\n  @Input() public files: SimpleFileUploadItem[] = [];\r\n  @Input() public config: SimpleFileUploadConfig = {\r\n    attachmentNameKey: 'originalFileName',\r\n    format: { pdf: true, doc: true }\r\n  };\r\n  @Input() public isMultiple = true;\r\n  @Input() public disabled: boolean;\r\n  @Input() public hasDescription: boolean;\r\n  @Input() public maxFileSize = 1048576 - 255; // 1MB - (255 request length)\r\n  @Input() public uploadHidden: boolean;\r\n\r\n  @Output() public afterFilesSelected = new EventEmitter<\r\n    SimpleFileUploadItem[]\r\n  >();\r\n  @Output() public deleteAttachment = new EventEmitter<any>();\r\n  @Output() public clickAttachment = new EventEmitter<any>();\r\n\r\n  @ViewChild(FileUploadComponent)\r\n  public fileUploadComponent: FileUploadComponent;\r\n\r\n  constructor(protected changeDetectorRef: ChangeDetectorRef) {\r\n    super(changeDetectorRef);\r\n  }\r\n\r\n  public onAfterFilesSelected(files: File[], text?: string): void {\r\n    const filesToAdd = files.map(\r\n      file => ({ file, text } as SimpleFileUploadItem)\r\n    );\r\n    this.files = [...this.files, ...filesToAdd];\r\n    this.afterFilesSelected.emit(this.files);\r\n    this.detectChanges();\r\n  }\r\n\r\n  public onRemoveFile(index: number): void {\r\n    this.files.splice(index, 1);\r\n    this.afterFilesSelected.emit(this.files);\r\n    this.detectChanges();\r\n  }\r\n\r\n  public onClickAttachment(attachment: any): void {\r\n    this.clickAttachment.emit(attachment);\r\n  }\r\n\r\n  public onDeleteAttachment(attachment: any): void {\r\n    this.deleteAttachment.emit(attachment);\r\n  }\r\n\r\n  public writeValue(value: any): void {\r\n    if (value) {\r\n      this.files = value;\r\n    }\r\n  }\r\n\r\n  public registerOnChange(): void {}\r\n\r\n  public registerOnTouched(): void {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  TaButtonsModule,\r\n  TaSvgIconModule,\r\n  TaTooltipModule\r\n} from '@trustarc/ui-toolkit';\r\n\r\nimport { FileDownloadModule } from '../file-download/file-download.module';\r\nimport { FileUploadModule } from '../file-upload/file-upload.module';\r\nimport { SimpleFileUploadComponent } from './simple-file-upload.component';\r\n\r\n@NgModule({\r\n  declarations: [SimpleFileUploadComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FileUploadModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TaButtonsModule,\r\n    TaSvgIconModule,\r\n    TaTooltipModule,\r\n    FileDownloadModule\r\n  ],\r\n  exports: [SimpleFileUploadComponent]\r\n})\r\nexport class SimpleFileUploadModule {}\r\n","export class SimpleFileUploadItem {\r\n  file: File;\r\n  text: string;\r\n}\r\n","import { SimpleFileUploadItem } from './simple-file-upload-item.model';\r\n\r\nexport class SimpleFileUploadItemContainer {\r\n  files: SimpleFileUploadItem[];\r\n  progress: number;\r\n  isLoading: boolean;\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  forwardRef,\r\n  Input,\r\n  OnInit\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { QuestionMultiSelectUiTypeEnum } from '../../../../enums';\r\nimport {\r\n  QuestionDetailResponseInterface,\r\n  QuestionTreeInterface\r\n} from '../../../../interfaces';\r\n\r\n@Component({\r\n  selector: 'ta-multi-select',\r\n  templateUrl: './multi-select.component.html',\r\n  styleUrls: ['./multi-select.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => MultiSelectComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class MultiSelectComponent implements OnInit, ControlValueAccessor {\r\n  @Input() public question: QuestionTreeInterface;\r\n\r\n  public readonly questionMultiSelectUiTypeEnum = QuestionMultiSelectUiTypeEnum;\r\n\r\n  constructor() {}\r\n\r\n  public ngOnInit(): void {}\r\n\r\n  public onSelectResponse(response: QuestionDetailResponseInterface): void {\r\n    this.onChange(response);\r\n  }\r\n\r\n  public registerOnChange(fn): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  public registerOnTouched(): void {}\r\n\r\n  public writeValue(value: any): void {}\r\n\r\n  private onChange = (_: any) => {};\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  forwardRef,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { QuestionSingleSelectUiTypeEnum } from '../../../../enums';\r\nimport {\r\n  QuestionDetailResponseInterface,\r\n  QuestionTreeInterface\r\n} from '../../../../interfaces';\r\nimport { isPropertyChanged } from '../../../../utils';\r\n\r\n@Component({\r\n  selector: 'ta-single-select',\r\n  templateUrl: './single-select.component.html',\r\n  styleUrls: ['./single-select.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => SingleSelectComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class SingleSelectComponent\r\n  implements OnInit, OnChanges, ControlValueAccessor {\r\n  @Input() public question: QuestionTreeInterface;\r\n\r\n  public step: number;\r\n  public readonly questionSingleSelectUiTypeEnum = QuestionSingleSelectUiTypeEnum;\r\n\r\n  constructor() {}\r\n\r\n  public ngOnInit(): void {}\r\n\r\n  public ngOnChanges(changes: SimpleChanges): void {\r\n    if (isPropertyChanged(changes.question)) {\r\n      this.updateStep();\r\n    }\r\n  }\r\n\r\n  public onSelectResponse(response: QuestionDetailResponseInterface): void {\r\n    this.onChange(response);\r\n  }\r\n\r\n  public registerOnChange(fn): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  public registerOnTouched(): void {}\r\n\r\n  public writeValue(value: any): void {}\r\n\r\n  private onChange = (_: any) => {};\r\n\r\n  private updateStep(): void {\r\n    const step =\r\n      100 / (this.question.questionDetails.questionDetailResponses.length + 1);\r\n    this.step = +step.toFixed(2);\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  forwardRef,\r\n  Input,\r\n  OnInit\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { QuestionTreeInterface } from '../../../../interfaces';\r\n\r\n@Component({\r\n  selector: 'ta-text',\r\n  templateUrl: './text.component.html',\r\n  styleUrls: ['./text.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => TextComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class TextComponent implements OnInit, ControlValueAccessor {\r\n  @Input() public question: QuestionTreeInterface;\r\n\r\n  public value: string;\r\n\r\n  constructor() {}\r\n\r\n  public ngOnInit(): void {}\r\n\r\n  public onModelChange(value: string): void {\r\n    this.onChange(value);\r\n  }\r\n\r\n  public registerOnChange(fn): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  public registerOnTouched(): void {}\r\n\r\n  public writeValue(value: string): void {\r\n    if (value) {\r\n      this.value = value;\r\n    }\r\n  }\r\n\r\n  private onChange = (_: any) => {};\r\n}\r\n","import { HttpClient, HttpEvent } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { VERITAS_API_PROXY_PREFIX_URL } from '../../constants';\r\nimport {\r\n  AnswerDetailResponseInterface,\r\n  QuestionnaireInterface\r\n} from '../../interfaces/questionnaire.interface';\r\nimport { Attachment } from '../../models/attachment.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashBoardSurveyControllerService {\r\n  private readonly url = `${this.veritasApiProxyPrefixUrl}/question-survey`;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    @Inject(VERITAS_API_PROXY_PREFIX_URL)\r\n    private veritasApiProxyPrefixUrl: string\r\n  ) {}\r\n\r\n  /**\r\n   * GET List Tasks Data\r\n   */\r\n  public getQuestionContainerViewPages(\r\n    recordId: string\r\n  ): Observable<QuestionnaireInterface> {\r\n    return this.httpClient\r\n      .get(`${this.url}/${recordId}`)\r\n      .pipe(map(this.mapGetQuestionContainerViewPages));\r\n  }\r\n\r\n  public postAttachments$(\r\n    recordId: string,\r\n    questionNodeId: string,\r\n    files: File[]\r\n  ): Observable<HttpEvent<Attachment[]>> {\r\n    const formData = new FormData();\r\n    files.forEach(file => formData.append('attachmentFiles', file));\r\n\r\n    return this.httpClient.post<any>(\r\n      `${this.url}/${recordId}/question/${questionNodeId}/attachments`,\r\n      formData,\r\n      {\r\n        reportProgress: true,\r\n        observe: 'events'\r\n      }\r\n    );\r\n  }\r\n\r\n  public deleteAttachment$(\r\n    recordId: string,\r\n    questionNodeId: string,\r\n    attachmentId: string\r\n  ): Observable<Attachment[]> {\r\n    return this.httpClient.delete<Attachment[]>(\r\n      `${\r\n        this.url\r\n      }/${recordId}/question/${questionNodeId}/attachments/${attachmentId}`\r\n    );\r\n  }\r\n\r\n  private mapGetQuestionContainerViewPages(questionnaire) {\r\n    return questionnaire;\r\n  }\r\n\r\n  public postQuestionDetailResponses(\r\n    answers: AnswerDetailResponseInterface[],\r\n    submitAction: boolean,\r\n    recordId: string\r\n  ): Observable<any> {\r\n    // Assemble post data\r\n    const answersData = {\r\n      answers: answers,\r\n      submitAction: submitAction\r\n    };\r\n    return this.httpClient.post(\r\n      `/api/question-survey/${recordId}`,\r\n      answersData\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { QuestionTypeEnum } from '../../enums/question-type.enum';\r\nimport { QuestionnaireViewModeEnum } from '../../enums/questionnaire-view-mode.enum';\r\nimport {\r\n  ConditionDetailConditionInterface,\r\n  ConditionTreeInterface,\r\n  QuestionDetailResponseInterface,\r\n  QuestionDetailsInterface\r\n} from '../../interfaces/questionnaire.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QuestionnaireUtilsService {\r\n  private reviewMode = false;\r\n  private viewMode = QuestionnaireViewModeEnum.All;\r\n  private _viewModeSubject$ = new Subject<any>();\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * Toggles whether to display the questionnaire in review mode.\r\n   */\r\n  public getReviewMode() {\r\n    return this.reviewMode;\r\n  }\r\n\r\n  public setReviewMode(reviewMode: boolean) {\r\n    this.reviewMode = reviewMode;\r\n  }\r\n\r\n  /**\r\n   * Communicate whether to show all, unanswered, or answered questions\r\n   */\r\n  public getViewMode() {\r\n    return this.viewMode;\r\n  }\r\n\r\n  public changeViewMode(viewMode: QuestionnaireViewModeEnum) {\r\n    this.viewMode = viewMode;\r\n    this._viewModeSubject$.next(this.viewMode);\r\n  }\r\n\r\n  public getViewModeObservable(): Observable<string> {\r\n    return this._viewModeSubject$.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Return the question's current anwer. Can be a response object or a string.\r\n   * @param question to check\r\n   */\r\n  public getQuestionAnswer(questionDetails: QuestionDetailsInterface): any {\r\n    switch (questionDetails.questionDetailType) {\r\n      case QuestionTypeEnum.SingleSelect:\r\n        // Loop through responses and if previously selected option was found, patch value\r\n        const questionDetailResponses = questionDetails.questionDetailResponses;\r\n        if (questionDetailResponses) {\r\n          const selectedResponse = questionDetailResponses.find(response => {\r\n            return response.questionDetailResponsesSelected;\r\n          });\r\n\r\n          if (selectedResponse) {\r\n            return selectedResponse;\r\n          }\r\n        }\r\n        break;\r\n      case QuestionTypeEnum.Text:\r\n        const textResponse = questionDetails.questionDetailAnswerText;\r\n        if (textResponse) {\r\n          return textResponse;\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Used by parent question with a conditionTree to see if it should display it\r\n   * @param conditionTree conditionTree\r\n   */\r\n  public getConditionFulfilled(\r\n    conditionTree: ConditionTreeInterface,\r\n    questionDetails: QuestionDetailsInterface\r\n  ): boolean {\r\n    // Depending on question type, get the appropriate answer object/string\r\n    // Currently only supports single select\r\n    const selectedResponse: QuestionDetailResponseInterface = questionDetails.questionDetailResponses.find(\r\n      response => {\r\n        return response.questionDetailResponsesSelected;\r\n      }\r\n    );\r\n\r\n    if (\r\n      conditionTree.conditionDetails &&\r\n      conditionTree.conditionDetails.conditionDetailConditions\r\n    ) {\r\n      const conditionDetailConditions: ConditionDetailConditionInterface[] =\r\n        conditionTree.conditionDetails.conditionDetailConditions;\r\n\r\n      // Loop through all conditions and make sure they are all fulfilled\r\n      for (let i = 0; i < conditionDetailConditions.length; i++) {\r\n        const conditionDetailCondition = conditionDetailConditions[i];\r\n        if (!this.checkCondition(conditionDetailCondition, selectedResponse)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check that given condition is fulfilled by parent question\r\n   * @param conditionDetailCondition conditionDetailCondition\r\n   */\r\n  private checkCondition(\r\n    conditionDetailCondition: ConditionDetailConditionInterface,\r\n    currentResponse: any\r\n  ): boolean {\r\n    // Currently only supports single select\r\n    if (currentResponse && conditionDetailCondition.expressionViewValueId) {\r\n      const answer: QuestionDetailResponseInterface = currentResponse;\r\n      const questionResponseId = answer.questionDetailResponsesId;\r\n      const conditionValueId = conditionDetailCondition.expressionViewValueId;\r\n\r\n      if (questionResponseId === conditionValueId) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\nimport { QuestionnaireViewModeEnum, QuestionTypeEnum } from '../../enums';\r\nimport {\r\n  QuestionDetailsInterface,\r\n  QuestionTreeInterface\r\n} from '../../interfaces';\r\nimport { QuestionnaireUtilsService } from '../../services';\r\n\r\n@Component({\r\n  selector: 'ta-question',\r\n  templateUrl: './question.component.html',\r\n  styleUrls: ['./question.component.scss']\r\n})\r\nexport class QuestionComponent implements OnInit {\r\n  @Input() public question: QuestionTreeInterface = {\r\n    nodeId: null,\r\n    nodeType: null,\r\n    questionDetails: {\r\n      questionDetailText: null,\r\n      questionDetailType: null,\r\n      commentMessageCount: null,\r\n      questionDetailResponses: [],\r\n      questionDetailAnswer: null,\r\n      recordQuestionEntityId: null\r\n    } as QuestionDetailsInterface,\r\n    children: []\r\n  };\r\n\r\n  @Output() public formReady = new EventEmitter<FormGroup>();\r\n\r\n  public readonly questionTypeEnum = QuestionTypeEnum;\r\n  public answerText = '';\r\n  public questionForm: FormGroup;\r\n  public viewMode: QuestionnaireViewModeEnum;\r\n  public questionAnswer: any;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private questionnaireUtilsService: QuestionnaireUtilsService\r\n  ) {\r\n    this.questionForm = this.formBuilder.group({\r\n      answer: null,\r\n      questionId: null\r\n    });\r\n    this.viewMode = this.questionnaireUtilsService.getViewMode();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.processSelectedOption();\r\n    this.formReady.emit(this.questionForm);\r\n\r\n    Object.keys(this.questionForm.controls).forEach(key =>\r\n      this.questionForm.controls[key].valueChanges.subscribe(value =>\r\n        this.formValueOfAnswerChanged(value)\r\n      )\r\n    );\r\n\r\n    this.questionnaireUtilsService\r\n      .getViewModeObservable()\r\n      .subscribe((viewMode: QuestionnaireViewModeEnum) => {\r\n        this.viewMode = viewMode;\r\n      });\r\n  }\r\n\r\n  public isQuestionVisible(): boolean {\r\n    switch (this.viewMode) {\r\n      case QuestionnaireViewModeEnum.All:\r\n        return true;\r\n      case QuestionnaireViewModeEnum.Answered:\r\n        return this.question.isAnswered;\r\n      case QuestionnaireViewModeEnum.Unanswered:\r\n        return !this.question.isAnswered;\r\n      default:\r\n        return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if question was previously answered, and sync it to the form object.\r\n   */\r\n  private processSelectedOption(): void {\r\n    this.questionForm.patchValue(\r\n      {\r\n        questionId: this.question.nodeId,\r\n        answerDescription: this.question.questionDetails.answerDescription\r\n      },\r\n      { emitEvent: false }\r\n    );\r\n    const questionAnswer = this.questionnaireUtilsService.getQuestionAnswer(\r\n      this.question.questionDetails\r\n    );\r\n    if (questionAnswer) {\r\n      this.questionForm.patchValue(\r\n        {\r\n          answer: questionAnswer\r\n        },\r\n        { emitEvent: false }\r\n      );\r\n      this.question.isAnswered = true;\r\n      this.questionAnswer = questionAnswer;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Depending on question type, update the question object\r\n   * @param value form value\r\n   */\r\n  private formValueOfAnswerChanged(value: any): void {\r\n    switch (this.question.questionDetails.questionDetailType) {\r\n      case QuestionTypeEnum.SingleSelect:\r\n        // Loop through responses and if previously selected option was found, patch value\r\n        const questionDetailResponses = this.question.questionDetails\r\n          .questionDetailResponses;\r\n        if (questionDetailResponses) {\r\n          // Mark the current choice false\r\n          const prevResponse = questionDetailResponses.find(response => {\r\n            return response.questionDetailResponsesSelected;\r\n          });\r\n          if (prevResponse) {\r\n            prevResponse.questionDetailResponsesSelected = false;\r\n          }\r\n\r\n          // Mark the new choice true\r\n          const newResponse = questionDetailResponses.find(response => {\r\n            return (\r\n              response.questionDetailResponsesId ===\r\n              value.questionDetailResponsesId\r\n            );\r\n          });\r\n          newResponse.questionDetailResponsesSelected = true;\r\n        }\r\n        break;\r\n\r\n      case QuestionTypeEnum.MultiSelect:\r\n        if (this.question.questionDetails.questionDetailResponses) {\r\n          const questionDetailResponse = this.question.questionDetails.questionDetailResponses.find(\r\n            response =>\r\n              response.questionDetailResponsesId ===\r\n              value.questionDetailResponsesId\r\n          );\r\n          questionDetailResponse.questionDetailResponsesSelected = !questionDetailResponse.questionDetailResponsesSelected;\r\n        }\r\n        break;\r\n\r\n      case QuestionTypeEnum.Text:\r\n        // Update value of questionDetailAnswerText on data object\r\n        this.question.questionDetails.questionDetailAnswerText = value;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // Set answered flag\r\n    if (value && value.answer) {\r\n      this.question.isAnswered = true;\r\n    } else {\r\n      this.question.isAnswered = false;\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  TaButtonsModule,\r\n  TaDropdownModule,\r\n  TaProgressbarModule,\r\n  TaRadioModule,\r\n  TaSvgIconModule,\r\n  TaTooltipModule\r\n} from '@trustarc/ui-toolkit';\r\n\r\nimport { SimpleFileUploadModule } from '../file-upload';\r\nimport { MultiSelectComponent } from './components/multi-select/multi-select.component';\r\nimport { SingleSelectComponent } from './components/single-select/single-select.component';\r\nimport { TextComponent } from './components/text/text.component';\r\nimport { QuestionComponent } from './question.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    QuestionComponent,\r\n    MultiSelectComponent,\r\n    SingleSelectComponent,\r\n    TextComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    TaRadioModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    TaButtonsModule,\r\n    TaSvgIconModule,\r\n    TaDropdownModule,\r\n    TaTooltipModule,\r\n    SimpleFileUploadModule,\r\n    TaProgressbarModule\r\n  ],\r\n  exports: [QuestionComponent]\r\n})\r\nexport class QuestionModule {}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ta-question-more-menu',\r\n  templateUrl: './question-more-menu.component.html',\r\n  styleUrls: ['./question-more-menu.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class QuestionMoreMenuComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  public ngOnInit(): void {}\r\n}\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\n\r\nimport {\r\n  ConditionTreeInterface,\r\n  QuestionDetailsInterface,\r\n  QuestionTreeInterface\r\n} from '../../interfaces';\r\nimport { Attachment } from '../../models';\r\nimport { QuestionnaireUtilsService } from '../../services';\r\nimport {\r\n  SimpleFileUploadComponent,\r\n  SimpleFileUploadItem\r\n} from '../file-upload';\r\n\r\n@Component({\r\n  selector: 'ta-question-accordion',\r\n  templateUrl: './question-accordion.component.html',\r\n  styleUrls: ['./question-accordion.component.scss']\r\n})\r\nexport class QuestionAccordionComponent implements OnInit {\r\n  @Input() public question: QuestionTreeInterface = {\r\n    nodeId: null,\r\n    nodeType: null,\r\n    questionDetails: {\r\n      questionDetailText: null,\r\n      questionDetailType: null,\r\n      commentMessageCount: null,\r\n      questionDetailResponses: [],\r\n      questionDetailAnswer: null,\r\n      recordQuestionEntityId: null\r\n    } as QuestionDetailsInterface,\r\n    children: []\r\n  };\r\n\r\n  @Output() public formReady = new EventEmitter<FormGroup>();\r\n  @Output() public afterFilesSelected = new EventEmitter<\r\n    [QuestionTreeInterface, SimpleFileUploadItem[]]\r\n  >();\r\n  @Output() public deleteAttachment = new EventEmitter<\r\n    [QuestionTreeInterface, Attachment]\r\n  >();\r\n  @Output() public clickAttachment = new EventEmitter<Attachment>();\r\n\r\n  @ViewChild(SimpleFileUploadComponent)\r\n  public simpleFileUploadComponent: SimpleFileUploadComponent;\r\n\r\n  public questionAccordionForm: FormGroup;\r\n  public reviewMode: boolean;\r\n\r\n  private get children(): FormArray {\r\n    return this.questionAccordionForm.get('children') as FormArray;\r\n  }\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private questionnaireUtilsService: QuestionnaireUtilsService\r\n  ) {\r\n    this.questionAccordionForm = this.formBuilder.group({\r\n      question: null,\r\n      children: this.formBuilder.array([]),\r\n      conditionFulfilled: false\r\n    });\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.formReady.emit(this.questionAccordionForm);\r\n    this.questionAccordionForm.valueChanges.subscribe(value => {\r\n      this.formValueChanged(value);\r\n    });\r\n    this.reviewMode = this.questionnaireUtilsService.getReviewMode();\r\n  }\r\n\r\n  /**\r\n   * Propagate main questionForm to questionAccordionForm\r\n   * @param questionForm questionForm\r\n   */\r\n  public questionFormReady(questionForm: FormGroup): void {\r\n    this.questionAccordionForm.setControl('question', questionForm);\r\n  }\r\n\r\n  /**\r\n   * Propagate child questionForm to questionAccordionForm\r\n   * @param questionForm questionForm\r\n   */\r\n  public childFormReady(questionForm: FormGroup): void {\r\n    this.children.push(questionForm);\r\n  }\r\n\r\n  public onAddAttachments(): void {\r\n    this.simpleFileUploadComponent.fileUploadComponent.openUploadBrowser();\r\n  }\r\n\r\n  private formValueChanged(value: any): void {\r\n    // Check if new answer fulfills the condition of this question\r\n    for (let i = 0; i < this.question.children.length; i++) {\r\n      const conditionChild: ConditionTreeInterface = this.question.children[i];\r\n      // set this so that UI can store whether to show follow up questions\r\n      conditionChild.conditionFulfilled = this.questionnaireUtilsService.getConditionFulfilled(\r\n        conditionChild,\r\n        this.question.questionDetails\r\n      );\r\n      this.questionAccordionForm.patchValue(\r\n        { conditionFulfilled: conditionChild.conditionFulfilled },\r\n        { emitEvent: false }\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  TaButtonsModule,\r\n  TaDropdownModule,\r\n  TaProgressbarModule,\r\n  TaRadioModule,\r\n  TaSvgIconModule,\r\n  TaToggleSwitchModule\r\n} from '@trustarc/ui-toolkit';\r\n\r\nimport { CommentsPopoverModule } from '../comments-popover';\r\nimport { SimpleFileUploadModule } from '../file-upload';\r\nimport { QuestionModule } from '../question';\r\nimport { QuestionMoreMenuComponent } from './components/question-more-menu/question-more-menu.component';\r\nimport { QuestionAccordionComponent } from './question-accordion.component';\r\n\r\nconst uiToolkitModules = [\r\n  TaRadioModule,\r\n  TaProgressbarModule,\r\n  TaSvgIconModule,\r\n  TaButtonsModule,\r\n  TaDropdownModule\r\n];\r\n\r\n@NgModule({\r\n  declarations: [QuestionAccordionComponent, QuestionMoreMenuComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    QuestionModule,\r\n    CommentsPopoverModule,\r\n    SimpleFileUploadModule,\r\n    TaToggleSwitchModule,\r\n    ...uiToolkitModules\r\n  ],\r\n  exports: [QuestionAccordionComponent, QuestionMoreMenuComponent]\r\n})\r\nexport class QuestionAccordionModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  OnInit\r\n} from '@angular/core';\r\n\r\nimport { TaskStatusEnum } from '../../enums';\r\n\r\n@Component({\r\n  selector: 'ta-task-status-tag',\r\n  templateUrl: './task-status-tag.component.html',\r\n  styleUrls: ['./task-status-tag.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TaskStatusTagComponent implements OnInit {\r\n  @Input() public taskStatus: TaskStatusEnum;\r\n\r\n  public taskStatusEnum = TaskStatusEnum;\r\n\r\n  constructor() {}\r\n\r\n  public ngOnInit(): void {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { TaskStatusTagComponent } from './task-status-tag.component';\r\n\r\n@NgModule({\r\n  declarations: [TaskStatusTagComponent],\r\n  imports: [CommonModule],\r\n  exports: [TaskStatusTagComponent]\r\n})\r\nexport class TaskStatusTagModule {}\r\n","import { HttpEventType } from '@angular/common/http';\r\nimport {\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { TaModal, ToastService } from '@trustarc/ui-toolkit';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, finalize } from 'rxjs/operators';\r\n\r\nimport { QuestionnaireViewModeEnum, TaskStatusEnum } from '../../enums';\r\nimport {\r\n  AnswerDetailResponseInterface,\r\n  AnswersFormInterface,\r\n  ConditionTreeInterface,\r\n  QuestionContainerViewPageInterface,\r\n  QuestionDetailResponseInterface,\r\n  QuestionFormInterface,\r\n  QuestionnaireInterface,\r\n  QuestionnaireSectionCounts,\r\n  QuestionTreeInterface\r\n} from '../../interfaces';\r\nimport { Attachment } from '../../models';\r\nimport {\r\n  DashBoardCommentControllerService,\r\n  DashBoardSurveyControllerService,\r\n  QuestionnaireUtilsService\r\n} from '../../services';\r\nimport {\r\n  generateErrorMessage,\r\n  getProgress,\r\n  isPropertyChanged\r\n} from '../../utils';\r\nimport { DeleteModalComponent } from '../delete-modal';\r\nimport {\r\n  SimpleFileUploadItem,\r\n  SimpleFileUploadItemContainer\r\n} from '../file-upload/simple-file-upload';\r\n\r\n@Component({\r\n  selector: 'ta-questionnaire-content',\r\n  templateUrl: './questionnaire-content.component.html',\r\n  styleUrls: ['./questionnaire-content.component.scss']\r\n})\r\nexport class QuestionnaireContentComponent\r\n  implements OnInit, OnDestroy, OnChanges {\r\n  @Input() public recordId: string;\r\n  @Input() public reviewMode: boolean;\r\n\r\n  public questionnaireViewModesEnum = QuestionnaireViewModeEnum;\r\n  public taskStatusEnum = TaskStatusEnum;\r\n\r\n  public questionnaire: QuestionnaireInterface;\r\n  public sections: QuestionContainerViewPageInterface[];\r\n\r\n  public selectedSection: QuestionContainerViewPageInterface;\r\n  public selectedSectionIndex = 0;\r\n  public totalQuestionsCount: number;\r\n  public totalAnswersCount: number;\r\n  public showActionStatus = false;\r\n  public selectedViewMode = QuestionnaireViewModeEnum.All;\r\n\r\n  private sectionForm: FormGroup;\r\n\r\n  private _sectionFormSubscription$: Subscription;\r\n  private _updateQuestionnaireCountsSubscription$: Subscription;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private dashBoardSurveyControllerService: DashBoardSurveyControllerService,\r\n    private dashBoardCommentControllerService: DashBoardCommentControllerService,\r\n    private questionnaireUtilsService: QuestionnaireUtilsService,\r\n    private router: Router,\r\n    private toastService: ToastService,\r\n    private modal: TaModal\r\n  ) {}\r\n\r\n  public ngOnInit() {}\r\n\r\n  public ngOnDestroy() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  public async ngOnChanges(changes: SimpleChanges) {\r\n    if (isPropertyChanged(changes.recordId)) {\r\n      if (this.recordId) {\r\n        try {\r\n          this.questionnaire = await this.dashBoardSurveyControllerService\r\n            .getQuestionContainerViewPages(this.recordId)\r\n            .toPromise();\r\n\r\n          this.questionnaire.questionContainerViewPages.forEach(item =>\r\n            this.initDefaultFileContainerInQuestions(item.questionTree)\r\n          );\r\n          this.sections = this.questionnaire.questionContainerViewPages;\r\n          this.selectSection(\r\n            this.sections[this.selectedSectionIndex],\r\n            this.selectedSectionIndex\r\n          );\r\n          this.updateQuestionnaireCounts();\r\n        } catch (error) {\r\n          this.toastService.error(\r\n            generateErrorMessage('Questionnaire load failed', error)\r\n          );\r\n        }\r\n\r\n        this.resetForm();\r\n      }\r\n    }\r\n\r\n    if (isPropertyChanged(changes.reviewMode)) {\r\n      this.questionnaireUtilsService.setReviewMode(this.reviewMode);\r\n    }\r\n  }\r\n\r\n  public get isSectionComplete(): boolean {\r\n    return this.selectedSection\r\n      ? this.selectedSection.totalActiveAnswerCount ===\r\n          this.selectedSection.totalActiveQuestionCount\r\n      : false;\r\n  }\r\n\r\n  public get isFirstSection(): boolean {\r\n    return this.selectedSectionIndex === 0;\r\n  }\r\n\r\n  public get isLastSection(): boolean {\r\n    return this.selectedSectionIndex === this.sections.length - 1;\r\n  }\r\n\r\n  private get sectionQuestions() {\r\n    return this.sectionForm.get('questions') as FormArray;\r\n  }\r\n\r\n  /**\r\n   * Adds question's individual form into questionnaireForm\r\n   * @param index question index\r\n   * @param questionForm FormGroup\r\n   */\r\n  public questionFormReady(questionForm: FormGroup) {\r\n    this.sectionQuestions.push(questionForm);\r\n  }\r\n\r\n  public selectViewMode(viewMode: QuestionnaireViewModeEnum) {\r\n    this.selectedViewMode = viewMode;\r\n    this.questionnaireUtilsService.changeViewMode(viewMode);\r\n  }\r\n\r\n  public selectSection(\r\n    section: QuestionContainerViewPageInterface,\r\n    sectionIndex: number\r\n  ) {\r\n    this.resetForm();\r\n    this.selectedSectionIndex = sectionIndex;\r\n    this.selectedSection = section;\r\n  }\r\n\r\n  public selectNextSection() {\r\n    this.selectedSectionIndex++;\r\n    this.selectedSection = this.sections[this.selectedSectionIndex];\r\n  }\r\n\r\n  public selectPrevSection() {\r\n    this.selectedSectionIndex--;\r\n    this.selectedSection = this.sections[this.selectedSectionIndex];\r\n  }\r\n\r\n  public isSelectedSection(section: QuestionContainerViewPageInterface) {\r\n    return section.id === this.selectedSection.id;\r\n  }\r\n\r\n  public submitQuestionnaire() {\r\n    this.postQuestionnaire(this.sectionForm.value, true);\r\n  }\r\n\r\n  public async exitQuestionnaire() {\r\n    await this.router.navigateByUrl(`tasks`);\r\n  }\r\n\r\n  public onAfterFilesSelected(\r\n    eventTuple: [QuestionTreeInterface, SimpleFileUploadItem[]]\r\n  ): void {\r\n    this.showActionStatus = true;\r\n    const selectedQuestion = eventTuple[0];\r\n    const files = eventTuple[1];\r\n    this.setFileContainer(selectedQuestion, {\r\n      isLoading: true,\r\n      progress: 0\r\n    } as SimpleFileUploadItemContainer);\r\n\r\n    this.dashBoardSurveyControllerService\r\n      .postAttachments$(\r\n        this.questionnaire.recordId,\r\n        selectedQuestion.nodeId,\r\n        files.map(f => f.file)\r\n      )\r\n      .subscribe(\r\n        result => {\r\n          switch (result.type) {\r\n            case HttpEventType.UploadProgress:\r\n              this.setFileContainer(selectedQuestion, {\r\n                progress: getProgress(result.loaded, result.total)\r\n              } as SimpleFileUploadItemContainer);\r\n              break;\r\n\r\n            case HttpEventType.Response:\r\n              this.showActionStatus = false;\r\n              this.setFileContainer(\r\n                selectedQuestion,\r\n                this.generateDefaultFileContainer()\r\n              );\r\n              this.setAttachments(selectedQuestion, result.body);\r\n              this.toastService.success('Attachment uploaded');\r\n              break;\r\n          }\r\n        },\r\n        error => {\r\n          this.showActionStatus = false;\r\n          this.resetToDefaultFileContainer(selectedQuestion);\r\n          this.toastService.error(\r\n            generateErrorMessage('File upload failed', error)\r\n          );\r\n        }\r\n      );\r\n  }\r\n\r\n  public onClickAttachment(attachment: Attachment): void {\r\n    this.dashBoardCommentControllerService\r\n      .getAttachmentDownloadUrl$(attachment.id)\r\n      .subscribe(\r\n        result => window.open(result),\r\n        error =>\r\n          this.toastService.error(\r\n            generateErrorMessage('Attachment load failed', error)\r\n          )\r\n      );\r\n  }\r\n\r\n  public openDeleteModal(\r\n    eventTuple: [QuestionTreeInterface, Attachment]\r\n  ): void {\r\n    const modalRef = this.modal.open(DeleteModalComponent, {\r\n      size: 'sm',\r\n      backdrop: 'static'\r\n    });\r\n\r\n    const instance = modalRef.componentInstance as DeleteModalComponent;\r\n    instance.title = 'Delete Attachment?';\r\n    instance.clickPrimary.subscribe(() => {\r\n      modalRef.close();\r\n      this.onDeleteAttachment(eventTuple);\r\n    });\r\n  }\r\n\r\n  public onDeleteAttachment(\r\n    eventTuple: [QuestionTreeInterface, Attachment]\r\n  ): void {\r\n    this.showActionStatus = true;\r\n    const selectedQuestion = eventTuple[0];\r\n    const attachment = eventTuple[1];\r\n    this.dashBoardSurveyControllerService\r\n      .deleteAttachment$(\r\n        this.questionnaire.recordId,\r\n        selectedQuestion.nodeId,\r\n        attachment.id\r\n      )\r\n      .pipe(\r\n        finalize(() => {\r\n          this.showActionStatus = false;\r\n        })\r\n      )\r\n      .subscribe(\r\n        result => {\r\n          this.setAttachments(\r\n            selectedQuestion,\r\n            selectedQuestion.questionDetails.attachments.filter(\r\n              item => item.id !== attachment.id\r\n            )\r\n          );\r\n          this.toastService.success('Attachment deleted');\r\n        },\r\n        error => {\r\n          this.resetToDefaultFileContainer(selectedQuestion);\r\n          this.toastService.error(\r\n            generateErrorMessage('Attachment delete failed', error)\r\n          );\r\n        }\r\n      );\r\n  }\r\n\r\n  private setFileContainer(\r\n    question: QuestionTreeInterface,\r\n    fileContainer: SimpleFileUploadItemContainer\r\n  ): void {\r\n    question.questionDetails = {\r\n      ...question.questionDetails,\r\n      fileContainer: {\r\n        ...question.questionDetails.fileContainer,\r\n        ...fileContainer\r\n      }\r\n    };\r\n  }\r\n\r\n  private setAttachments(\r\n    selectedQuestion: QuestionTreeInterface,\r\n    attachments: Attachment[]\r\n  ): void {\r\n    selectedQuestion.questionDetails.attachments = attachments;\r\n  }\r\n\r\n  private resetToDefaultFileContainer(question: QuestionTreeInterface): void {\r\n    this.setFileContainer(question, this.generateDefaultFileContainer());\r\n  }\r\n\r\n  private generateDefaultFileContainer(): SimpleFileUploadItemContainer {\r\n    return {\r\n      files: [],\r\n      progress: 0,\r\n      isLoading: false\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Make POST API call to save/submit survey.\r\n   * @param value Form value\r\n   * @param submitAction whether API should submit the survey for rules running. Used with 'submit' button\r\n   */\r\n  private postQuestionnaire(\r\n    value: AnswersFormInterface,\r\n    submitAction: boolean\r\n  ) {\r\n    this.showActionStatus = true;\r\n    let answers: AnswerDetailResponseInterface[] = [];\r\n    for (let i = 0; i < value.questions.length; i++) {\r\n      const questionDetails = value.questions[i];\r\n      answers = answers.concat(this.crawlAnswer(questionDetails));\r\n    }\r\n\r\n    // Submit just this question to the server\r\n    this.dashBoardSurveyControllerService\r\n      .postQuestionDetailResponses(answers, submitAction, this.recordId)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.showActionStatus = false;\r\n        })\r\n      )\r\n      .subscribe(async () => {\r\n        if (submitAction) {\r\n          await this.exitQuestionnaire();\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Recursive function that returns the total list of answers of the question and all its children.\r\n   * @param question question to crawl\r\n   */\r\n  private crawlAnswer(\r\n    questionDetails: QuestionFormInterface\r\n  ): AnswerDetailResponseInterface[] {\r\n    let answers: AnswerDetailResponseInterface[] = [];\r\n    const answer: QuestionDetailResponseInterface =\r\n      questionDetails.question.answer;\r\n    if (answer) {\r\n      // Add single choice answer item\r\n      const answerDetailText = answer.questionDetailResponsesChoice;\r\n      const questionDetailResponsesIds = [answer.questionDetailResponsesId];\r\n      const questionNodeId = questionDetails.question.questionId;\r\n\r\n      const answerPost: AnswerDetailResponseInterface = {\r\n        answerDetailText: answerDetailText,\r\n        questionDetailResponsesIds: questionDetailResponsesIds,\r\n        questionNodeId: questionNodeId,\r\n        answerDescription: questionDetails.question.answerDescription\r\n      };\r\n      answers.push(answerPost);\r\n    }\r\n    if (questionDetails.conditionFulfilled) {\r\n      for (let j = 0; j < questionDetails.children.length; j++) {\r\n        const child = questionDetails.children[j];\r\n        answers = answers.concat(this.crawlAnswer(child));\r\n      }\r\n    }\r\n    return answers;\r\n  }\r\n\r\n  /**\r\n   * Update the answered/unanswered counts across the whole page\r\n   * @param onlySelected Whether to update only selected section. Used when not updating the entire section list\r\n   */\r\n  private updateQuestionnaireCounts(onlySelected?: boolean) {\r\n    // Loop through all sections and generate counts\r\n    if (onlySelected) {\r\n      this.updateSectionCounts(this.selectedSection);\r\n    } else {\r\n      for (let i = 0; i < this.sections.length; i++) {\r\n        const section = this.sections[i];\r\n        this.updateSectionCounts(section);\r\n      }\r\n    }\r\n    this.updateTotalSectionCounts();\r\n  }\r\n\r\n  /**\r\n   * Update the total answered/unanswerd counts for the entire questionnaire, counting all sections\r\n   */\r\n  private updateTotalSectionCounts() {\r\n    let totalAnswersCount = 0;\r\n    let totalQuestionsCount = 0;\r\n    for (let i = 0; i < this.sections.length; i++) {\r\n      const section = this.sections[i];\r\n      totalAnswersCount += section.totalActiveAnswerCount;\r\n      totalQuestionsCount += section.totalActiveQuestionCount;\r\n    }\r\n    this.totalAnswersCount = totalAnswersCount;\r\n    this.totalQuestionsCount = totalQuestionsCount;\r\n  }\r\n\r\n  /**\r\n   * Update the answered/unanswered counts for the section\r\n   * @param section section form\r\n   */\r\n  private updateSectionCounts(section: QuestionContainerViewPageInterface) {\r\n    // Recursively navigate through each question and its children\r\n    const questionTree = section.questionTree;\r\n    let totalActiveQuestionCount = 0;\r\n    let totalActiveAnswerCount = 0;\r\n    for (let i = 0; i < questionTree.length; i++) {\r\n      const rootQuestion = questionTree[i];\r\n      const crawlCounts = this.crawlQuestion(rootQuestion);\r\n\r\n      totalActiveQuestionCount += crawlCounts.questionTotal;\r\n      totalActiveAnswerCount += crawlCounts.answerTotal;\r\n    }\r\n\r\n    // Update counts on UI\r\n    section.totalActiveQuestionCount = totalActiveQuestionCount;\r\n    section.totalActiveAnswerCount = totalActiveAnswerCount;\r\n  }\r\n\r\n  /**\r\n   * Recursive function that returns the total count of active child questions and itself.\r\n   * @param question question to crawl\r\n   */\r\n  private crawlQuestion(\r\n    question: QuestionTreeInterface\r\n  ): QuestionnaireSectionCounts {\r\n    // Loop through conditionChildren\r\n    let questionTotal = 0;\r\n    let answerTotal = 0;\r\n    if (question.children.length > 0) {\r\n      for (let i = 0; i < question.children.length; i++) {\r\n        const conditionChild: ConditionTreeInterface = question.children[i];\r\n        const conditionFulfilled = this.questionnaireUtilsService.getConditionFulfilled(\r\n          conditionChild,\r\n          question.questionDetails\r\n        );\r\n\r\n        if (conditionFulfilled) {\r\n          // If child condition is fulfilled, recurse into child\r\n          let crawlQuestionTotal = 0;\r\n          let crawlAnswerTotal = 0;\r\n          for (let j = 0; j < conditionChild.children.length; j++) {\r\n            const childQuestion = conditionChild.children[j];\r\n            const crawlCounts = this.crawlQuestion(childQuestion);\r\n            crawlQuestionTotal += crawlCounts.questionTotal;\r\n            crawlAnswerTotal += crawlCounts.answerTotal;\r\n          }\r\n          questionTotal += crawlQuestionTotal;\r\n          answerTotal += crawlAnswerTotal;\r\n        }\r\n      }\r\n    }\r\n    // Update counts for the question itself\r\n    questionTotal += 1;\r\n    if (\r\n      this.questionnaireUtilsService.getQuestionAnswer(question.questionDetails)\r\n    ) {\r\n      answerTotal += 1;\r\n    }\r\n\r\n    return { questionTotal: questionTotal, answerTotal: answerTotal };\r\n  }\r\n\r\n  /**\r\n   * Instantiate and subscribe to new section form\r\n   */\r\n  private resetForm() {\r\n    this.sectionForm = this.formBuilder.group({\r\n      questions: this.formBuilder.array([])\r\n    });\r\n    this.unsubscribe();\r\n    this._updateQuestionnaireCountsSubscription$ = this.sectionForm.valueChanges\r\n      .pipe(debounceTime(10))\r\n      .subscribe(value => {\r\n        this.updateQuestionnaireCounts(true);\r\n      });\r\n    this._sectionFormSubscription$ = this.sectionForm.valueChanges\r\n      .pipe(debounceTime(1000))\r\n      .subscribe(value => {\r\n        this.postQuestionnaire(value, false);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe from existing subscriptions\r\n   */\r\n  private unsubscribe() {\r\n    if (this._updateQuestionnaireCountsSubscription$) {\r\n      this._updateQuestionnaireCountsSubscription$.unsubscribe();\r\n    }\r\n    if (this._sectionFormSubscription$) {\r\n      this._sectionFormSubscription$.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private initDefaultFileContainerInQuestions(\r\n    questions: QuestionTreeInterface[]\r\n  ): void {\r\n    questions.forEach(question => {\r\n      question.questionDetails.fileContainer = this.generateDefaultFileContainer();\r\n      question.children.forEach(condition => {\r\n        this.initDefaultFileContainerInQuestions(condition.children);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  TaButtonsModule,\r\n  TaDropdownModule,\r\n  TaTabsetModule,\r\n  TaTagsModule,\r\n  TaTooltipModule\r\n} from '@trustarc/ui-toolkit';\r\n\r\nimport { DeleteModalModule } from '../delete-modal';\r\nimport { InitialIndicatorModule } from '../initial-indicator';\r\nimport { QuestionModule } from '../question';\r\nimport { QuestionAccordionModule } from '../question-accordion';\r\nimport { TaskStatusTagModule } from '../task-status-tag';\r\nimport { QuestionnaireContentComponent } from './questionnaire-content.component';\r\n\r\n@NgModule({\r\n  declarations: [QuestionnaireContentComponent],\r\n  imports: [\r\n    CommonModule,\r\n    QuestionModule,\r\n    QuestionAccordionModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TaButtonsModule,\r\n    TaTabsetModule,\r\n    TaDropdownModule,\r\n    TaTagsModule,\r\n    TaskStatusTagModule,\r\n    InitialIndicatorModule,\r\n    TaTooltipModule,\r\n    DeleteModalModule\r\n  ],\r\n  exports: [QuestionnaireContentComponent]\r\n})\r\nexport class QuestionnaireContentModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { TaActiveModal } from '@trustarc/ui-toolkit';\r\n\r\n@Component({\r\n  selector: 'ta-questionnaire-content-modal',\r\n  templateUrl: './questionnaire-content-modal.component.html',\r\n  styleUrls: ['./questionnaire-content-modal.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class QuestionnaireContentModalComponent implements OnInit {\r\n  @Input() public recordId: string;\r\n  @Input() public reviewMode: boolean;\r\n\r\n  constructor(public modalService: TaActiveModal) {}\r\n\r\n  public ngOnInit(): void {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  TaButtonsModule,\r\n  TaModalModule,\r\n  TaSvgIconModule\r\n} from '@trustarc/ui-toolkit';\r\n\r\nimport { QuestionnaireContentModule } from '../questionnaire-content';\r\nimport { QuestionnaireContentModalComponent } from './questionnaire-content-modal.component';\r\n\r\n@NgModule({\r\n  declarations: [QuestionnaireContentModalComponent],\r\n  imports: [\r\n    CommonModule,\r\n    TaButtonsModule,\r\n    TaSvgIconModule,\r\n    TaModalModule,\r\n    QuestionnaireContentModule\r\n  ],\r\n  exports: [QuestionnaireContentModalComponent],\r\n  entryComponents: [QuestionnaireContentModalComponent]\r\n})\r\nexport class QuestionnaireContentModalModule {}\r\n","import { Attachment } from './attachment.model';\r\n\r\nexport abstract class CommentBase {\r\n  id: string;\r\n  appName: string;\r\n  attachments: Attachment;\r\n  created: Date;\r\n  createdByFullName: string;\r\n  createdById: string;\r\n  entityId: string;\r\n  entityTitle: string;\r\n  entityType: string;\r\n  mentionedUsers: {\r\n    email: string;\r\n    firstName: string;\r\n    lastName: string;\r\n  }[];\r\n  messageText: string;\r\n  modifier: string;\r\n  sequenceNumber: number;\r\n  status: string;\r\n  version: number;\r\n}\r\n","import { CommentBase } from './comment-base.model';\r\nimport { CommentReply } from './comment-reply.model';\r\n\r\nexport class Comment extends CommentBase {\r\n  commentMessageReplies: CommentReply[];\r\n  isEditing: boolean;\r\n}\r\n","import { CommentBase } from './comment-base.model';\r\n\r\nexport class CommentReply extends CommentBase {\r\n  commentMessage: CommentBase;\r\n}\r\n","export class Assignee {\r\n  accountId: string;\r\n  userId: string;\r\n  externalUserName: string;\r\n  externalUserEmail: string;\r\n}\r\n","export class Attachment {\r\n  id: string;\r\n  created: Date;\r\n  region: string;\r\n  bucketName: string;\r\n  objectKey: string;\r\n  originalFileName: string;\r\n  version: string;\r\n  lastUpdated: Date;\r\n  createdBy: string;\r\n  lastUpdatedBy: string;\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["_.cloneDeep","_.cloneDeepWith","_.union","tslib_1.__extends"],"mappings":";;;;;;;;;;;;;SAGgB,cAAc,CAAC,KAAa,EAAE,MAAc;IAC1D,OAAO,KAAK,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;CACjE;AAED,SAAgB,oBAAoB,CAAC,OAAe,EAAE,SAAc;IAClE,OAAO,SAAS,IAAI,SAAS,CAAC,KAAK,IAAI,SAAS,CAAC,KAAK,CAAC,OAAO;UACvD,OAAO,UAAK,SAAS,CAAC,KAAK,CAAC,OAAO,MAAG;UACzC,OAAO,CAAC;CACb;AAED,SAAgB,UAAU,CAAC,KAAU,EAAE,KAAa,EAAE,IAAW;IAC/D,QACE,KAAK;QACL,IAAI,CAAC,SAAS,CACZ,UAAA,SAAS,IAAI,OAAA,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAA,CACjE,EACD;CACH;AAED,IAAa,MAAM,GAAG,UAAI,IAA8B,IAAa,OAAA,IAAI,GAAA,CAAC;AAE1E,SAAgB,OAAO,CACrB,KAAY,EACZ,GAAW;;IAEX,OAAO,CAAA,KAAC,EAAY,EAAC,MAAM,oBAAI,KAAK,CAAC,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,GAAG,CAAC,GAAA,CAAC,GAAE;CAC9D;AAED,SAAgB,aAAa;IAC3B,IAAM,cAAc,GAAG,IAAI,IAAI,EAAE,CAAC,iBAAiB,EAAE,CAAC;IACtD,IAAM,UAAU,GAAG,cAAc,GAAG,CAAC,CAAC;IACtC,IAAI,UAAU,GAAG,CAAC,cAAc,IAAI,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC;IAErE,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,QAAQ,EAAE,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QACrD,UAAU,GAAG,GAAG,GAAG,UAAU,CAAC;KAC/B;IAED,OAAO,UAAU,GAAG,GAAG,GAAG,GAAG,GAAG,UAAU,CAAC;CAC5C;AAED,SAAgB,WAAW,CAAC,QAAa;IACvC,OAAO,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CACjC,UAAA,IAAI,IAAI,OAAA,KAAK,CAAM,IAAI,CAAC,IAAI,IAAI,KAAK,QAAQ,GAAA,CAC9C,CAAC;CACH;AAED,SAAgB,iBAAiB,CAAC,YAA0B;IAC1D,QACE,YAAY,IAAI,YAAY,CAAC,aAAa,KAAK,YAAY,CAAC,YAAY,EACxE;CACH;AAED,SAAgB,QAAQ,CAAC,UAAe;IAAE,qBAAwB;SAAxB,UAAwB,EAAxB,qBAAwB,EAAxB,IAAwB;QAAxB,oCAAwB;;IAChE,SAAS,MAAM,CAAC,KAAU;QACxB,IAAI,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YACtC,WAAW,CAAC,OAAO,CAAC,UAAA,GAAG;gBACrB,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC;aACnB,CAAC,CAAC;SACJ;KACF;IAED,IAAM,gBAAgB,GAAGA,SAAW,CAAC,UAAU,CAAC,CAAC;IAEjD,OAAOC,aAAe,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;CAClD;AAED,SAAgB,WAAW,CAAC,MAAc,EAAE,KAAa;IACvD,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,KAAK,IAAI,GAAG,CAAC,CAAC;CAC3C;;;IC/CC;QAFiB,aAAQ,GAAG,GAAG,CAAC;KAEhB;IAET,4CAAQ,GAAf,eAA0B;IAEnB,+CAAW,GAAlB,UAAmB,OAAsB;QACvC,IAAI,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACnC,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;KACF;IAEO,8CAAU,GAAlB;QACE,IAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAClD,IAAI,CAAC,OAAO;YACV,UAAU,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;KACnE;IAEO,8CAAU,GAAlB,UAAmB,UAAoB;QACrC,OAAO,KAAG,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,cAAc,CAChE,UAAU,EACV,CAAC,CACA,CAAC;KACL;IAEO,kDAAc,GAAtB,UAAuB,UAAoB,EAAE,KAAa;QACxD,OAAO,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;KACjD;;gBAtCF,SAAS,SAAC;oBACT,QAAQ,EAAE,sBAAsB;oBAChC,8HAAiD;oBAEjD,eAAe,EAAE,uBAAuB,CAAC,MAAM;;iBAChD;;;;;uBAEE,KAAK;;IAgCR,gCAAC;CAvCD;;;ICNA;KAKsC;;gBALrC,QAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,yBAAyB,CAAC;oBACzC,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,OAAO,EAAE,CAAC,yBAAyB,CAAC;iBACrC;;IACoC,6BAAC;CALtC;;ICLa,sBAAsB,GAAG,CAAC,CAAC,CAAC;AACzC,IAAa,oBAAoB,GAAG,GAAG;;ICD1B,4BAA4B,GAAG,8BAA8B;;;ICE1E;KAgBC;IAfQ,iCAAS,GAAhB,UAAiB,GAAW;QAC1B,OAAO,kBAAkB,CAAC,GAAG,CAAC,CAAC;KAChC;IAEM,mCAAW,GAAlB,UAAmB,KAAa;QAC9B,OAAO,kBAAkB,CAAC,KAAK,CAAC,CAAC;KAClC;IAEM,iCAAS,GAAhB,UAAiB,GAAW;QAC1B,OAAO,kBAAkB,CAAC,GAAG,CAAC,CAAC;KAChC;IAEM,mCAAW,GAAlB,UAAmB,KAAa;QAC9B,OAAO,kBAAkB,CAAC,KAAK,CAAC,CAAC;KAClC;IACH,oBAAC;CAAA;;;ICFC,+BACU,UAAsB,EAEtB,wBAAgC;QAFhC,eAAU,GAAV,UAAU,CAAY;QAEtB,6BAAwB,GAAxB,wBAAwB,CAAQ;QANzB,QAAG,GAAM,IAAI,CAAC,wBAAwB,WAAQ,CAAC;QAC/C,YAAO,GAAG,EAAE,CAAC;KAM1B;IAEG,yCAAS,GAAhB,UACE,IAAY,EACZ,MAAqB;QAArB,uBAAA,EAAA,aAAqB;QAErB,IAAI,MAAM,GAAG,IAAI,UAAU,CAAC,EAAE,OAAO,EAAE,IAAI,aAAa,EAAE,EAAE,CAAC;aAC1D,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;aAC/B,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;QAE3C,IAAI,MAAM,EAAE;YACV,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;SAC1C;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAA0B,IAAI,CAAC,GAAG,EAAE;YAC5D,MAAM,QAAA;SACP,CAAC,CAAC;KACJ;;gBA5BF,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;gBAXQ,UAAU;6CAkBd,MAAM,SAAC,4BAA4B;;;gCAlBxC;CASA;;;ICoBE,8BACU,WAAwB,EACxB,qBAA4C;QAD5C,gBAAW,GAAX,WAAW,CAAa;QACxB,0BAAqB,GAArB,qBAAqB,CAAuB;QApBtC,uBAAkB,GAAG,EAAE,CAAC;QACxB,mBAAc,GAAG,KAAK,CAAC;QAEtB,kBAAa,GAAG,IAAI,YAAY,EAAO,CAAC;QACxC,kBAAa,GAAG,IAAI,YAAY,EAAO,CAAC;QAElD,gBAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC1C,OAAO,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;SACnC,CAAC,CAAC;QACI,mBAAc,GAAG;YACtB,WAAW,EAAE,GAAG;YAChB,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,mBAAmB;YAC7B,aAAa,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC;SAC/C,CAAC;QACK,iBAAY,GAAU,EAAE,CAAC;QACzB,YAAO,GAAG,KAAK,CAAC;KAKnB;IAEG,uCAAQ,GAAf;QACE,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;gBAC1B,OAAO,EAAE,IAAI,CAAC,kBAAkB;aACjC,CAAC,CAAC;SACJ;KACF;IAEM,uCAAQ,GAAf;QACE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KACjD;IAEM,uCAAQ,GAAf,UAAgB,KAAU;QACxB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;KAC3B;IAEM,wCAAS,GAAhB;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;KACrB;IAEM,2CAAY,GAAnB,eAA8B;IAEjB,yCAAU,GAAvB,UAAwB,UAAkB;;;;;4BAC1B,qBAAM,IAAI,CAAC,qBAAqB;6BAC3C,SAAS,CAAC,CAAC,EAAE,UAAU,CAAC;6BACxB,SAAS,EAAE,EAAA;;wBAFR,KAAK,GAAG,SAEA;wBACd,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC;;;;;KACnC;IAEM,wCAAS,GAAhB;QACE,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;KAC1B;IAEO,8CAAe,GAAvB,UAAwB,IAAS;QAC/B,OAAO,OAAK,IAAI,CAAC,iBAAiB,MAAG,CAAC;KACvC;;gBAhEF,SAAS,SAAC;oBACT,QAAQ,EAAE,iBAAiB;oBAC3B,myBAA4C;;iBAE7C;;;;gBARQ,WAAW;gBAEX,qBAAqB;;;qCAQ3B,KAAK;iCACL,KAAK;gCAEL,MAAM;gCACN,MAAM;;IAuDT,2BAAC;CAjED;;ICLY,qBAGX;AAHD,WAAY,qBAAqB;IAC/B,8CAAqB,CAAA;IACrB,sCAAa,CAAA;CACd,EAHW,qBAAqB,KAArB,qBAAqB,QAGhC;;ICHW,cAMX;AAND,WAAY,cAAc;IACxB,+BAAa,CAAA;IACb,4CAA0B,CAAA;IAC1B,wCAAsB,CAAA;IACtB,mCAAiB,CAAA;IACjB,oDAAkC,CAAA;CACnC,EANW,cAAc,KAAd,cAAc,QAMzB;AAED,WAAiB,cAAc;IAC7B,SAAgB,cAAc,CAAC,KAAqB;QAClD,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,QAAQ,KAAK;YACX,KAAK,cAAc,CAAC,IAAI;gBACtB,MAAM,GAAG,MAAM,CAAC;gBAChB,MAAM;YAER,KAAK,cAAc,CAAC,UAAU;gBAC5B,MAAM,GAAG,aAAa,CAAC;gBACvB,MAAM;YAER,KAAK,cAAc,CAAC,QAAQ;gBAC1B,MAAM,GAAG,WAAW,CAAC;gBACrB,MAAM;YAER,KAAK,cAAc,CAAC,MAAM;gBACxB,MAAM,GAAG,QAAQ,CAAC;gBAClB,MAAM;YAER,KAAK,cAAc,CAAC,cAAc;gBAChC,MAAM,GAAG,iBAAiB,CAAC;gBAC3B,MAAM;SACT;QAED,OAAO,MAAM,CAAC;KACf;IAzBe,6BAAc,iBAyB7B,CAAA;CACF,EA3BgB,cAAc,KAAd,cAAc,QA2B9B;;ICnCW,kBASX;AATD,WAAY,kBAAkB;IAC5B,2CAAqB,CAAA;IACrB,2EAAqD,CAAA;IACrD,kDAA4B,CAAA;IAC5B,sDAAgC,CAAA;IAChC,sDAAgC,CAAA;IAChC,iEAA2C,CAAA;IAC3C,yDAAmC,CAAA;IACnC,qCAAe,CAAA;CAChB,EATW,kBAAkB,KAAlB,kBAAkB,QAS7B;AAED,WAAiB,kBAAkB;IACjC,SAAgB,cAAc,CAAC,KAAyB;QACtD,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,QAAQ,KAAK;YACX,KAAK,kBAAkB,CAAC,QAAQ;gBAC9B,MAAM,GAAG,UAAU,CAAC;gBACpB,MAAM;YAER,KAAK,kBAAkB,CAAC,uBAAuB;gBAC7C,MAAM,GAAG,2BAA2B,CAAC;gBACrC,MAAM;YAER,KAAK,kBAAkB,CAAC,WAAW;gBACjC,MAAM,GAAG,cAAc,CAAC;gBACxB,MAAM;YAER,KAAK,kBAAkB,CAAC,aAAa;gBACnC,MAAM,GAAG,gBAAgB,CAAC;gBAC1B,MAAM;YAER,KAAK,kBAAkB,CAAC,aAAa;gBACnC,MAAM,GAAG,gBAAgB,CAAC;gBAC1B,MAAM;YAER,KAAK,kBAAkB,CAAC,kBAAkB;gBACxC,MAAM,GAAG,sBAAsB,CAAC;gBAChC,MAAM;YAER,KAAK,kBAAkB,CAAC,cAAc;gBACpC,MAAM,GAAG,kBAAkB,CAAC;gBAC5B,MAAM;YAER,KAAK,kBAAkB,CAAC,KAAK;gBAC3B,MAAM,GAAG,OAAO,CAAC;gBACjB,MAAM;YAER;gBACE,MAAM,GAAG,KAAK,CAAC;gBACf,MAAM;SACT;QAED,OAAO,MAAM,CAAC;KACf;IAzCe,iCAAc,iBAyC7B,CAAA;CACF,EA3CgB,kBAAkB,KAAlB,kBAAkB,QA2ClC;;ICtDW,gBAIX;AAJD,WAAY,gBAAgB;IAC1B,kDAA8B,CAAA;IAC9B,gDAA4B,CAAA;IAC5B,iCAAa,CAAA;CACd,EAJW,gBAAgB,KAAhB,gBAAgB,QAI3B;;ICJW,8BAIX;AAJD,WAAY,8BAA8B;IACxC,2DAAyB,CAAA;IACzB,uDAAqB,CAAA;IACrB,mDAAiB,CAAA;CAClB,EAJW,8BAA8B,KAA9B,8BAA8B,QAIzC;;ICJW,6BAGX;AAHD,WAAY,6BAA6B;IACvC,0DAAyB,CAAA;IACzB,sDAAqB,CAAA;CACtB,EAHW,6BAA6B,KAA7B,6BAA6B,QAGxC;;ICHW,yBAIX;AAJD,WAAY,yBAAyB;IACnC,wCAAW,CAAA;IACX,kDAAqB,CAAA;IACrB,sDAAyB,CAAA;CAC1B,EAJW,yBAAyB,KAAzB,yBAAyB,QAIpC;;;ICIC;QAFQ,aAAQ,GAAG,EAAE,CAAC;KAEN;IAEhB,sBAAW,uCAAW;aAAtB,UAAuB,QAAgB;YACrC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC1B;;;OAAA;IAED,sBAAW,uCAAW;aAAtB;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;SACtB;;;OAAA;;gBAdF,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;;yBAJD;CAEA;;;ICgBE,2CACU,UAAsB,EAEtB,wBAAgC;QAFhC,eAAU,GAAV,UAAU,CAAY;QAEtB,6BAAwB,GAAxB,wBAAwB,CAAQ;QALzB,QAAG,GAAM,IAAI,CAAC,wBAAwB,aAAU,CAAC;KAM9D;IAEG,wDAAY,GAAnB,UACE,QAAgB,EAChB,IAAgB,EAChB,OAAoB;QADpB,qBAAA,EAAA,QAAgB;QAChB,wBAAA,EAAA,YAAoB;QAEpB,IAAM,MAAM,GAAG,IAAI,UAAU,EAAE;aAC5B,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,GAAG,sBAAsB,EAAE,QAAQ,EAAE,CAAC;aAC1D,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;QAEtC,OAAO,IAAI,CAAC,UAAU;aACnB,GAAG,CAA4B,IAAI,CAAC,GAAG,SAAI,QAAU,EAAE;YACtD,MAAM,QAAA;SACP,CAAC;aACD,IAAI,CACH,GAAG,CAAC,UAAA,QAAQ;YACV,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,OAAgB;gBACxC,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC;aAC3B,CAAC,CAAC;YACH,OAAO,QAAQ,CAAC;SACjB,CAAC,CACH,CAAC;KACL;IAEM,0DAAc,GAArB,UACE,QAAgB,EAChB,UAAiC,EACjC,OAAe;QAEf,IAAM,IAAI,GAAG;YACX,QAAQ,UAAA;YACR,UAAU,YAAA;YACV,WAAW,EAAE,OAAO;SACrB,CAAC;QAEF,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAa,IAAI,CAAC,GAAG,SAAI,QAAU,EAAE,IAAI,CAAC,CAAC;KACvE;IAEM,0DAAc,GAArB,UACE,QAAgB,EAChB,UAAiC,EACjC,SAAiB,EACjB,OAAe;QAEf,IAAM,IAAI,GAAG;YACX,QAAQ,UAAA;YACR,UAAU,YAAA;YACV,WAAW,EAAE,OAAO;YACpB,EAAE,EAAE,SAAS;SACd,CAAC;QAEF,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CACtB,IAAI,CAAC,GAAG,SAAI,QAAQ,SAAI,SAAW,EACtC,IAAI,CACL,CAAC;KACH;IAEM,0DAAc,GAArB,UACE,QAAgB,EAChB,SAAiB;QAEjB,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CACxB,IAAI,CAAC,GAAG,SAAI,QAAQ,SAAI,SAAW,CACvC,CAAC;KACH;IAEM,yEAA6B,GAApC,UAAqC,MAAc;QACjD,OAAO,IAAI,CAAC,UAAU;aACnB,GAAG,CAAC,0BAAwB,MAAQ,CAAC;aACrC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC,CAAC;KACrD;IAEM,qEAAyB,GAAhC,UAAiC,YAAoB;QACnD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,qBAAgB,YAAY,SAAM,CAAC,CAAC;KAC3E;IAEO,4EAAgC,GAAxC,UAAyC,aAAa;QACpD,OAAO,aAAa,CAAC;KACtB;IAEM,uEAA2B,GAAlC,UACE,OAAwC,EACxC,YAAqB,EACrB,MAAc;;QAGd,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,OAAO;YAChB,YAAY,EAAE,YAAY;SAC3B,CAAC;QACF,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,0BAAwB,MAAQ,EAAE,WAAW,CAAC,CAAC;KAC5E;;gBAtGF,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;gBAdQ,UAAU;6CAoBd,MAAM,SAAC,4BAA4B;;;4CApBxC;CAYA;;;ICeE,kCACU,iCAAoE,EACrE,cAA8B;QAD7B,sCAAiC,GAAjC,iCAAiC,CAAmC;QACrE,mBAAc,GAAd,cAAc,CAAgB;QAThC,gBAAW,GAA2B,IAAI,CAAC;QAC3C,cAAS,GAAG,KAAK,CAAC;QAClB,iBAAY,GAAG,KAAK,CAAC;QAErB,gBAAW,GAA4B,IAAI,eAAe,CAAC,EAAE,CAAC,CAAC;KAMlE;IAEG,2CAAQ,GAAf,eAA0B;IAEnB,8CAAW,GAAlB;QACE,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACjC;KACF;IAEY,+CAAY,GAAzB;;;;;wBACE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;4BACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;yBACvB;6BAAM;4BACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;yBAC1B;wBACD,qBAAM,IAAI,CAAC,YAAY,EAAE,EAAA;;wBAAzB,SAAyB,CAAC;wBAC1B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;wBACvB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;;;;;KAC3B;IAEM,6CAAU,GAAjB,UAAkB,UAAkB;QAClC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KACnC;IAEM,6CAAU,GAAjB,UAAkB,OAAgB;QAChC,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,KAAK,GAAG,IAAI,CAAC;KACtD;IAEM,2CAAQ,GAAf,UAAgB,SAAc;QAC5B,IAAI,SAAS,EAAE;YACb,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;SACvC;KACF;IAEY,+CAAY,GAAzB,UAA0B,SAAc,EAAE,OAAgB;;;;;wBACxD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;wBACzB,qBAAM,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,EAAE,SAAS,CAAC,OAAO,CAAC,EAAA;;wBAAvD,SAAuD,CAAC;wBACxD,qBAAM,IAAI,CAAC,YAAY,EAAE,EAAA;;wBAAzB,SAAyB,CAAC;wBAC1B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;;;;;KAC3B;IAEY,gDAAa,GAA1B,UAA2B,OAAe;;;;;wBACxC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;wBACzB,qBAAM,IAAI,CAAC,iCAAiC;iCACzC,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,qBAAqB,CAAC,QAAQ,EAAE,OAAO,CAAC;iCACtE,SAAS,EAAE,EAAA;;wBAFd,SAEc,CAAC;wBACf,qBAAM,IAAI,CAAC,YAAY,EAAE,EAAA;;wBAAzB,SAAyB,CAAC;wBAC1B,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC;wBAChC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;;;;;KAC3B;IAEY,gDAAa,GAA1B,UACE,SAAiB,EACjB,OAAe;;;;4BAEf,qBAAM,IAAI,CAAC,iCAAiC;6BACzC,cAAc,CACb,IAAI,CAAC,QAAQ,EACb,qBAAqB,CAAC,QAAQ,EAC9B,SAAS,EACT,OAAO,CACR;6BACA,SAAS,EAAE,EAAA;;wBAPd,SAOc,CAAC;;;;;KAChB;IAEY,gDAAa,GAA1B,UAA2B,SAAiB;;;;;wBAC1C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;wBACzB,qBAAM,IAAI,CAAC,iCAAiC;iCACzC,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC;iCACxC,SAAS,EAAE,EAAA;;wBAFd,SAEc,CAAC;wBACf,qBAAM,IAAI,CAAC,YAAY,EAAE,EAAA;;wBAAzB,SAAyB,CAAC;wBAC1B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;;;;;KAC3B;IAEa,+CAAY,GAA1B;;;;;4BAGM,qBAAM,IAAI,CAAC,iCAAiC;6BAC7C,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC;6BAC3B,SAAS,EAAE,EAAA;;wBAJR,WAAW,GAEb,SAEU;wBACd,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;;;;;KAChC;;gBAtGF,SAAS,SAAC;oBACT,QAAQ,EAAE,qBAAqB;oBAC/B,kvIAAgD;;iBAEjD;;;;gBAPQ,iCAAiC;gBADjC,cAAc;;;2BAUpB,KAAK;iCAEL,SAAS,SAAC,gBAAgB;;IA+F7B,+BAAC;CAvGD;;;ICOA;KAiBqC;;gBAjBpC,QAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,wBAAwB,EAAE,oBAAoB,CAAC;oBAC9D,OAAO,EAAE;wBACP,YAAY;wBACZ,eAAe;wBACf,eAAe;wBACf,eAAe;wBACf,sBAAsB;wBACtB,gBAAgB;wBAChB,gBAAgB;wBAChB,WAAW;wBACX,mBAAmB;wBACnB,eAAe;wBACf,uBAAuB;qBACxB;oBACD,OAAO,EAAE,CAAC,wBAAwB,CAAC;iBACpC;;IACmC,4BAAC;CAjBrC;;;ICmBE,8BAAmB,YAA2B;QAA3B,iBAAY,GAAZ,YAAY,CAAe;QAb9B,gBAAW,GACzB,kFAAkF,CAAC;QACrE,sBAAiB,GAAG,QAAQ,CAAC;QAC7B,wBAAmB,GAAG,WAAW,CAAC;QAClC,qBAAgB,GAAG,QAAQ,CAAC;QAG3B,iBAAY,GAAG,IAAI,YAAY,EAAO,CAAC;QACvC,mBAAc,GAAG,IAAI,YAAY,EAAO,CAAC;QACzC,mBAAc,GAAG,IAAI,YAAY,EAAO,CAAC;KAIR;IAE3C,uCAAQ,GAAf,eAA0B;IAEnB,8CAAe,GAAtB;QAAA,iBAEC;QADC,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,gBAAgB,EAAE,GAAA,CAAC,CAAC;KAC3C;IAEM,4CAAa,GAApB;QACE,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QAC1C,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;KAC5B;IAEO,+CAAgB,GAAxB;QACG,IAAI,CAAC,aAAqB,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KACtD;;gBArCF,SAAS,SAAC;oBACT,QAAQ,EAAE,iBAAiB;oBAC3B,qsCAA4C;oBAE5C,aAAa,EAAE,iBAAiB,CAAC,IAAI;oBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;;iBAChD;;;;gBARQ,aAAa;;;wBAUnB,KAAK;8BACL,KAAK;oCAEL,KAAK;sCACL,KAAK;mCACL,KAAK;2CACL,KAAK;+BAEL,MAAM;iCACN,MAAM;iCACN,MAAM;gCAEN,SAAS,SAAC,eAAe;;IAkB5B,2BAAC;CAtCD;;;ICJA;KAMiC;;gBANhC,QAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,oBAAoB,CAAC;oBACpC,OAAO,EAAE,CAAC,YAAY,EAAE,eAAe,EAAE,eAAe,EAAE,aAAa,CAAC;oBACxE,OAAO,EAAE,CAAC,oBAAoB,CAAC;oBAC/B,eAAe,EAAE,CAAC,oBAAoB,CAAC;iBACxC;;IAC+B,wBAAC;CANjC;;;ICRA;KAGC;IAAD,6BAAC;CAAA;;;IC2BC;QAZqC,WAAM,GAAG,IAAI,CAAC;QAEnC,gBAAW,GAAU,EAAE,CAAC;QACxB,UAAK,GAA2B,EAAE,CAAC;QAKlC,qBAAgB,GAAG,IAAI,YAAY,EAAO,CAAC;QAC3C,oBAAe,GAAG,IAAI,YAAY,EAAO,CAAC;QAC1C,eAAU,GAAG,IAAI,YAAY,EAAU,CAAC;KAEzC;IAET,wCAAQ,GAAf,eAA0B;;gBArB3B,SAAS,SAAC;oBACT,QAAQ,EAAE,kBAAkB;oBAC5B,0nEAA6C;oBAE7C,eAAe,EAAE,uBAAuB,CAAC,MAAM;;iBAChD;;;;;yBAEE,WAAW,SAAC,eAAe;8BAE3B,KAAK;wBACL,KAAK;2BACL,KAAK;iCACL,KAAK;yBACL,KAAK;mCAEL,MAAM;kCACN,MAAM;6BACN,MAAM;;IAKT,4BAAC;CAtBD;;;ICNA;KAKkC;;gBALjC,QAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,qBAAqB,CAAC;oBACrC,OAAO,EAAE,CAAC,YAAY,EAAE,WAAW,EAAE,eAAe,EAAE,eAAe,CAAC;oBACtE,OAAO,EAAE,CAAC,qBAAqB,CAAC;iBACjC;;IACgC,yBAAC;CALlC;;;ICCE,uCAAsB,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;KAAI;IAJ9D,sBAAY,oEAAyB;aAArC;YACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;SAC5C;;;OAAA;IAID,oDAAY,GAAZ;QACE,IAAI,IAAI,CAAC,yBAAyB,EAAE;YAClC,OAAO;SACR;QAED,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;KACvC;IAED,8CAAM,GAAN;QACE,IAAI,IAAI,CAAC,yBAAyB,EAAE;YAClC,OAAO;SACR;QAED,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC;KACjC;IAED,qDAAa,GAAb;QACE,IAAI,IAAI,CAAC,yBAAyB,EAAE;YAClC,OAAO;SACR;QAED,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;KACxC;IAED,sDAAc,GAAd;QACE,IAAI,IAAI,CAAC,yBAAyB,EAAE;YAClC,OAAO;SACR;QAED,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC;KACzC;IAED,gDAAQ,GAAR;QACE,IAAI,IAAI,CAAC,yBAAyB,EAAE;YAClC,OAAO;SACR;QAED,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC;KACnC;IACH,oCAAC;CAAA;;ICvBY,MAAM,GAAoB;IACrC,GAAG,EAAE;QACH,IAAI,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC;QACrB,IAAI,EAAE;YACJ,YAAY;YACZ,WAAW;YACX,WAAW;YACX,iBAAiB;YACjB,mBAAmB;YACnB,aAAa;YACb,aAAa;YACb,0BAA0B;YAC1B,iBAAiB;SAClB;KACF;IACD,GAAG,EAAE;QACH,IAAI,EAAE,CAAC,KAAK,CAAC;QACb,IAAI,EAAE,CAAC,WAAW,EAAE,iBAAiB,EAAE,mBAAmB,CAAC;KAC5D;IACD,GAAG,EAAE;QACH,IAAI,EAAE,CAAC,KAAK,CAAC;QACb,IAAI,EAAE,CAAC,WAAW,EAAE,iBAAiB,EAAE,WAAW,CAAC;KACpD;IACD,GAAG,EAAE;QACH,IAAI,EAAE,CAAC,KAAK,CAAC;QACb,IAAI,EAAE;YACJ,6BAA6B;YAC7B,UAAU;YACV,iBAAiB;YACjB,mBAAmB;YACnB,0BAA0B;YAC1B,yBAAyB;YACzB,cAAc;SACf;KACF;IACD,GAAG,EAAE;QACH,IAAI,EAAE,CAAC,KAAK,CAAC;QACb,IAAI,EAAE,CAAC,2BAA2B,CAAC;KACpC;IACD,GAAG,EAAE;QACH,IAAI,EAAE,CAAC,KAAK,CAAC;QACb,IAAI,EAAE;YACJ,iBAAiB;YACjB,mBAAmB;YACnB,8BAA8B;YAC9B,0BAA0B;YAC1B,wBAAwB;YACxB,0BAA0B;YAC1B,iBAAiB;SAClB;KACF;IACD,GAAG,EAAE;QACH,IAAI,EAAE,CAAC,KAAK,CAAC;QACb,IAAI,EAAE;YACJ,YAAY;YACZ,iBAAiB;YACjB,kBAAkB;YAClB,cAAc;YACd,gBAAgB;YAChB,oBAAoB;SACrB;KACF;IACD,GAAG,EAAE;QACH,IAAI,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC;QACrB,IAAI,EAAE;YACJ,+BAA+B;YAC/B,iBAAiB;YACjB,wBAAwB;YACxB,yBAAyB;YACzB,qBAAqB;YACrB,kBAAkB;YAClB,oBAAoB;YACpB,sBAAsB;YACtB,yEAAyE;SAC1E;KACF;IACD,GAAG,EAAE;QACH,IAAI,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC;QACrB,IAAI,EAAE;YACJ,qCAAqC;YACrC,qBAAqB;YACrB,uBAAuB;YACvB,wBAAwB;YACxB,0BAA0B;YAC1B,qBAAqB;YACrB,4BAA4B;YAC5B,iBAAiB;YACjB,mEAAmE;SACpE;KACF;IACD,GAAG,EAAE;QACH,IAAI,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC;QACrB,IAAI,EAAE;YACJ,0CAA0C;YAC1C,0BAA0B;YAC1B,2BAA2B;YAC3B,wBAAwB;YACxB,8BAA8B;YAC9B,wBAAwB;YACxB,0BAA0B;YAC1B,iBAAiB;SAClB;KACF;IACD,GAAG,EAAE;QACH,IAAI,EAAE,CAAC,KAAK,CAAC;QACb,IAAI,EAAE;YACJ,iBAAiB;YACjB,mBAAmB;YACnB,UAAU;YACV,eAAe;YACf,oBAAoB;YACpB,iBAAiB;YACjB,uBAAuB;SACxB;KACF;IACD,GAAG,EAAE;QACH,IAAI,EAAE,CAAC,KAAK,CAAC;QACb,IAAI,EAAE;YACJ,iBAAiB;YACjB,mBAAmB;YACnB,qBAAqB;YACrB,sBAAsB;YACtB,UAAU;YACV,YAAY;SACb;KACF;IACD,GAAG,EAAE;QACH,IAAI,EAAE,CAAC,KAAK,CAAC;QACb,IAAI,EAAE,CAAC,UAAU,EAAE,4BAA4B,CAAC;KACjD;IACD,EAAE,EAAE;QACF,IAAI,EAAE,CAAC,IAAI,CAAC;QACZ,IAAI,EAAE,CAAC,0BAA0B,EAAE,iBAAiB,CAAC;KACtD;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,CAAC,MAAM,CAAC;QACd,IAAI,EAAE,CAAC,WAAW,EAAE,YAAY,CAAC;KAClC;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC;QACnB,IAAI,EAAE,EAAE;KACT;CACF;;;IC3JC;QACE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;IAKM,qDAAe,GAAtB,UAAuB,QAAgB,EAAE,WAAmB;QAC1D,OAAO,QAAQ,IAAI,WAAW,CAAC;KAChC;;;;IAKM,sDAAgB,GAAvB,UACE,IAAU,EACV,YAAoC;QAEpC,QACE,CAAC,YAAY,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;aACxC,YAAY,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aACzC,YAAY,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aACzC,YAAY,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aACzC,YAAY,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aACzC,YAAY,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aACzC,YAAY,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aACzC,YAAY,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aACzC,YAAY,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aACzC,YAAY,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aACzC,YAAY,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aACzC,YAAY,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aACzC,YAAY,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aACzC,YAAY,CAAC,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aACvC,YAAY,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;aAC3C,YAAY,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAC5C;KACH;IAEM,oDAAc,GAArB,UAAsB,YAAoC;QACxD,IAAM,IAAI,GAAG,EAAE,CAAC;QAChB,KAAK,IAAM,MAAM,IAAI,YAAY,EAAE;YACjC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;gBACvB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC;aACrC;SACF;QACD,OAAOC,KAAO,CAAC,IAAI,CAAC,CAAC;KACtB;IAEO,mDAAa,GAArB,UACE,SAAmB,EACnB,SAAmB,EACnB,IAAU;QAEV,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI;aACtB,KAAK,CAAC,GAAG,CAAC;aACV,GAAG,EAAE;aACL,WAAW,EAAE,CAAC;QAEjB,IAAM,UAAU,GACd,CAAC,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC;YAC3C,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAE9B,IAAM,WAAW,GAAG,IAAI,CAAC,IAAI,IAAI,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE/D,OAAO,UAAU,IAAI,WAAW,CAAC;KAClC;IAEO,+CAAS,GAAjB,UAAkB,IAAU;QAC1B,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC7E;IAEO,+CAAS,GAAjB,UAAkB,IAAU;QAC1B,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC7E;IAEO,+CAAS,GAAjB,UAAkB,IAAU;QAC1B,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC7E;IAEO,+CAAS,GAAjB,UAAkB,IAAU;QAC1B,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC7E;IAEO,+CAAS,GAAjB,UAAkB,IAAU;QAC1B,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC7E;IAEO,+CAAS,GAAjB,UAAkB,IAAU;QAC1B,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC7E;IAEO,+CAAS,GAAjB,UAAkB,IAAU;QAC1B,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC7E;IAEO,+CAAS,GAAjB,UAAkB,IAAU;QAC1B,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC7E;IAEO,+CAAS,GAAjB,UAAkB,IAAU;QAC1B,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC7E;IAEO,+CAAS,GAAjB,UAAkB,IAAU;QAC1B,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC7E;IAEO,+CAAS,GAAjB,UAAkB,IAAU;QAC1B,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC7E;IAEM,+CAAS,GAAhB,UAAiB,IAAU;QACzB,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC7E;IAEO,+CAAS,GAAjB,UAAkB,IAAU;QAC1B,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC7E;IAEO,8CAAQ,GAAhB,UAAiB,IAAU;QACzB,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC3E;IAEO,gDAAU,GAAlB,UAAmB,IAAU;QAC3B,OAAO,IAAI,CAAC,aAAa,CACvB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EACrB,IAAI,CACL,CAAC;KACH;IAEO,gDAAU,GAAlB,UAAmB,IAAU;QAC3B,OAAO,IAAI,CAAC,aAAa,CACvB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EACrB,IAAI,CACL,CAAC;KACH;;gBA7IF,UAAU;;;;IA8IX,kCAAC;CA9ID;;;ICuByCC,uCAA6B;IAqCpE,6BACY,iBAAoC,EACtC,2BAAwD,EACxD,YAA0B;QAHpC,YAKE,kBAAM,iBAAiB,CAAC,SACzB;QALW,uBAAiB,GAAjB,iBAAiB,CAAmB;QACtC,iCAA2B,GAA3B,2BAA2B,CAA6B;QACxD,kBAAY,GAAZ,YAAY,CAAc;QAjCpB,kBAAY,GAA2B;YACrD,GAAG,EAAE,KAAK;YACV,GAAG,EAAE,KAAK;YACV,GAAG,EAAE,KAAK;YACV,GAAG,EAAE,KAAK;YACV,GAAG,EAAE,KAAK;YACV,GAAG,EAAE,KAAK;YACV,GAAG,EAAE,KAAK;YACV,GAAG,EAAE,KAAK;YACV,GAAG,EAAE,KAAK;YACV,GAAG,EAAE,KAAK;YACV,GAAG,EAAE,KAAK;YACV,GAAG,EAAE,KAAK;YACV,GAAG,EAAE,KAAK;YACV,EAAE,EAAE,KAAK;YACT,IAAI,EAAE,KAAK;YACX,IAAI,EAAE,KAAK;SACZ,CAAC;QAGe,wBAAkB,GAAG,IAAI,YAAY,EAAU,CAAC;QAI1D,kBAAY,GAAG,KAAK,CAAC;QACrB,iBAAW,GAAa,EAAE,CAAC;QAC3B,WAAK,GAAW,EAAE,CAAC;QAElB,qBAAe,GAAa,UAAC,KAAU,KAAO,CAAC;;KAQtD;IAEM,sCAAQ,GAAf;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,2BAA2B,CAAC,cAAc,CAChE,IAAI,CAAC,YAAY,CAClB,CAAC;KACH;IAEM,wCAAU,GAAjB,UAAkB,CAAM;QACtB,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;IAEM,yCAAW,GAAlB,UAAmB,CAAM;QACvB,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;IAEM,yCAAW,GAAlB,UAAmB,KAAa;QAAhC,iBAgCC;QA/BC,IAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;QAC5C,IAAI,OAAO,GAAG,IAAI,CAAC;QAEnB,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE;YACtC,OAAO,GAAG,KAAK,CAAC;YAChB,IAAI,CAAC,YAAY,CAAC,KAAK,CACrB,4DAA0D,IAAI,CAAC,WAAW,CACxE,IAAI,CAAC,WAAW,CACjB,MAAG,CACL,CAAC;SACH;QAED,UAAU,CAAC,OAAO,CAAC,UAAC,IAAU,EAAE,KAAK;YACnC,IACE,CAAC,KAAI,CAAC,2BAA2B,CAAC,gBAAgB,CAChD,IAAI,EACJ,KAAI,CAAC,YAAY,CAClB,EACD;gBACA,OAAO,GAAG,KAAK,CAAC;gBAChB,KAAI,CAAC,YAAY,CAAC,KAAK,CAAI,IAAI,CAAC,IAAI,0BAAuB,CAAC,CAAC;aAC9D;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO;SACR;QAED,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACjC,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAC1C;IAEM,oCAAM,GAAb,UAAc,KAAU;QACtB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;KAC5C;IAEM,6CAAe,GAAtB,UAAuB,KAAU;QAC/B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACrC,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;KAC3B;IAEM,+CAAiB,GAAxB;QACE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KACtC;IAEM,8CAAgB,GAAvB,UAAwB,EAAE;QACxB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;KAC3B;IAEM,+CAAiB,GAAxB,eAAmC;IAE5B,wCAAU,GAAjB,UAAkB,KAAU;QAC1B,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACpB;KACF;IAEO,yCAAW,GAAnB,UAAoB,KAAa,EAAE,QAAY;QAAZ,yBAAA,EAAA,YAAY;QAC7C,IAAI,KAAK,KAAK,CAAC,EAAE;YACf,OAAO,SAAS,CAAC;SAClB;QAED,IAAM,CAAC,GAAG,IAAI,CAAC;QACf,IAAM,EAAE,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;QACvC,IAAM,KAAK,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAExE,IAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAEpD,OAAO,UAAU,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;KAC1E;IAEO,8CAAgB,GAAxB,UAAyB,KAAa;QACpC,IAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAEtC,OAAO,IAAI,CAAC,WAAW;cACnB,IAAI,CAAC,2BAA2B,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC;cACxE,IAAI,CAAC;KACV;IAEO,0CAAY,GAApB,UAAqB,KAAa;QAChC,OAAO,KAAK;aACT,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,GAAA,CAAC;aAChB,MAAM,CAAC,UAAC,SAAS,EAAE,QAAQ,IAAK,OAAA,SAAS,GAAG,QAAQ,GAAA,CAAC,CAAC;KAC1D;;gBAnKF,SAAS,SAAC;oBACT,QAAQ,EAAE,gBAAgB;oBAC1B,ymBAA2C;oBAE3C,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,SAAS,EAAE;wBACT;4BACE,OAAO,EAAE,iBAAiB;4BAC1B,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,mBAAmB,GAAA,CAAC;4BAClD,KAAK,EAAE,IAAI;yBACZ;qBACF;;iBACF;;;;gBA7BC,iBAAiB;gBAeV,2BAA2B;gBAJ3B,YAAY;;;qBAqBlB,KAAK;6BACL,KAAK;2BACL,KAAK;6BACL,KAAK;6BACL,KAAK;+BACL,KAAK;8BAkBL,KAAK;qCAEL,MAAM;4BAEN,SAAS,SAAC,WAAW;;IA0HxB,0BAAC;CAAA,CAvJwC,6BAA6B;;;ICrBtE;KAMgC;;gBAN/B,QAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,mBAAmB,CAAC;oBACnC,OAAO,EAAE,CAAC,YAAY,EAAE,eAAe,EAAE,eAAe,EAAE,eAAe,CAAC;oBAC1E,OAAO,EAAE,CAAC,mBAAmB,CAAC;oBAC9B,SAAS,EAAE,CAAC,2BAA2B,CAAC;iBACzC;;IAC8B,uBAAC;CANhC;;;ICkB+CA,6CAA6B;IA2B1E,mCAAsB,iBAAoC;QAA1D,YACE,kBAAM,iBAAiB,CAAC,SACzB;QAFqB,uBAAiB,GAAjB,iBAAiB,CAAmB;QAxB1C,gBAAU,GAAG,qCAAqC,CAAC;QACnD,cAAQ,GAAG,QAAQ,CAAC;QACpB,gBAAU,GAAG,kBAAkB,CAAC;QAChC,iBAAW,GAAU,EAAE,CAAC;QACxB,WAAK,GAA2B,EAAE,CAAC;QACnC,YAAM,GAA2B;YAC/C,iBAAiB,EAAE,kBAAkB;YACrC,MAAM,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE;SACjC,CAAC;QACc,gBAAU,GAAG,IAAI,CAAC;QAGlB,iBAAW,GAAG,OAAO,GAAG,GAAG,CAAC;QAG3B,wBAAkB,GAAG,IAAI,YAAY,EAEnD,CAAC;QACa,sBAAgB,GAAG,IAAI,YAAY,EAAO,CAAC;QAC3C,qBAAe,GAAG,IAAI,YAAY,EAAO,CAAC;;KAO1D;IAEM,wDAAoB,GAA3B,UAA4B,KAAa,EAAE,IAAa;QACtD,IAAM,UAAU,GAAG,KAAK,CAAC,GAAG,CAC1B,UAAA,IAAI,IAAI,QAAC,EAAE,IAAI,MAAA,EAAE,IAAI,MAAA,EAA2B,IAAA,CACjD,CAAC;QACF,IAAI,CAAC,KAAK,YAAO,IAAI,CAAC,KAAK,EAAK,UAAU,CAAC,CAAC;QAC5C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzC,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAEM,gDAAY,GAAnB,UAAoB,KAAa;QAC/B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzC,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAEM,qDAAiB,GAAxB,UAAyB,UAAe;QACtC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KACvC;IAEM,sDAAkB,GAAzB,UAA0B,UAAe;QACvC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KACxC;IAEM,8CAAU,GAAjB,UAAkB,KAAU;QAC1B,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACpB;KACF;IAEM,oDAAgB,GAAvB,eAAkC;IAE3B,qDAAiB,GAAxB,eAAmC;;gBA3EpC,SAAS,SAAC;oBACT,QAAQ,EAAE,uBAAuB;oBACjC,6zBAAkD;oBAElD,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,SAAS,EAAE;wBACT;4BACE,OAAO,EAAE,iBAAiB;4BAC1B,WAAW,EAAE,yBAAyB;4BACtC,KAAK,EAAE,IAAI;yBACZ;qBACF;;iBACF;;;;gBA1BC,iBAAiB;;;qBA6BhB,KAAK;6BACL,KAAK;2BACL,KAAK;6BACL,KAAK;8BACL,KAAK;wBACL,KAAK;yBACL,KAAK;6BAIL,KAAK;2BACL,KAAK;iCACL,KAAK;8BACL,KAAK;+BACL,KAAK;qCAEL,MAAM;mCAGN,MAAM;kCACN,MAAM;sCAEN,SAAS,SAAC,mBAAmB;;IAuChC,gCAAC;CAAA,CA/D8C,6BAA6B;;;IChB5E;KAcsC;;gBAdrC,QAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,yBAAyB,CAAC;oBACzC,OAAO,EAAE;wBACP,YAAY;wBACZ,gBAAgB;wBAChB,WAAW;wBACX,mBAAmB;wBACnB,eAAe;wBACf,eAAe;wBACf,eAAe;wBACf,kBAAkB;qBACnB;oBACD,OAAO,EAAE,CAAC,yBAAyB,CAAC;iBACrC;;IACoC,6BAAC;CAdtC;;;ICbA;KAGC;IAAD,2BAAC;CAAA;;;ICDD;KAIC;IAAD,oCAAC;CAAA;;;IC2BC;QAFgB,kCAA6B,GAAG,6BAA6B,CAAC;QAkBtE,aAAQ,GAAG,UAAC,CAAM,KAAO,CAAC;KAhBlB;IAET,uCAAQ,GAAf,eAA0B;IAEnB,+CAAgB,GAAvB,UAAwB,QAAyC;QAC/D,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;KACzB;IAEM,+CAAgB,GAAvB,UAAwB,EAAE;QACxB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KACpB;IAEM,gDAAiB,GAAxB,eAAmC;IAE5B,yCAAU,GAAjB,UAAkB,KAAU,KAAU;;gBAhCvC,SAAS,SAAC;oBACT,QAAQ,EAAE,iBAAiB;oBAC3B,g5BAA4C;oBAE5C,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,SAAS,EAAE;wBACT;4BACE,OAAO,EAAE,iBAAiB;4BAC1B,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,oBAAoB,GAAA,CAAC;4BACnD,KAAK,EAAE,IAAI;yBACZ;qBACF;;iBACF;;;;;2BAEE,KAAK;;IAqBR,2BAAC;CAnCD;;;ICuBE;QAFgB,mCAA8B,GAAG,8BAA8B,CAAC;QAwBxE,aAAQ,GAAG,UAAC,CAAM,KAAO,CAAC;KAtBlB;IAET,wCAAQ,GAAf,eAA0B;IAEnB,2CAAW,GAAlB,UAAmB,OAAsB;QACvC,IAAI,iBAAiB,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YACvC,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;KACF;IAEM,gDAAgB,GAAvB,UAAwB,QAAyC;QAC/D,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;KACzB;IAEM,gDAAgB,GAAvB,UAAwB,EAAE;QACxB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KACpB;IAEM,iDAAiB,GAAxB,eAAmC;IAE5B,0CAAU,GAAjB,UAAkB,KAAU,KAAU;IAI9B,0CAAU,GAAlB;QACE,IAAM,IAAI,GACR,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,uBAAuB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC3E,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;KAC9B;;gBAhDF,SAAS,SAAC;oBACT,QAAQ,EAAE,kBAAkB;oBAC5B,s1DAA6C;oBAE7C,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,SAAS,EAAE;wBACT;4BACE,OAAO,EAAE,iBAAiB;4BAC1B,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,qBAAqB,GAAA,CAAC;4BACpD,KAAK,EAAE,IAAI;yBACZ;qBACF;;iBACF;;;;;2BAGE,KAAK;;IAkCR,4BAAC;CAjDD;;;ICWE;QAoBQ,aAAQ,GAAG,UAAC,CAAM,KAAO,CAAC;KApBlB;IAET,gCAAQ,GAAf,eAA0B;IAEnB,qCAAa,GAApB,UAAqB,KAAa;QAChC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;KACtB;IAEM,wCAAgB,GAAvB,UAAwB,EAAE;QACxB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KACpB;IAEM,yCAAiB,GAAxB,eAAmC;IAE5B,kCAAU,GAAjB,UAAkB,KAAa;QAC7B,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACpB;KACF;;gBApCF,SAAS,SAAC;oBACT,QAAQ,EAAE,SAAS;oBACnB,wMAAoC;oBAEpC,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,SAAS,EAAE;wBACT;4BACE,OAAO,EAAE,iBAAiB;4BAC1B,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,aAAa,GAAA,CAAC;4BAC5C,KAAK,EAAE,IAAI;yBACZ;qBACF;;iBACF;;;;;2BAEE,KAAK;;IAyBR,oBAAC;CAvCD;;;ICOE,0CACU,UAAsB,EAEtB,wBAAgC;QAFhC,eAAU,GAAV,UAAU,CAAY;QAEtB,6BAAwB,GAAxB,wBAAwB,CAAQ;QALzB,QAAG,GAAM,IAAI,CAAC,wBAAwB,qBAAkB,CAAC;KAMtE;;;;IAKG,wEAA6B,GAApC,UACE,QAAgB;QAEhB,OAAO,IAAI,CAAC,UAAU;aACnB,GAAG,CAAI,IAAI,CAAC,GAAG,SAAI,QAAU,CAAC;aAC9B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC,CAAC;KACrD;IAEM,2DAAgB,GAAvB,UACE,QAAgB,EAChB,cAAsB,EACtB,KAAa;QAEb,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,KAAK,CAAC,OAAO,CAAC,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,MAAM,CAAC,iBAAiB,EAAE,IAAI,CAAC,GAAA,CAAC,CAAC;QAEhE,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CACtB,IAAI,CAAC,GAAG,SAAI,QAAQ,kBAAa,cAAc,iBAAc,EAChE,QAAQ,EACR;YACE,cAAc,EAAE,IAAI;YACpB,OAAO,EAAE,QAAQ;SAClB,CACF,CAAC;KACH;IAEM,4DAAiB,GAAxB,UACE,QAAgB,EAChB,cAAsB,EACtB,YAAoB;QAEpB,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAEzB,IAAI,CAAC,GAAG,SACN,QAAQ,kBAAa,cAAc,qBAAgB,YAAc,CACtE,CAAC;KACH;IAEO,2EAAgC,GAAxC,UAAyC,aAAa;QACpD,OAAO,aAAa,CAAC;KACtB;IAEM,sEAA2B,GAAlC,UACE,OAAwC,EACxC,YAAqB,EACrB,QAAgB;;QAGhB,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,OAAO;YAChB,YAAY,EAAE,YAAY;SAC3B,CAAC;QACF,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CACzB,0BAAwB,QAAU,EAClC,WAAW,CACZ,CAAC;KACH;;gBAvEF,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;gBAdQ,UAAU;6CAoBd,MAAM,SAAC,4BAA4B;;;2CApBxC;CAYA;;;ICQE;QAJQ,eAAU,GAAG,KAAK,CAAC;QACnB,aAAQ,GAAG,yBAAyB,CAAC,GAAG,CAAC;QACzC,sBAAiB,GAAG,IAAI,OAAO,EAAO,CAAC;KAE/B;;;;IAKT,iDAAa,GAApB;QACE,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;IAEM,iDAAa,GAApB,UAAqB,UAAmB;QACtC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;;;;IAKM,+CAAW,GAAlB;QACE,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IAEM,kDAAc,GAArB,UAAsB,QAAmC;QACvD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC5C;IAEM,yDAAqB,GAA5B;QACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;KAC9C;;;;;IAMM,qDAAiB,GAAxB,UAAyB,eAAyC;QAChE,QAAQ,eAAe,CAAC,kBAAkB;YACxC,KAAK,gBAAgB,CAAC,YAAY;;gBAEhC,IAAM,uBAAuB,GAAG,eAAe,CAAC,uBAAuB,CAAC;gBACxE,IAAI,uBAAuB,EAAE;oBAC3B,IAAM,gBAAgB,GAAG,uBAAuB,CAAC,IAAI,CAAC,UAAA,QAAQ;wBAC5D,OAAO,QAAQ,CAAC,+BAA+B,CAAC;qBACjD,CAAC,CAAC;oBAEH,IAAI,gBAAgB,EAAE;wBACpB,OAAO,gBAAgB,CAAC;qBACzB;iBACF;gBACD,MAAM;YACR,KAAK,gBAAgB,CAAC,IAAI;gBACxB,IAAM,YAAY,GAAG,eAAe,CAAC,wBAAwB,CAAC;gBAC9D,IAAI,YAAY,EAAE;oBAChB,OAAO,YAAY,CAAC;iBACrB;gBACD,MAAM;YACR;gBACE,MAAM;SACT;QACD,OAAO,IAAI,CAAC;KACb;;;;;IAMM,yDAAqB,GAA5B,UACE,aAAqC,EACrC,eAAyC;;;QAIzC,IAAM,gBAAgB,GAAoC,eAAe,CAAC,uBAAuB,CAAC,IAAI,CACpG,UAAA,QAAQ;YACN,OAAO,QAAQ,CAAC,+BAA+B,CAAC;SACjD,CACF,CAAC;QAEF,IACE,aAAa,CAAC,gBAAgB;YAC9B,aAAa,CAAC,gBAAgB,CAAC,yBAAyB,EACxD;YACA,IAAM,yBAAyB,GAC7B,aAAa,CAAC,gBAAgB,CAAC,yBAAyB,CAAC;;YAG3D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,yBAAyB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzD,IAAM,wBAAwB,GAAG,yBAAyB,CAAC,CAAC,CAAC,CAAC;gBAC9D,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,wBAAwB,EAAE,gBAAgB,CAAC,EAAE;oBACpE,OAAO,KAAK,CAAC;iBACd;aACF;YACD,OAAO,IAAI,CAAC;SACb;aAAM;YACL,OAAO,KAAK,CAAC;SACd;KACF;;;;;IAMO,kDAAc,GAAtB,UACE,wBAA2D,EAC3D,eAAoB;;QAGpB,IAAI,eAAe,IAAI,wBAAwB,CAAC,qBAAqB,EAAE;YACrE,IAAM,MAAM,GAAoC,eAAe,CAAC;YAChE,IAAM,kBAAkB,GAAG,MAAM,CAAC,yBAAyB,CAAC;YAC5D,IAAM,gBAAgB,GAAG,wBAAwB,CAAC,qBAAqB,CAAC;YAExE,IAAI,kBAAkB,KAAK,gBAAgB,EAAE;gBAC3C,OAAO,IAAI,CAAC;aACb;SACF;QACD,OAAO,KAAK,CAAC;KACd;;gBA3HF,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;;oCAdD;CAYA;;;IC0BE,2BACU,WAAwB,EACxB,yBAAoD;QADpD,gBAAW,GAAX,WAAW,CAAa;QACxB,8BAAyB,GAAzB,yBAAyB,CAA2B;QAxB9C,aAAQ,GAA0B;YAChD,MAAM,EAAE,IAAI;YACZ,QAAQ,EAAE,IAAI;YACd,eAAe,EAAE;gBACf,kBAAkB,EAAE,IAAI;gBACxB,kBAAkB,EAAE,IAAI;gBACxB,mBAAmB,EAAE,IAAI;gBACzB,uBAAuB,EAAE,EAAE;gBAC3B,oBAAoB,EAAE,IAAI;gBAC1B,sBAAsB,EAAE,IAAI;aACD;YAC7B,QAAQ,EAAE,EAAE;SACb,CAAC;QAEe,cAAS,GAAG,IAAI,YAAY,EAAa,CAAC;QAE3C,qBAAgB,GAAG,gBAAgB,CAAC;QAC7C,eAAU,GAAG,EAAE,CAAC;QASrB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACzC,MAAM,EAAE,IAAI;YACZ,UAAU,EAAE,IAAI;SACjB,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,yBAAyB,CAAC,WAAW,EAAE,CAAC;KAC9D;IAEM,oCAAQ,GAAf;QAAA,iBAeC;QAdC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAEvC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAA,GAAG;YACjD,OAAA,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,UAAA,KAAK;gBAC1D,OAAA,KAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC;aAAA,CACrC;SAAA,CACF,CAAC;QAEF,IAAI,CAAC,yBAAyB;aAC3B,qBAAqB,EAAE;aACvB,SAAS,CAAC,UAAC,QAAmC;YAC7C,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC1B,CAAC,CAAC;KACN;IAEM,6CAAiB,GAAxB;QACE,QAAQ,IAAI,CAAC,QAAQ;YACnB,KAAK,yBAAyB,CAAC,GAAG;gBAChC,OAAO,IAAI,CAAC;YACd,KAAK,yBAAyB,CAAC,QAAQ;gBACrC,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;YAClC,KAAK,yBAAyB,CAAC,UAAU;gBACvC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;YACnC;gBACE,OAAO,IAAI,CAAC;SACf;KACF;;;;IAKO,iDAAqB,GAA7B;QACE,IAAI,CAAC,YAAY,CAAC,UAAU,CAC1B;YACE,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM;YAChC,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,iBAAiB;SACnE,EACD,EAAE,SAAS,EAAE,KAAK,EAAE,CACrB,CAAC;QACF,IAAM,cAAc,GAAG,IAAI,CAAC,yBAAyB,CAAC,iBAAiB,CACrE,IAAI,CAAC,QAAQ,CAAC,eAAe,CAC9B,CAAC;QACF,IAAI,cAAc,EAAE;YAClB,IAAI,CAAC,YAAY,CAAC,UAAU,CAC1B;gBACE,MAAM,EAAE,cAAc;aACvB,EACD,EAAE,SAAS,EAAE,KAAK,EAAE,CACrB,CAAC;YACF,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC;YAChC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;SACtC;KACF;;;;;IAMO,oDAAwB,GAAhC,UAAiC,KAAU;QACzC,QAAQ,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,kBAAkB;YACtD,KAAK,gBAAgB,CAAC,YAAY;;gBAEhC,IAAM,uBAAuB,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe;qBAC1D,uBAAuB,CAAC;gBAC3B,IAAI,uBAAuB,EAAE;;oBAE3B,IAAM,YAAY,GAAG,uBAAuB,CAAC,IAAI,CAAC,UAAA,QAAQ;wBACxD,OAAO,QAAQ,CAAC,+BAA+B,CAAC;qBACjD,CAAC,CAAC;oBACH,IAAI,YAAY,EAAE;wBAChB,YAAY,CAAC,+BAA+B,GAAG,KAAK,CAAC;qBACtD;;oBAGD,IAAM,WAAW,GAAG,uBAAuB,CAAC,IAAI,CAAC,UAAA,QAAQ;wBACvD,QACE,QAAQ,CAAC,yBAAyB;4BAClC,KAAK,CAAC,yBAAyB,EAC/B;qBACH,CAAC,CAAC;oBACH,WAAW,CAAC,+BAA+B,GAAG,IAAI,CAAC;iBACpD;gBACD,MAAM;YAER,KAAK,gBAAgB,CAAC,WAAW;gBAC/B,IAAI,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,uBAAuB,EAAE;oBACzD,IAAM,sBAAsB,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,uBAAuB,CAAC,IAAI,CACvF,UAAA,QAAQ;wBACN,OAAA,QAAQ,CAAC,yBAAyB;4BAClC,KAAK,CAAC,yBAAyB;qBAAA,CAClC,CAAC;oBACF,sBAAsB,CAAC,+BAA+B,GAAG,CAAC,sBAAsB,CAAC,+BAA+B,CAAC;iBAClH;gBACD,MAAM;YAER,KAAK,gBAAgB,CAAC,IAAI;;gBAExB,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,wBAAwB,GAAG,KAAK,CAAC;gBAC/D,MAAM;YAER;gBACE,MAAM;SACT;;QAGD,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,EAAE;YACzB,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC;SACjC;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,KAAK,CAAC;SAClC;KACF;;gBAvJF,SAAS,SAAC;oBACT,QAAQ,EAAE,aAAa;oBACvB,i6BAAwC;;iBAEzC;;;;gBAbQ,WAAW;gBAOX,yBAAyB;;;2BAQ/B,KAAK;4BAcL,MAAM;;IAoIT,wBAAC;CAxJD;;;ICQA;KAqB8B;;gBArB7B,QAAQ,SAAC;oBACR,YAAY,EAAE;wBACZ,iBAAiB;wBACjB,oBAAoB;wBACpB,qBAAqB;wBACrB,aAAa;qBACd;oBACD,OAAO,EAAE;wBACP,YAAY;wBACZ,aAAa;wBACb,mBAAmB;wBACnB,WAAW;wBACX,eAAe;wBACf,eAAe;wBACf,gBAAgB;wBAChB,eAAe;wBACf,sBAAsB;wBACtB,mBAAmB;qBACpB;oBACD,OAAO,EAAE,CAAC,iBAAiB,CAAC;iBAC7B;;IAC4B,qBAAC;CArB9B;;;ICTE;KAAgB;IAET,4CAAQ,GAAf,eAA0B;;gBAT3B,SAAS,SAAC;oBACT,QAAQ,EAAE,uBAAuB;oBACjC,6bAAkD;oBAElD,eAAe,EAAE,uBAAuB,CAAC,MAAM;;iBAChD;;;;IAKD,gCAAC;CAVD;;;IC2DE,oCACU,WAAwB,EACxB,yBAAoD;QADpD,gBAAW,GAAX,WAAW,CAAa;QACxB,8BAAyB,GAAzB,yBAAyB,CAA2B;QAnC9C,aAAQ,GAA0B;YAChD,MAAM,EAAE,IAAI;YACZ,QAAQ,EAAE,IAAI;YACd,eAAe,EAAE;gBACf,kBAAkB,EAAE,IAAI;gBACxB,kBAAkB,EAAE,IAAI;gBACxB,mBAAmB,EAAE,IAAI;gBACzB,uBAAuB,EAAE,EAAE;gBAC3B,oBAAoB,EAAE,IAAI;gBAC1B,sBAAsB,EAAE,IAAI;aACD;YAC7B,QAAQ,EAAE,EAAE;SACb,CAAC;QAEe,cAAS,GAAG,IAAI,YAAY,EAAa,CAAC;QAC1C,uBAAkB,GAAG,IAAI,YAAY,EAEnD,CAAC;QACa,qBAAgB,GAAG,IAAI,YAAY,EAEjD,CAAC;QACa,oBAAe,GAAG,IAAI,YAAY,EAAc,CAAC;QAgBhE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAClD,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;YACpC,kBAAkB,EAAE,KAAK;SAC1B,CAAC,CAAC;KACJ;IAbD,sBAAY,gDAAQ;aAApB;YACE,OAAO,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,UAAU,CAAc,CAAC;SAChE;;;OAAA;IAaM,6CAAQ,GAAf;QAAA,iBAMC;QALC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QAChD,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,SAAS,CAAC,UAAA,KAAK;YACrD,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;SAC9B,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,yBAAyB,CAAC,aAAa,EAAE,CAAC;KAClE;;;;;IAMM,sDAAiB,GAAxB,UAAyB,YAAuB;QAC9C,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;KACjE;;;;;IAMM,mDAAc,GAArB,UAAsB,YAAuB;QAC3C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAClC;IAEM,qDAAgB,GAAvB;QACE,IAAI,CAAC,yBAAyB,CAAC,mBAAmB,CAAC,iBAAiB,EAAE,CAAC;KACxE;IAEO,qDAAgB,GAAxB,UAAyB,KAAU;;QAEjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtD,IAAM,cAAc,GAA2B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;;YAEzE,cAAc,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC,qBAAqB,CACtF,cAAc,EACd,IAAI,CAAC,QAAQ,CAAC,eAAe,CAC9B,CAAC;YACF,IAAI,CAAC,qBAAqB,CAAC,UAAU,CACnC,EAAE,kBAAkB,EAAE,cAAc,CAAC,kBAAkB,EAAE,EACzD,EAAE,SAAS,EAAE,KAAK,EAAE,CACrB,CAAC;SACH;KACF;;gBA5FF,SAAS,SAAC;oBACT,QAAQ,EAAE,uBAAuB;oBACjC,22HAAkD;;iBAEnD;;;;gBAlBmB,WAAW;gBAQtB,yBAAyB;;;2BAY/B,KAAK;4BAcL,MAAM;qCACN,MAAM;mCAGN,MAAM;kCAGN,MAAM;4CAEN,SAAS,SAAC,yBAAyB;;IAgEtC,iCAAC;CA7FD;;ACJA,IAAM,gBAAgB,GAAG;IACvB,aAAa;IACb,mBAAmB;IACnB,eAAe;IACf,eAAe;IACf,gBAAgB;CACjB,CAAC;AAEF;IAAA;KAcuC;;gBAdtC,QAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,0BAA0B,EAAE,yBAAyB,CAAC;oBACrE,OAAO;wBACL,YAAY;wBACZ,mBAAmB;wBACnB,WAAW;wBACX,cAAc;wBACd,qBAAqB;wBACrB,sBAAsB;wBACtB,oBAAoB;uBACjB,gBAAgB,CACpB;oBACD,OAAO,EAAE,CAAC,0BAA0B,EAAE,yBAAyB,CAAC;iBACjE;;IACqC,8BAAC;CAdvC;;;ICNE;QAFO,mBAAc,GAAG,cAAc,CAAC;KAEvB;IAET,yCAAQ,GAAf,eAA0B;;gBAb3B,SAAS,SAAC;oBACT,QAAQ,EAAE,oBAAoB;oBAC9B,2cAA+C;oBAE/C,eAAe,EAAE,uBAAuB,CAAC,MAAM;;iBAChD;;;;;6BAEE,KAAK;;IAOR,6BAAC;CAdD;;;ICJA;KAKmC;;gBALlC,QAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,sBAAsB,CAAC;oBACtC,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,OAAO,EAAE,CAAC,sBAAsB,CAAC;iBAClC;;IACiC,0BAAC;CALnC;;;ICmEE,uCACU,WAAwB,EACxB,gCAAkE,EAClE,iCAAoE,EACpE,yBAAoD,EACpD,MAAc,EACd,YAA0B,EAC1B,KAAc;QANd,gBAAW,GAAX,WAAW,CAAa;QACxB,qCAAgC,GAAhC,gCAAgC,CAAkC;QAClE,sCAAiC,GAAjC,iCAAiC,CAAmC;QACpE,8BAAyB,GAAzB,yBAAyB,CAA2B;QACpD,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAc;QAC1B,UAAK,GAAL,KAAK,CAAS;QAzBjB,+BAA0B,GAAG,yBAAyB,CAAC;QACvD,mBAAc,GAAG,cAAc,CAAC;QAMhC,yBAAoB,GAAG,CAAC,CAAC;QAGzB,qBAAgB,GAAG,KAAK,CAAC;QACzB,qBAAgB,GAAG,yBAAyB,CAAC,GAAG,CAAC;KAepD;IAEG,gDAAQ,GAAf,eAAoB;IAEb,mDAAW,GAAlB;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;IAEY,mDAAW,GAAxB,UAAyB,OAAsB;;;;;;;6BACzC,iBAAiB,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAnC,wBAAmC;6BACjC,IAAI,CAAC,QAAQ,EAAb,wBAAa;;;;wBAEb,KAAA,IAAI,CAAA;wBAAiB,qBAAM,IAAI,CAAC,gCAAgC;iCAC7D,6BAA6B,CAAC,IAAI,CAAC,QAAQ,CAAC;iCAC5C,SAAS,EAAE,EAAA;;wBAFd,GAAK,aAAa,GAAG,SAEP,CAAC;wBAEf,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,OAAO,CAAC,UAAA,IAAI;4BACxD,OAAA,KAAI,CAAC,mCAAmC,CAAC,IAAI,CAAC,YAAY,CAAC;yBAAA,CAC5D,CAAC;wBACF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC;wBAC9D,IAAI,CAAC,aAAa,CAChB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,EACxC,IAAI,CAAC,oBAAoB,CAC1B,CAAC;wBACF,IAAI,CAAC,yBAAyB,EAAE,CAAC;;;;wBAEjC,IAAI,CAAC,YAAY,CAAC,KAAK,CACrB,oBAAoB,CAAC,2BAA2B,EAAE,OAAK,CAAC,CACzD,CAAC;;;wBAGJ,IAAI,CAAC,SAAS,EAAE,CAAC;;;wBAIrB,IAAI,iBAAiB,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;4BACzC,IAAI,CAAC,yBAAyB,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;yBAC/D;;;;;KACF;IAED,sBAAW,4DAAiB;aAA5B;YACE,OAAO,IAAI,CAAC,eAAe;kBACvB,IAAI,CAAC,eAAe,CAAC,sBAAsB;oBACzC,IAAI,CAAC,eAAe,CAAC,wBAAwB;kBAC/C,KAAK,CAAC;SACX;;;OAAA;IAED,sBAAW,yDAAc;aAAzB;YACE,OAAO,IAAI,CAAC,oBAAoB,KAAK,CAAC,CAAC;SACxC;;;OAAA;IAED,sBAAW,wDAAa;aAAxB;YACE,OAAO,IAAI,CAAC,oBAAoB,KAAK,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;SAC/D;;;OAAA;IAED,sBAAY,2DAAgB;aAA5B;YACE,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAc,CAAC;SACvD;;;OAAA;;;;;;IAOM,yDAAiB,GAAxB,UAAyB,YAAuB;QAC9C,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAC1C;IAEM,sDAAc,GAArB,UAAsB,QAAmC;QACvD,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;QACjC,IAAI,CAAC,yBAAyB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;KACzD;IAEM,qDAAa,GAApB,UACE,OAA2C,EAC3C,YAAoB;QAEpB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC;QACzC,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;KAChC;IAEM,yDAAiB,GAAxB;QACE,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;KACjE;IAEM,yDAAiB,GAAxB;QACE,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;KACjE;IAEM,yDAAiB,GAAxB,UAAyB,OAA2C;QAClE,OAAO,OAAO,CAAC,EAAE,KAAK,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC;KAC/C;IAEM,2DAAmB,GAA1B;QACE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;KACtD;IAEY,yDAAiB,GAA9B;;;;4BACE,qBAAM,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,EAAA;;wBAAxC,SAAwC,CAAC;;;;;KAC1C;IAEM,4DAAoB,GAA3B,UACE,UAA2D;QAD7D,iBA6CC;QA1CC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAM,gBAAgB,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;QACvC,IAAM,KAAK,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,EAAE;YACtC,SAAS,EAAE,IAAI;YACf,QAAQ,EAAE,CAAC;SACqB,CAAC,CAAC;QAEpC,IAAI,CAAC,gCAAgC;aAClC,gBAAgB,CACf,IAAI,CAAC,aAAa,CAAC,QAAQ,EAC3B,gBAAgB,CAAC,MAAM,EACvB,KAAK,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,GAAA,CAAC,CACvB;aACA,SAAS,CACR,UAAA,MAAM;YACJ,QAAQ,MAAM,CAAC,IAAI;gBACjB,KAAK,aAAa,CAAC,cAAc;oBAC/B,KAAI,CAAC,gBAAgB,CAAC,gBAAgB,EAAE;wBACtC,QAAQ,EAAE,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,KAAK,CAAC;qBAClB,CAAC,CAAC;oBACpC,MAAM;gBAER,KAAK,aAAa,CAAC,QAAQ;oBACzB,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;oBAC9B,KAAI,CAAC,gBAAgB,CACnB,gBAAgB,EAChB,KAAI,CAAC,4BAA4B,EAAE,CACpC,CAAC;oBACF,KAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;oBACnD,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;oBACjD,MAAM;aACT;SACF,EACD,UAAA,KAAK;YACH,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,KAAI,CAAC,2BAA2B,CAAC,gBAAgB,CAAC,CAAC;YACnD,KAAI,CAAC,YAAY,CAAC,KAAK,CACrB,oBAAoB,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAClD,CAAC;SACH,CACF,CAAC;KACL;IAEM,yDAAiB,GAAxB,UAAyB,UAAsB;QAA/C,iBAUC;QATC,IAAI,CAAC,iCAAiC;aACnC,yBAAyB,CAAC,UAAU,CAAC,EAAE,CAAC;aACxC,SAAS,CACR,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAA,EAC7B,UAAA,KAAK;YACH,OAAA,KAAI,CAAC,YAAY,CAAC,KAAK,CACrB,oBAAoB,CAAC,wBAAwB,EAAE,KAAK,CAAC,CACtD;SAAA,CACJ,CAAC;KACL;IAEM,uDAAe,GAAtB,UACE,UAA+C;QADjD,iBAcC;QAXC,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,oBAAoB,EAAE;YACrD,IAAI,EAAE,IAAI;YACV,QAAQ,EAAE,QAAQ;SACnB,CAAC,CAAC;QAEH,IAAM,QAAQ,GAAG,QAAQ,CAAC,iBAAyC,CAAC;QACpE,QAAQ,CAAC,KAAK,GAAG,oBAAoB,CAAC;QACtC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC;YAC9B,QAAQ,CAAC,KAAK,EAAE,CAAC;YACjB,KAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;SACrC,CAAC,CAAC;KACJ;IAEM,0DAAkB,GAAzB,UACE,UAA+C;QADjD,iBAkCC;QA/BC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAM,gBAAgB,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;QACvC,IAAM,UAAU,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;QACjC,IAAI,CAAC,gCAAgC;aAClC,iBAAiB,CAChB,IAAI,CAAC,aAAa,CAAC,QAAQ,EAC3B,gBAAgB,CAAC,MAAM,EACvB,UAAU,CAAC,EAAE,CACd;aACA,IAAI,CACH,QAAQ,CAAC;YACP,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;SAC/B,CAAC,CACH;aACA,SAAS,CACR,UAAA,MAAM;YACJ,KAAI,CAAC,cAAc,CACjB,gBAAgB,EAChB,gBAAgB,CAAC,eAAe,CAAC,WAAW,CAAC,MAAM,CACjD,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,EAAE,KAAK,UAAU,CAAC,EAAE,GAAA,CAClC,CACF,CAAC;YACF,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;SACjD,EACD,UAAA,KAAK;YACH,KAAI,CAAC,2BAA2B,CAAC,gBAAgB,CAAC,CAAC;YACnD,KAAI,CAAC,YAAY,CAAC,KAAK,CACrB,oBAAoB,CAAC,0BAA0B,EAAE,KAAK,CAAC,CACxD,CAAC;SACH,CACF,CAAC;KACL;IAEO,wDAAgB,GAAxB,UACE,QAA+B,EAC/B,aAA4C;QAE5C,QAAQ,CAAC,eAAe,gBACnB,QAAQ,CAAC,eAAe,IAC3B,aAAa,eACR,QAAQ,CAAC,eAAe,CAAC,aAAa,EACtC,aAAa,IAEnB,CAAC;KACH;IAEO,sDAAc,GAAtB,UACE,gBAAuC,EACvC,WAAyB;QAEzB,gBAAgB,CAAC,eAAe,CAAC,WAAW,GAAG,WAAW,CAAC;KAC5D;IAEO,mEAA2B,GAAnC,UAAoC,QAA+B;QACjE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,4BAA4B,EAAE,CAAC,CAAC;KACtE;IAEO,oEAA4B,GAApC;QACE,OAAO;YACL,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,CAAC;YACX,SAAS,EAAE,KAAK;SACjB,CAAC;KACH;;;;;;IAOO,yDAAiB,GAAzB,UACE,KAA2B,EAC3B,YAAqB;QAFvB,iBAwBC;QApBC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,OAAO,GAAoC,EAAE,CAAC;QAClD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/C,IAAM,eAAe,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC3C,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC;SAC7D;;QAGD,IAAI,CAAC,gCAAgC;aAClC,2BAA2B,CAAC,OAAO,EAAE,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC;aACjE,IAAI,CACH,QAAQ,CAAC;YACP,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;SAC/B,CAAC,CACH;aACA,SAAS,CAAC;;;;6BACL,YAAY,EAAZ,wBAAY;wBACd,qBAAM,IAAI,CAAC,iBAAiB,EAAE,EAAA;;wBAA9B,SAA8B,CAAC;;;;;aAElC,CAAC,CAAC;KACN;;;;;IAMO,mDAAW,GAAnB,UACE,eAAsC;QAEtC,IAAI,OAAO,GAAoC,EAAE,CAAC;QAClD,IAAM,MAAM,GACV,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC;QAClC,IAAI,MAAM,EAAE;;YAEV,IAAM,gBAAgB,GAAG,MAAM,CAAC,6BAA6B,CAAC;YAC9D,IAAM,0BAA0B,GAAG,CAAC,MAAM,CAAC,yBAAyB,CAAC,CAAC;YACtE,IAAM,cAAc,GAAG,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC;YAE3D,IAAM,UAAU,GAAkC;gBAChD,gBAAgB,EAAE,gBAAgB;gBAClC,0BAA0B,EAAE,0BAA0B;gBACtD,cAAc,EAAE,cAAc;gBAC9B,iBAAiB,EAAE,eAAe,CAAC,QAAQ,CAAC,iBAAiB;aAC9D,CAAC;YACF,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC1B;QACD,IAAI,eAAe,CAAC,kBAAkB,EAAE;YACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACxD,IAAM,KAAK,GAAG,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC1C,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;aACnD;SACF;QACD,OAAO,OAAO,CAAC;KAChB;;;;;IAMO,iEAAyB,GAAjC,UAAkC,YAAsB;;QAEtD,IAAI,YAAY,EAAE;YAChB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SAChD;aAAM;YACL,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7C,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACjC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;aACnC;SACF;QACD,IAAI,CAAC,wBAAwB,EAAE,CAAC;KACjC;;;;IAKO,gEAAwB,GAAhC;QACE,IAAI,iBAAiB,GAAG,CAAC,CAAC;QAC1B,IAAI,mBAAmB,GAAG,CAAC,CAAC;QAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7C,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACjC,iBAAiB,IAAI,OAAO,CAAC,sBAAsB,CAAC;YACpD,mBAAmB,IAAI,OAAO,CAAC,wBAAwB,CAAC;SACzD;QACD,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;QAC3C,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;KAChD;;;;;IAMO,2DAAmB,GAA3B,UAA4B,OAA2C;;QAErE,IAAM,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;QAC1C,IAAI,wBAAwB,GAAG,CAAC,CAAC;QACjC,IAAI,sBAAsB,GAAG,CAAC,CAAC;QAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5C,IAAM,YAAY,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;YACrC,IAAM,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;YAErD,wBAAwB,IAAI,WAAW,CAAC,aAAa,CAAC;YACtD,sBAAsB,IAAI,WAAW,CAAC,WAAW,CAAC;SACnD;;QAGD,OAAO,CAAC,wBAAwB,GAAG,wBAAwB,CAAC;QAC5D,OAAO,CAAC,sBAAsB,GAAG,sBAAsB,CAAC;KACzD;;;;;IAMO,qDAAa,GAArB,UACE,QAA+B;;QAG/B,IAAI,aAAa,GAAG,CAAC,CAAC;QACtB,IAAI,WAAW,GAAG,CAAC,CAAC;QACpB,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACjD,IAAM,cAAc,GAA2B,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACpE,IAAM,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC,qBAAqB,CAC7E,cAAc,EACd,QAAQ,CAAC,eAAe,CACzB,CAAC;gBAEF,IAAI,kBAAkB,EAAE;;oBAEtB,IAAI,kBAAkB,GAAG,CAAC,CAAC;oBAC3B,IAAI,gBAAgB,GAAG,CAAC,CAAC;oBACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACvD,IAAM,aAAa,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBACjD,IAAM,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;wBACtD,kBAAkB,IAAI,WAAW,CAAC,aAAa,CAAC;wBAChD,gBAAgB,IAAI,WAAW,CAAC,WAAW,CAAC;qBAC7C;oBACD,aAAa,IAAI,kBAAkB,CAAC;oBACpC,WAAW,IAAI,gBAAgB,CAAC;iBACjC;aACF;SACF;;QAED,aAAa,IAAI,CAAC,CAAC;QACnB,IACE,IAAI,CAAC,yBAAyB,CAAC,iBAAiB,CAAC,QAAQ,CAAC,eAAe,CAAC,EAC1E;YACA,WAAW,IAAI,CAAC,CAAC;SAClB;QAED,OAAO,EAAE,aAAa,EAAE,aAAa,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC;KACnE;;;;IAKO,iDAAS,GAAjB;QAAA,iBAeC;QAdC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACxC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;SACtC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,uCAAuC,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY;aACzE,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;aACtB,SAAS,CAAC,UAAA,KAAK;YACd,KAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;SACtC,CAAC,CAAC;QACL,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY;aAC3D,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;aACxB,SAAS,CAAC,UAAA,KAAK;YACd,KAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;SACtC,CAAC,CAAC;KACN;;;;IAKO,mDAAW,GAAnB;QACE,IAAI,IAAI,CAAC,uCAAuC,EAAE;YAChD,IAAI,CAAC,uCAAuC,CAAC,WAAW,EAAE,CAAC;SAC5D;QACD,IAAI,IAAI,CAAC,yBAAyB,EAAE;YAClC,IAAI,CAAC,yBAAyB,CAAC,WAAW,EAAE,CAAC;SAC9C;KACF;IAEO,2EAAmC,GAA3C,UACE,SAAkC;QADpC,iBASC;QANC,SAAS,CAAC,OAAO,CAAC,UAAA,QAAQ;YACxB,QAAQ,CAAC,eAAe,CAAC,aAAa,GAAG,KAAI,CAAC,4BAA4B,EAAE,CAAC;YAC7E,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,SAAS;gBACjC,KAAI,CAAC,mCAAmC,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;aAC9D,CAAC,CAAC;SACJ,CAAC,CAAC;KACJ;;gBAteF,SAAS,SAAC;oBACT,QAAQ,EAAE,0BAA0B;oBACpC,gmLAAqD;;iBAEtD;;;;gBAvCmB,WAAW;gBAqB7B,gCAAgC;gBADhC,iCAAiC;gBAEjC,yBAAyB;gBArBlB,MAAM;gBACG,YAAY;gBAArB,OAAO;;;2BAwCb,KAAK;6BACL,KAAK;;IA+dR,oCAAC;CAveD;;;IC1BA;KAmB0C;;gBAnBzC,QAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,6BAA6B,CAAC;oBAC7C,OAAO,EAAE;wBACP,YAAY;wBACZ,cAAc;wBACd,uBAAuB;wBACvB,WAAW;wBACX,mBAAmB;wBACnB,eAAe;wBACf,cAAc;wBACd,gBAAgB;wBAChB,YAAY;wBACZ,mBAAmB;wBACnB,sBAAsB;wBACtB,eAAe;wBACf,iBAAiB;qBAClB;oBACD,OAAO,EAAE,CAAC,6BAA6B,CAAC;iBACzC;;IACwC,iCAAC;CAnB1C;;;ICEE,4CAAmB,YAA2B;QAA3B,iBAAY,GAAZ,YAAY,CAAe;KAAI;IAE3C,qDAAQ,GAAf,eAA0B;;gBAb3B,SAAS,SAAC;oBACT,QAAQ,EAAE,gCAAgC;oBAC1C,mjBAA2D;oBAE3D,aAAa,EAAE,iBAAiB,CAAC,IAAI;oBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;;iBAChD;;;;gBARQ,aAAa;;;2BAUnB,KAAK;6BACL,KAAK;;IAKR,yCAAC;CAdD;;;ICEA;KAY+C;;gBAZ9C,QAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,kCAAkC,CAAC;oBAClD,OAAO,EAAE;wBACP,YAAY;wBACZ,eAAe;wBACf,eAAe;wBACf,aAAa;wBACb,0BAA0B;qBAC3B;oBACD,OAAO,EAAE,CAAC,kCAAkC,CAAC;oBAC7C,eAAe,EAAE,CAAC,kCAAkC,CAAC;iBACtD;;IAC6C,sCAAC;CAZ/C;;;ICTA;KAoBC;IAAD,kBAAC;CAAA;;;ICnB4BA,2BAAW;IAAxC;;KAGC;IAAD,cAAC;CAHD,CAA6B,WAAW;;;ICDNA,gCAAW;IAA7C;;KAEC;IAAD,mBAAC;CAFD,CAAkC,WAAW;;;ICF7C;KAKC;IAAD,eAAC;CAAA;;;ICLD;KAWC;IAAD,iBAAC;CAAA;;ACXD;;GAEG;;;;"}
