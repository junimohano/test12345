import { Injectable } from '@angular/core';
import * as _ from 'lodash';
import { FORMAT } from './file-upload.model';
var FileUploadValidationService = /** @class */ (function () {
    function FileUploadValidationService() {
        this.format = FORMAT;
    }
    /**
     * Check file size. Return true if valid
     */
    FileUploadValidationService.prototype.isValidFileSize = function (fileSize, maxFileSize) {
        return fileSize <= maxFileSize;
    };
    /**
     * Check file mime or extension. Return true if valid
     */
    FileUploadValidationService.prototype.isValidExtension = function (file, formatConfig) {
        return ((formatConfig.jpg && this.isJpgFile(file)) ||
            (formatConfig.png && this.isPngFile(file)) ||
            (formatConfig.gif && this.isGifFile(file)) ||
            (formatConfig.csv && this.isCsvFile(file)) ||
            (formatConfig.tsv && this.isTsvFile(file)) ||
            (formatConfig.zip && this.isZipFile(file)) ||
            (formatConfig.txt && this.isTxtFile(file)) ||
            (formatConfig.doc && this.isDocFile(file)) ||
            (formatConfig.xsl && this.isXslFile(file)) ||
            (formatConfig.ppt && this.isPptFile(file)) ||
            (formatConfig.rtf && this.isRtfFile(file)) ||
            (formatConfig.pdf && this.isPdfFile(file)) ||
            (formatConfig.css && this.isCssFile(file)) ||
            (formatConfig.js && this.isJsFile(file)) ||
            (formatConfig.html && this.isHtmlFile(file)) ||
            (formatConfig.code && this.isCodeFile(file)));
    };
    FileUploadValidationService.prototype.getAllowedMime = function (formatConfig) {
        var mime = [];
        for (var format in formatConfig) {
            if (this.format[format]) {
                mime.push(this.format[format].mime);
            }
        }
        return _.union(mime);
    };
    FileUploadValidationService.prototype.checkFileWith = function (mimeTypes, validExts, file) {
        var fileExt = file.name
            .split('.')
            .pop()
            .toLowerCase();
        var isValidExt = (file.type === '' || mimeTypes.length === 0) &&
            validExts.includes(fileExt);
        var isValidMime = file.type && mimeTypes.includes(file.type);
        return isValidExt || isValidMime;
    };
    FileUploadValidationService.prototype.isJpgFile = function (file) {
        return this.checkFileWith(this.format.jpg.mime, this.format.jpg.exts, file);
    };
    FileUploadValidationService.prototype.isPngFile = function (file) {
        return this.checkFileWith(this.format.png.mime, this.format.png.exts, file);
    };
    FileUploadValidationService.prototype.isGifFile = function (file) {
        return this.checkFileWith(this.format.gif.mime, this.format.gif.exts, file);
    };
    FileUploadValidationService.prototype.isCsvFile = function (file) {
        return this.checkFileWith(this.format.csv.mime, this.format.csv.exts, file);
    };
    FileUploadValidationService.prototype.isTsvFile = function (file) {
        return this.checkFileWith(this.format.tsv.mime, this.format.tsv.exts, file);
    };
    FileUploadValidationService.prototype.isZipFile = function (file) {
        return this.checkFileWith(this.format.zip.mime, this.format.zip.exts, file);
    };
    FileUploadValidationService.prototype.isTxtFile = function (file) {
        return this.checkFileWith(this.format.txt.mime, this.format.txt.exts, file);
    };
    FileUploadValidationService.prototype.isDocFile = function (file) {
        return this.checkFileWith(this.format.doc.mime, this.format.doc.exts, file);
    };
    FileUploadValidationService.prototype.isXslFile = function (file) {
        return this.checkFileWith(this.format.xsl.mime, this.format.xsl.exts, file);
    };
    FileUploadValidationService.prototype.isPptFile = function (file) {
        return this.checkFileWith(this.format.ppt.mime, this.format.ppt.exts, file);
    };
    FileUploadValidationService.prototype.isRtfFile = function (file) {
        return this.checkFileWith(this.format.rtf.mime, this.format.rtf.exts, file);
    };
    FileUploadValidationService.prototype.isPdfFile = function (file) {
        return this.checkFileWith(this.format.pdf.mime, this.format.pdf.exts, file);
    };
    FileUploadValidationService.prototype.isCssFile = function (file) {
        return this.checkFileWith(this.format.css.mime, this.format.css.exts, file);
    };
    FileUploadValidationService.prototype.isJsFile = function (file) {
        return this.checkFileWith(this.format.js.mime, this.format.js.exts, file);
    };
    FileUploadValidationService.prototype.isHtmlFile = function (file) {
        return this.checkFileWith(this.format.html.mime, this.format.html.exts, file);
    };
    FileUploadValidationService.prototype.isCodeFile = function (file) {
        return this.checkFileWith(this.format.code.mime, this.format.code.exts, file);
    };
    FileUploadValidationService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    FileUploadValidationService.ctorParameters = function () { return []; };
    return FileUploadValidationService;
}());
export { FileUploadValidationService };
//# sourceMappingURL=data:application/json;base64,